./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘test_ptr’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:111:5: warning: implicit declaration of function ‘test_fail_message’ [-Wimplicit-function-declaration]
  111 |     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
      |     ^~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘ASN1_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  133 |             len = strlen(data);
      |                   ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../openssl.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  133 |             len = strlen(data);
      |                   ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: implicit declaration of function ‘OPENSSL_realloc’; did you mean ‘OPENSSL_malloc’? [-Wimplicit-function-declaration]
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^~~~~~~~~~~~~~~
      |                     OPENSSL_malloc
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: assignment to ‘unsigned char *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  145 |         memcpy(str->data, data, len);
      |         ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘asn1_string_set_uint64’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:158:11: warning: implicit declaration of function ‘asn1_put_uint64’ [-Wimplicit-function-declaration]
  158 |     off = asn1_put_uint64(tbuf, r);
      |           ^~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: implicit declaration of function ‘is_utc’ [-Wimplicit-function-declaration]
  179 |         if (is_utc(ts->tm_year))
      |             ^~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: implicit declaration of function ‘ASN1_STRING_new’; did you mean ‘ASN1_STRING_set’? [-Wimplicit-function-declaration]
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^~~~~~~~~~~~~~~
      |                ASN1_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: assignment to ‘ASN1_TIME *’ {aka ‘struct asn1_string_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: implicit declaration of function ‘BIO_snprintf’; did you mean ‘vsnprintf’? [-Wimplicit-function-declaration]
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^~~~~~~~~~~~
      |                        vsnprintf
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: implicit declaration of function ‘ASN1_STRING_free’; did you mean ‘ASN1_STRING_set’? [-Wimplicit-function-declaration]
  217 |         ASN1_STRING_free(tmps);
      |         ^~~~~~~~~~~~~~~~
      |         ASN1_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10: warning: implicit declaration of function ‘OPENSSL_gmtime’; did you mean ‘OPENSSL_free’? [-Wimplicit-function-declaration]
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |          ^~~~~~~~~~~~~~
      |          OPENSSL_free
./benchmarks/openssl/leak_1/openssl_leak_1.c:227:8: warning: assignment to ‘struct tm *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  227 |     ts = OPENSSL_gmtime(&t, &data);
      |        ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: implicit declaration of function ‘OPENSSL_gmtime_adj’ [-Wimplicit-function-declaration]
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘X509_NAME_add_entry_by_NID’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:10: warning: implicit declaration of function ‘X509_NAME_ENTRY_create_by_NID’; did you mean ‘X509_NAME_add_entry_by_NID’? [-Wimplicit-function-declaration]
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |          X509_NAME_add_entry_by_NID
./benchmarks/openssl/leak_1/openssl_leak_1.c:249:8: warning: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  249 |     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
      |        ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: implicit declaration of function ‘X509_NAME_add_entry’; did you mean ‘X509_NAME_ENTRY’? [-Wimplicit-function-declaration]
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^~~~~~~~~~~~~~~~~~~
      |           X509_NAME_ENTRY
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: implicit declaration of function ‘X509_NAME_ENTRY_free’; did you mean ‘X509_NAME_ENTRY’? [-Wimplicit-function-declaration]
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^~~~~~~~~~~~~~~~~~~~
      |     X509_NAME_ENTRY
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘OCSP_basic_add1_status’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: implicit declaration of function ‘sk_OCSP_SINGLERESP_new_null’ [-Wimplicit-function-declaration]
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: assignment to ‘OCSP_SINGLERESP *’ {aka ‘struct ocsp_single_response_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: implicit declaration of function ‘OCSP_CERTID_dup’ [-Wimplicit-function-declaration]
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: assignment to ‘OCSP_CERTID *’ {aka ‘struct ocsp_cert_id_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: implicit declaration of function ‘sk_OCSP_SINGLERESP_push’ [-Wimplicit-function-declaration]
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:280:5: warning: implicit declaration of function ‘OCSP_SINGLERESP_free’ [-Wimplicit-function-declaration]
  280 |     OCSP_SINGLERESP_free(single);
      |     ^~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: implicit declaration of function ‘OCSP_BASICRESP_new’ [-Wimplicit-function-declaration]
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: initialization of ‘OCSP_BASICRESP *’ {aka ‘struct ocsp_basic_response_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:46: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                                              ^~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: implicit declaration of function ‘X509_NAME_new’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^~~~~~~~~~~~~
      |                       X509_NAME
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: initialization of ‘void *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: implicit declaration of function ‘ASN1_BIT_STRING_new’; did you mean ‘ASN1_BIT_STRING_set’? [-Wimplicit-function-declaration]
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^~~~~~~~~~~~~~~~~~~
      |                            ASN1_BIT_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: initialization of ‘ASN1_BIT_STRING *’ {aka ‘struct asn1_string_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: implicit declaration of function ‘ASN1_INTEGER_new’; did you mean ‘V_ASN1_INTEGER’? [-Wimplicit-function-declaration]
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^~~~~~~~~~~~~~~~
      |                            V_ASN1_INTEGER
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: initialization of ‘ASN1_INTEGER *’ {aka ‘struct asn1_string_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: implicit declaration of function ‘OCSP_cert_id_new’ [-Wimplicit-function-declaration]
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:28: warning: implicit declaration of function ‘EVP_sha256’; did you mean ‘LN_sha256’? [-Wimplicit-function-declaration]
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |                            ^~~~~~~~~~
      |                            LN_sha256
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: assignment to ‘OCSP_CERTID *’ {aka ‘struct ocsp_cert_id_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: implicit declaration of function ‘ASN1_TIME_free’; did you mean ‘ASN1_TIME_set’? [-Wimplicit-function-declaration]
  310 |     ASN1_TIME_free(thisupd);
      |     ^~~~~~~~~~~~~~
      |     ASN1_TIME_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: implicit declaration of function ‘ASN1_BIT_STRING_free’; did you mean ‘ASN1_BIT_STRING_set’? [-Wimplicit-function-declaration]
  312 |     ASN1_BIT_STRING_free(key);
      |     ^~~~~~~~~~~~~~~~~~~~
      |     ASN1_BIT_STRING_set
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: implicit declaration of function ‘ASN1_INTEGER_free’ [-Wimplicit-function-declaration]
  313 |     ASN1_INTEGER_free(serial);
      |     ^~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: implicit declaration of function ‘OCSP_CERTID_free’ [-Wimplicit-function-declaration]
  314 |     OCSP_CERTID_free(cid);
      |     ^~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: implicit declaration of function ‘X509_NAME_free’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
  315 |     X509_NAME_free(name);
      |     ^~~~~~~~~~~~~~
      |     X509_NAME
./benchmarks/openssl/leak_1/openssl_leak_1.c: In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:330:23: warning: implicit declaration of function ‘get_cert_and_key’ [-Wimplicit-function-declaration]
  330 |         || !TEST_true(get_cert_and_key(&signer, &key))
      |                       ^~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:23: warning: implicit declaration of function ‘OCSP_basic_sign’ [-Wimplicit-function-declaration]
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |                       ^~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:56: warning: implicit declaration of function ‘EVP_sha1’ [-Wimplicit-function-declaration]
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |                                                        ^~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: implicit declaration of function ‘OCSP_BASICRESP_free’ [-Wimplicit-function-declaration]
  334 |     OCSP_BASICRESP_free(bs);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:20: warning: implicit declaration of function ‘OCSP_resp_get0_signer’ [-Wimplicit-function-declaration]
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |                    ^~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:105:66: note: in definition of macro ‘TEST_true’
  105 | # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
      |                                                                  ^
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: implicit declaration of function ‘TEST_int_eq’ [-Wimplicit-function-declaration]
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^~~~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:25: warning: implicit declaration of function ‘X509_cmp’ [-Wimplicit-function-declaration]
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |                         ^~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: implicit declaration of function ‘X509_free’ [-Wimplicit-function-declaration]
  347 |     X509_free(signer);
      |     ^~~~~~~~~
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: implicit declaration of function ‘EVP_PKEY_free’ [-Wimplicit-function-declaration]
  348 |     EVP_PKEY_free(key);
      |     ^~~~~~~~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.0%|          |
nothrow                          |      |      |      |      |     -1.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
=======node_fun:make_dummy_resp=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
=======node_fun:OCSP_basic_add1_status=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
succs:= 5
succs:= 6
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
succs:= 6
succs:= 7
succs:= 8
succs:= 9
succs:= 7
succs:= 2
succs:= 3
succs:= 4
succs:= 2
succs:= 3
succs:= 4
succs:= 6
succs:= 8
succs:= 7
succs:= 8
=======node_fun:X509_NAME_add_entry_by_NID=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:ASN1_TIME_set=========

=======node_fun:ASN1_TIME_adj=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 4
succs:= 2
succs:= 4
=======node_fun:asn1_time_from_tm=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 5
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 3
succs:= 6
succs:= 7
succs:= 8
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 10
succs:= 12
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 13
succs:= 13
succs:= 14
--------GIMPLE Cond -------
succs:= 15
succs:= 15
succs:= 7
succs:= 9
succs:= 14
--------GIMPLE Cond -------
succs:= 18
succs:= 12
succs:= 18
=======node_fun:ASN1_BIT_STRING_set=========

=======node_fun:ASN1_STRING_set=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 2
--------GIMPLE Cond -------
succs:= 9
succs:= 10
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 3
succs:= 9
=======node_fun:test_true=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:test_ptr=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 0 
===============The second stage : Mapping stmt=================
# .MEM_57 = VDEF <.MEM_56>
bs_40 = make_dummy_resp ();
# .MEM_58 = VDEF <.MEM_57>
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
# .MEM_59 = VDEF <.MEM_58>
_2 = get_cert_and_key (&signer, &key);
# .MEM_60 = VDEF <.MEM_59>
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
# .MEM_61 = VDEF <.MEM_60>
_6 = EVP_sha1 ();
# .MEM_62 = VDEF <.MEM_61>
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
# .MEM_63 = VDEF <.MEM_62>
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
# .MEM_64 = VDEF <.MEM_63>
OCSP_BASICRESP_free (bs_40);
# .MEM_65 = VDEF <.MEM_64>
bs_49 = make_dummy_resp ();
# .MEM_67 = VDEF <.MEM_66>
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
# .MEM_68 = VDEF <.MEM_67>
_14 = EVP_sha1 ();
# .MEM_69 = VDEF <.MEM_68>
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
# .MEM_70 = VDEF <.MEM_69>
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
# .MEM_71 = VDEF <.MEM_70>
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
# .MEM_72 = VDEF <.MEM_71>
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);
# .MEM_74 = VDEF <.MEM_73>
_28 = TEST_int_eq (_27, 0);
# .MEM_75 = VDEF <.MEM_74>
OCSP_BASICRESP_free (bs_49);
# .MEM_76 = VDEF <.MEM_75>
X509_free (_29);
# .MEM_77 = VDEF <.MEM_76>
EVP_PKEY_free (_30);
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();
# .MEM_60 = VDEF <.MEM_59>
_3 = time (0B);
# .MEM_61 = VDEF <.MEM_60>
thisupd_38 = ASN1_TIME_set (0B, _4);
# .MEM_62 = VDEF <.MEM_61>
_5 = time (0B);
# .MEM_63 = VDEF <.MEM_62>
nextupd_41 = ASN1_TIME_set (0B, _7);
# .MEM_64 = VDEF <.MEM_63>
_8 = X509_NAME_new ();
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();
# .MEM_67 = VDEF <.MEM_66>
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
# .MEM_68 = VDEF <.MEM_67>
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
# .MEM_69 = VDEF <.MEM_68>
_16 = EVP_sha256 ();
# .MEM_70 = VDEF <.MEM_69>
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
# .MEM_71 = VDEF <.MEM_70>
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
# .MEM_72 = VDEF <.MEM_71>
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
# .MEM_73 = VDEF <.MEM_72>
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
# .MEM_74 = VDEF <.MEM_73>
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
# .MEM_75 = VDEF <.MEM_74>
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
# .MEM_76 = VDEF <.MEM_75>
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
# .MEM_77 = VDEF <.MEM_76>
ASN1_TIME_free (thisupd_38);
# .MEM_78 = VDEF <.MEM_77>
ASN1_TIME_free (nextupd_41);
# .MEM_79 = VDEF <.MEM_78>
ASN1_BIT_STRING_free (key_45);
# .MEM_80 = VDEF <.MEM_79>
ASN1_INTEGER_free (serial_47);
# .MEM_81 = VDEF <.MEM_80>
OCSP_CERTID_free (cid_52);
# .MEM_82 = VDEF <.MEM_81>
X509_NAME_free (name_43);
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = sk_OCSP_SINGLERESP_new_null ();
# .MEM_26 = VDEF <.MEM_20>
_6 = OCSP_CERTID_dup (cid_19(D));
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
# .MEM_29 = VDEF <.MEM_21>
OCSP_SINGLERESP_free (0B);
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = X509_NAME_ENTRY_create_by_NID (0B, nid_6(D), type_7(D), bytes_8(D), len_9(D));
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
# .MEM_51 = VDEF <.MEM_49(D)>
_2 = is_utc (_1);
# .MEM_50 = VDEF <.MEM_49(D)>
_4 = is_utc (_3);
# .MEM_52 = VDEF <.MEM_45>
_5 = ASN1_STRING_new ();
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
# .MEM_57 = VDEF <.MEM_54>
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
# .MEM_55 = VDEF <.MEM_54>
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:EVP_PKEY_free========= [0m
[40;33m =======POP node_fun stack:EVP_PKEY_free========= [0m
[40;42m =======pre add _ fucntion:X509_free========= [0m
[40;33m =======POP node_fun stack:X509_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_free========= [0m
[40;42m =======pre add _ fucntion:TEST_int_eq========= [0m
[40;33m =======POP node_fun stack:TEST_int_eq========= [0m
[40;42m =======pre add _ fucntion:X509_cmp========= [0m
[40;33m =======POP node_fun stack:X509_cmp========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_resp_get0_signer========= [0m
[40;33m =======POP node_fun stack:OCSP_resp_get0_signer========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_sign========= [0m
[40;33m =======POP node_fun stack:OCSP_basic_sign========= [0m
[40;42m =======pre add _ fucntion:EVP_sha1========= [0m
[40;33m =======POP node_fun stack:EVP_sha1========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:make_dummy_resp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_dummy_resp  function_call count: 18 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;33m =======POP node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_add1_status========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path OCSP_basic_add1_status  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre_check_funciton:OCSP_basic_add1_status========= [0m
[40;42m =======start_check_funciton:OCSP_basic_add1_status========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c543ea0
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _2 = sk_OCSP_SINGLERESP_new_null ();
    version:2>
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = sk_OCSP_SINGLERESP_new_null ();

 ================== trace ptable================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sk_OCSP_SINGLERESP_new_null-----
this other function ------sk_OCSP_SINGLERESP_new_null-----
 
 Start check Pointer Collect  

======================================================================
_3 = (long int) _2;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
_4 = (struct OCSP_SINGLERESP *) _3;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
rsp_16(D)->tbsResponseData.responses = _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
_2 = sk_OCSP_SINGLERESP_new_null ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
this stmt is child function---sk_OCSP_SINGLERESP_new_null-----

 ================== trace ================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543ea0
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _2 = sk_OCSP_SINGLERESP_new_null ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5491f8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53e500 cid>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7eff9c55c120>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = OCSP_CERTID_dup (cid_19(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_7 = (long int) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_8 = (struct OCSP_CERTID *) _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_9 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_9 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
if (_9 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
Cond in fucntion OCSP_basic_add1_status basic block 5
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 6
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5491f8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53e500 cid>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7eff9c55c120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549120
    type <pointer_type 0x7eff9c527930
        type <record_type 0x7eff9c527888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7eff9c9f1f18 constant 256>
            unit-size <integer_cst 0x7eff9ca0f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c5277e0 fields <field_decl 0x7eff9c51d8e8 certId> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c527930>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = rsp_16(D)->tbsResponseData.responses;
    version:10
    ptr-info 0x7eff9c55c0f0>
# VUSE <.MEM_27>
_10 = rsp_16(D)->tbsResponseData.responses;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_80>
return _31;
In function ‘OCSP_basic_add1_status’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt is child function---sk_OCSP_SINGLERESP_push-----

 ================== trace ================== 
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_80>
return _31;
In function ‘OCSP_basic_add1_status’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
if (_11 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
if (_11 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
Cond in fucntion OCSP_basic_add1_status basic block 7
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 8
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549120
    type <pointer_type 0x7eff9c527930
        type <record_type 0x7eff9c527888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7eff9c9f1f18 constant 256>
            unit-size <integer_cst 0x7eff9ca0f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c5277e0 fields <field_decl 0x7eff9c51d8e8 certId> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c527930>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = rsp_16(D)->tbsResponseData.responses;
    version:10
    ptr-info 0x7eff9c55c0f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535a50 type <pointer_type 0x7eff9c527930> constant 0>
[40;33m =======POP node_fun stack:OCSP_basic_add1_status========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;33m =======POP node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;33m =======POP node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_BIT_STRING_set  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre_check_funciton:ASN1_BIT_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_BIT_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550ee8
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551200 x>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c2b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with x ========= [0m
[40;36m ======= relate stmt argument:x ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with x ========= [0m
[40;36m ======= relate stmt argument:x ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550ee8
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551200 x>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c2b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre_check_funciton:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======start_check_funciton:X509_NAME_add_entry_by_NID========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c549750
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <parm_decl 0x7eff9c53e900 name>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7eff9c55c168>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <0(2), ret_16(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
X509_NAME_ENTRY_free (ne_11);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549750
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <parm_decl 0x7eff9c53e900 name>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7eff9c55c168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549708
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c54a1b0 ne>
    def_stmt ne_11 = (void *) _2;
    version:11
    ptr-info 0x7eff9c55c150>
ne_11 = (void *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
X509_NAME_ENTRY_free (ne_11);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <0(2), ret_16(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549708
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c54a1b0 ne>
    def_stmt ne_11 = (void *) _2;
    version:11
    ptr-info 0x7eff9c55c150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;33m =======POP node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_set  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path asn1_time_from_tm  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre_check_funciton:asn1_time_from_tm========= [0m
[40;42m =======start_check_funciton:asn1_time_from_tm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>
# VUSE <.MEM_49(D)>
_1 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = is_utc (_1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_2 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 3
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>
# VUSE <.MEM_49(D)>
_3 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = is_utc (_3);
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:14: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |              ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |            ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 6
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>
# .MEM_52 = VDEF <.MEM_45>
_5 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_41 = (struct ASN1_TIME *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with tmps ========= [0m
[40;36m ======= relate stmt argument:tmps ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
ASN1_STRING_free (tmps_28);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:asn1_time_from_tm========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7eff9c5446a0
    type <pointer_type 0x7eff9c5272a0
        type <integer_type 0x7eff9c521000 time_t DI
            size <integer_cst 0x7eff9c9f1bb8 constant 64>
            unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06738 precision:64 min <integer_cst 0x7eff9c9f1e40 -9223372036854775808> max <integer_cst 0x7eff9c9f1e58 9223372036854775807> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5272a0>>
        unsigned DI size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <parm_decl 0x7eff9c53ee00 t type <integer_type 0x7eff9c521000 time_t>
        addressable DI ./benchmarks/openssl/leak_1/openssl_leak_1.c:221:47 size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9c521000 time_t>
        chain <parm_decl 0x7eff9c53ee80 offset_day type <integer_type 0x7eff9ca065e8 int>
            SI ./benchmarks/openssl/leak_1/openssl_leak_1.c:222:30
            size <integer_cst 0x7eff9c9f1df8 constant 32>
            unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9ca065e8 int> chain <parm_decl 0x7eff9c53ef00 offset_sec>>>
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘main’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_set========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c5499d8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ec80 s>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt is child function---ASN1_TIME_adj-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
this stmt is child function---ASN1_TIME_adj-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5499d8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ec80 s>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c180>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_set========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_new========= [0m
[40;42m =======pre_check_funciton:make_dummy_resp========= [0m
[40;42m =======start_check_funciton:make_dummy_resp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fa20
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();

 ================== trace ptable================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---OCSP_BASICRESP_new-----
this other function ------OCSP_BASICRESP_new-----
 
 Start check Pointer Collect  

======================================================================
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
bs_35 = (struct OCSP_BASICRESP *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:21: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                     ^
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = OCSP_BASICRESP_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
this stmt is child function---OCSP_BASICRESP_new-----

 ================== trace ================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fa20
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c9f1fc0 type <pointer_type 0x7eff9ca0d000> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535978 type <pointer_type 0x7eff9c526c78> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535978 type <pointer_type 0x7eff9c526c78> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fc18
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>
# .MEM_64 = VDEF <.MEM_63>
_8 = X509_NAME_new ();

 ================== trace ptable================== 
trace fucntion name:X509_NAME_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---X509_NAME_new-----
this other function ------X509_NAME_new-----
 
 Start check Pointer Collect  

======================================================================
_9 = (long int) _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
name_43 = (void *) _9;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:16: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
_8 = X509_NAME_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
this stmt is child function---X509_NAME_new-----

 ================== trace ================== 
trace fucntion name:X509_NAME_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fc18
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fca8
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_BIT_STRING_new-----
this other function ------ASN1_BIT_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_11 = (long int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
key_45 = (struct ASN1_BIT_STRING *) _11;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:22: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                      ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = ASN1_BIT_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
this stmt is child function---ASN1_BIT_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fca8
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fd38
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_INTEGER_new-----
this other function ------ASN1_INTEGER_new-----
 
 Start check Pointer Collect  

======================================================================
_13 = (long int) _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
serial_47 = (struct ASN1_INTEGER *) _13;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:19: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                   ^
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_12 = ASN1_INTEGER_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
this stmt is child function---ASN1_INTEGER_new-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fd38
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5432d0
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c540480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7eff9c55c018>
name_43 = (void *) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5432d0
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c540480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7eff9c55c018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543318
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5403f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7eff9c55c030>
key_45 = (struct ASN1_BIT_STRING *) _11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543318
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5403f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7eff9c55c030>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>
# .MEM_69 = VDEF <.MEM_68>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_16 = EVP_sha256 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>
# .MEM_69 = VDEF <.MEM_68>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_16 = EVP_sha256 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c544180
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c5433f0 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c5441e0
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c543438 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c544260
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c543480 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c5442e0
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c5434c8 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5431f8
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5406c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7eff9c511e10>
bs_35 = (struct OCSP_BASICRESP *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5431f8
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5406c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7eff9c511e10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c544380
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c543510 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543240
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5405a0 thisupd>
    def_stmt thisupd_38 = ASN1_TIME_set (0B, _4);
    version:38
    ptr-info 0x7eff9c511e28>
# .MEM_61 = VDEF <.MEM_60>
thisupd_38 = ASN1_TIME_set (0B, _4);

 ================== trace ptable================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :890========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :891========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_TIME_set-----
this other function ------ASN1_TIME_set-----
 
 Start check Pointer Collect  

======================================================================
thisupd_38 = ASN1_TIME_set (0B, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
this stmt is child function---ASN1_TIME_set-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_77 = VDEF <.MEM_76>
ASN1_TIME_free (thisupd_38);
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :ASN1_TIME_free
# .MEM_77 = VDEF <.MEM_76>
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
# .MEM_78 = VDEF <.MEM_77>
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
=======================Path Constaint===========================

=succs:= 9
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
	relate logic:= 0
=succs:= 8
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
	relate logic:= 0
=succs:= 7
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^
	relate logic:= 0
=succs:= 6
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^
	relate logic:= 0
=succs:= 5
if (_19 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:8: warning: use location
  302 |     if (!TEST_ptr(bs)
      |        ^
	relate logic:= 0
=succs:= 3
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
	relate logic:= 0
=succs:= 2
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543240
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5405a0 thisupd>
    def_stmt thisupd_38 = ASN1_TIME_set (0B, _4);
    version:38
    ptr-info 0x7eff9c511e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543288
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540510 nextupd>
    def_stmt nextupd_41 = ASN1_TIME_set (0B, _7);
    version:41
    ptr-info 0x7eff9c55c000>
# .MEM_63 = VDEF <.MEM_62>
nextupd_41 = ASN1_TIME_set (0B, _7);

 ================== trace ptable================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :890========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :891========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_TIME_set-----
this other function ------ASN1_TIME_set-----
 
 Start check Pointer Collect  

======================================================================
nextupd_41 = ASN1_TIME_set (0B, _7);
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
this stmt is child function---ASN1_TIME_set-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_78 = VDEF <.MEM_77>
ASN1_TIME_free (nextupd_41);
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543288
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540510 nextupd>
    def_stmt nextupd_41 = ASN1_TIME_set (0B, _7);
    version:41
    ptr-info 0x7eff9c55c000>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543360
    type <pointer_type 0x7eff9c5287e0
        type <record_type 0x7eff9c528738 ASN1_INTEGER BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5287e0>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7eff9c55c048>
serial_47 = (struct ASN1_INTEGER *) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_80 = VDEF <.MEM_79>
ASN1_INTEGER_free (serial_47);
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543360
    type <pointer_type 0x7eff9c5287e0
        type <record_type 0x7eff9c528738 ASN1_INTEGER BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5287e0>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7eff9c55c048>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5433a8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7eff9c55c060>
cid_52 = (struct OCSP_CERTID *) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_81 = VDEF <.MEM_80>
OCSP_CERTID_free (cid_52);
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5433a8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7eff9c55c060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_dummy_resp========= [0m
[40;42m =======pre add _ fucntion:get_cert_and_key========= [0m
[40;33m =======POP node_fun stack:get_cert_and_key========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9ea0
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299d80 bs>
    def_stmt bs_40 = make_dummy_resp ();
    version:40
    ptr-info 0x7eff9c511db0>
# .MEM_57 = VDEF <.MEM_56>
bs_40 = make_dummy_resp ();

 ================== trace ptable================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 18 level :888========  [0m
[40;36m ======= node_fun:make_dummy_resp========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_add1_status========= [0m
[40;46m =======add node_fun stack:OCSP_basic_add1_status========= [0m
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :889========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :890========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_set========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_set========= [0m
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :890========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :891========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :892========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_dummy_resp-----
this other function ------make_dummy_resp-----
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
bs_40 = make_dummy_resp ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:328:10: warning: use location
  328 |     bs = make_dummy_resp();
      |          ^
this stmt is child function---make_dummy_resp-----

 ================== trace ================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 18 level :0========  [0m
[40;36m ======= node_fun:make_dummy_resp========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_add1_status========= [0m
[40;46m =======add node_fun stack:OCSP_basic_add1_status========= [0m
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_set========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_set========= [0m
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9ea0
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299d80 bs>
    def_stmt bs_40 = make_dummy_resp ();
    version:40
    ptr-info 0x7eff9c511db0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbedb60
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c9f9f30 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbedbc0
    type <pointer_type 0x7eff9c52abd0
        type <pointer_type 0x7eff9c52aa80 type <record_type 0x7eff9c52a9d8 X509>
            public unsigned DI
            size <integer_cst 0x7eff9c9f1bb8 constant 64>
            unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9c52abd0>>
        unsigned DI size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7eff9d299cf0 signer type <pointer_type 0x7eff9c52aa80>
        addressable unsigned DI ./benchmarks/openssl/leak_1/openssl_leak_1.c:322:11 size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7eff9c522400 main>
        chain <var_decl 0x7eff9d299c60 tmp type <pointer_type 0x7eff9c52aa80>
            addressable unsigned DI ./benchmarks/openssl/leak_1/openssl_leak_1.c:322:27 size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7eff9c522400 main> chain <var_decl 0x7eff9d299bd0 key>>>
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbedc20
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c9f9f78 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:330:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9750
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _6 = EVP_sha1 ();
    version:6>
# .MEM_61 = VDEF <.MEM_60>
_6 = EVP_sha1 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha1 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha1-----
this other function ------EVP_sha1-----
 
 Start check Pointer Collect  

======================================================================
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_10 = _9 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_11 = (int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_12 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:9: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_BASICRESP_free (bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:334:5: warning: use location
  334 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
./benchmarks/openssl/leak_1/openssl_leak_1.c:329:10: warning: use location
  329 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = EVP_sha1 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13: warning: use location
  331 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt is child function---EVP_sha1-----

 ================== trace ================== 
trace fucntion name:EVP_sha1 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9750
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _6 = EVP_sha1 ();
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbedcc0
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c53f000 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:331:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9ee8
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299d80 bs>
    def_stmt bs_49 = make_dummy_resp ();
    version:49
    ptr-info 0x7eff9c511dc8>
# .MEM_65 = VDEF <.MEM_64>
bs_49 = make_dummy_resp ();

 ================== trace ptable================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 18 level :888========  [0m
[40;36m ======= node_fun:make_dummy_resp========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_add1_status========= [0m
[40;46m =======add node_fun stack:OCSP_basic_add1_status========= [0m
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :889========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :890========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_set========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_set========= [0m
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :890========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :891========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :892========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_dummy_resp-----
this other function ------make_dummy_resp-----
 
 Start check Pointer Collect  

======================================================================
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt is child function---OCSP_resp_get0_signer-----

 ================== trace ================== 
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_24 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |        ^
if (_24 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:8: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
bs_49 = make_dummy_resp ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:337:10: warning: use location
  337 |     bs = make_dummy_resp();
      |          ^
this stmt is child function---make_dummy_resp-----

 ================== trace ================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 18 level :0========  [0m
[40;36m ======= node_fun:make_dummy_resp========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_add1_status========= [0m
[40;46m =======add node_fun stack:OCSP_basic_add1_status========= [0m
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_set========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_set========= [0m
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9ee8
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299d80 bs>
    def_stmt bs_49 = make_dummy_resp ();
    version:49
    ptr-info 0x7eff9c511dc8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbedd60
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c53f048 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9990
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _14 = EVP_sha1 ();
    version:14>
# .MEM_68 = VDEF <.MEM_67>
_14 = EVP_sha1 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha1 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha1-----
this other function ------EVP_sha1-----
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 
_18 = _17 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_19 = (int) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |         ^
if (_20 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:9: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_BASICRESP_free (bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:346:5: warning: use location
  346 |     OCSP_BASICRESP_free(bs);
      |     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
  343 |     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
      |          ^
this stmt is child function---OCSP_resp_get0_signer-----

 ================== trace ================== 
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 
_22 = _21 != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_23 = (int) _22;
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
./benchmarks/openssl/leak_1/openssl_leak_1.c:339:10: warning: use location
  339 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_14 = EVP_sha1 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13: warning: use location
  340 |         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
      |             ^
this stmt is child function---EVP_sha1-----

 ================== trace ================== 
trace fucntion name:EVP_sha1 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9990
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _14 = EVP_sha1 ();
    version:14>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbede00
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c53f090 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:340:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9cbedea0
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c53f0d8 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:343:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9cf0
    type <pointer_type 0x7eff9c52aa80
        type <record_type 0x7eff9c52a9d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c52aa80>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9c52abd0>>
   
    def_stmt _26 = tmp;
    version:26
    ptr-info 0x7eff9c511d68>
# VUSE <.MEM_72>
_26 = tmp;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
this stmt is child function---X509_cmp-----

 ================== trace ================== 
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt is child function---TEST_int_eq-----

 ================== trace ================== 
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
if (_28 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |         ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9cf0
    type <pointer_type 0x7eff9c52aa80
        type <record_type 0x7eff9c52a9d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c52aa80>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9c52abd0>>
   
    def_stmt _26 = tmp;
    version:26
    ptr-info 0x7eff9c511d68>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9d38
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version:27>
# .MEM_73 = VDEF <.MEM_72>
_27 = X509_cmp (_26, _25);

 ================== trace ptable================== 
trace fucntion name:X509_cmp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---X509_cmp-----
this other function ------X509_cmp-----
 
 Start check Pointer Collect  

======================================================================
_27 = X509_cmp (_26, _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |             ^
this stmt is child function---X509_cmp-----

 ================== trace ================== 
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 
_28 = TEST_int_eq (_27, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:13: warning: use location
this stmt is child function---TEST_int_eq-----

 ================== trace ================== 
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 
if (_28 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
  344 |         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
      |         ^
if (_28 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:344:9: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9d38
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version:27>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9dc8
    type <pointer_type 0x7eff9c52aa80
        type <record_type 0x7eff9c52a9d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c52aa80>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9c52abd0>>
   
    def_stmt _29 = signer;
    version:29
    ptr-info 0x7eff9c511d80>
# VUSE <.MEM_75>
_29 = signer;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
X509_free (_29);
X509_free (_29);
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: use location
  347 |     X509_free(signer);
      |     ^
this stmt is child function---X509_free-----

 ================== trace ================== 
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
X509_free (_29);
X509_free (_29);
./benchmarks/openssl/leak_1/openssl_leak_1.c:347:5: warning: use location
this stmt is child function---X509_free-----

 ================== trace ================== 
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9dc8
    type <pointer_type 0x7eff9c52aa80
        type <record_type 0x7eff9c52a9d8 X509 VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c52aa80>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9c52abd0>>
   
    def_stmt _29 = signer;
    version:29
    ptr-info 0x7eff9c511d80>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c9f9e10
    type <pointer_type 0x7eff9c52a888
        type <record_type 0x7eff9c52a7e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c52a888>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9c52ac78>>
   
    def_stmt _30 = key;
    version:30
    ptr-info 0x7eff9c511d98>
# VUSE <.MEM_76>
_30 = key;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_76>
EVP_PKEY_free (_30);
EVP_PKEY_free (_30);
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: use location
  348 |     EVP_PKEY_free(key);
      |     ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_77 = VDEF <.MEM_76>
EVP_PKEY_free (_30);
EVP_PKEY_free (_30);
./benchmarks/openssl/leak_1/openssl_leak_1.c:348:5: warning: use location
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c9f9e10
    type <pointer_type 0x7eff9c52a888
        type <record_type 0x7eff9c52a7e0 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c52a888>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9c52ac78>>
   
    def_stmt _30 = key;
    version:30
    ptr-info 0x7eff9c511d98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:make_dummy_resp========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_dummy_resp  function_call count: 18 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;33m =======POP node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_add1_status========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path OCSP_basic_add1_status  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre_check_funciton:OCSP_basic_add1_status========= [0m
[40;42m =======start_check_funciton:OCSP_basic_add1_status========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c543ea0
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _2 = sk_OCSP_SINGLERESP_new_null ();
    version:2>
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = sk_OCSP_SINGLERESP_new_null ();

 ================== trace ptable================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sk_OCSP_SINGLERESP_new_null-----
this other function ------sk_OCSP_SINGLERESP_new_null-----
 
 Start check Pointer Collect  

======================================================================
_3 = (long int) _2;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
_4 = (struct OCSP_SINGLERESP *) _3;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
rsp_16(D)->tbsResponseData.responses = _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
_2 = sk_OCSP_SINGLERESP_new_null ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
this stmt is child function---sk_OCSP_SINGLERESP_new_null-----

 ================== trace ================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543ea0
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _2 = sk_OCSP_SINGLERESP_new_null ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5491f8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53e500 cid>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7eff9c55c120>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = OCSP_CERTID_dup (cid_19(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_7 = (long int) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_8 = (struct OCSP_CERTID *) _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_9 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_9 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
if (_9 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
Cond in fucntion OCSP_basic_add1_status basic block 5
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 6
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5491f8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53e500 cid>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7eff9c55c120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549120
    type <pointer_type 0x7eff9c527930
        type <record_type 0x7eff9c527888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7eff9c9f1f18 constant 256>
            unit-size <integer_cst 0x7eff9ca0f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c5277e0 fields <field_decl 0x7eff9c51d8e8 certId> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c527930>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = rsp_16(D)->tbsResponseData.responses;
    version:10
    ptr-info 0x7eff9c55c0f0>
# VUSE <.MEM_27>
_10 = rsp_16(D)->tbsResponseData.responses;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_80>
return _31;
In function ‘OCSP_basic_add1_status’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt is child function---sk_OCSP_SINGLERESP_push-----

 ================== trace ================== 
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_80>
return _31;
In function ‘OCSP_basic_add1_status’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
if (_11 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
if (_11 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
Cond in fucntion OCSP_basic_add1_status basic block 7
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 8
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549120
    type <pointer_type 0x7eff9c527930
        type <record_type 0x7eff9c527888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7eff9c9f1f18 constant 256>
            unit-size <integer_cst 0x7eff9ca0f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c5277e0 fields <field_decl 0x7eff9c51d8e8 certId> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c527930>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = rsp_16(D)->tbsResponseData.responses;
    version:10
    ptr-info 0x7eff9c55c0f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535a50 type <pointer_type 0x7eff9c527930> constant 0>
[40;33m =======POP node_fun stack:OCSP_basic_add1_status========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;33m =======POP node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;33m =======POP node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_BIT_STRING_set  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre_check_funciton:ASN1_BIT_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_BIT_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550ee8
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551200 x>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c2b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with x ========= [0m
[40;36m ======= relate stmt argument:x ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with x ========= [0m
[40;36m ======= relate stmt argument:x ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550ee8
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551200 x>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c2b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre_check_funciton:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======start_check_funciton:X509_NAME_add_entry_by_NID========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c549750
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <parm_decl 0x7eff9c53e900 name>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7eff9c55c168>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <0(2), ret_16(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
X509_NAME_ENTRY_free (ne_11);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549750
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <parm_decl 0x7eff9c53e900 name>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7eff9c55c168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549708
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c54a1b0 ne>
    def_stmt ne_11 = (void *) _2;
    version:11
    ptr-info 0x7eff9c55c150>
ne_11 = (void *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
X509_NAME_ENTRY_free (ne_11);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <0(2), ret_16(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549708
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c54a1b0 ne>
    def_stmt ne_11 = (void *) _2;
    version:11
    ptr-info 0x7eff9c55c150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;33m =======POP node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_set  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path asn1_time_from_tm  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre_check_funciton:asn1_time_from_tm========= [0m
[40;42m =======start_check_funciton:asn1_time_from_tm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>
# VUSE <.MEM_49(D)>
_1 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = is_utc (_1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_2 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 3
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>
# VUSE <.MEM_49(D)>
_3 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = is_utc (_3);
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:14: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |              ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |            ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 6
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>
# .MEM_52 = VDEF <.MEM_45>
_5 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_41 = (struct ASN1_TIME *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with tmps ========= [0m
[40;36m ======= relate stmt argument:tmps ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
ASN1_STRING_free (tmps_28);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:asn1_time_from_tm========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7eff9c5446a0
    type <pointer_type 0x7eff9c5272a0
        type <integer_type 0x7eff9c521000 time_t DI
            size <integer_cst 0x7eff9c9f1bb8 constant 64>
            unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06738 precision:64 min <integer_cst 0x7eff9c9f1e40 -9223372036854775808> max <integer_cst 0x7eff9c9f1e58 9223372036854775807> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5272a0>>
        unsigned DI size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <parm_decl 0x7eff9c53ee00 t type <integer_type 0x7eff9c521000 time_t>
        addressable DI ./benchmarks/openssl/leak_1/openssl_leak_1.c:221:47 size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9c521000 time_t>
        chain <parm_decl 0x7eff9c53ee80 offset_day type <integer_type 0x7eff9ca065e8 int>
            SI ./benchmarks/openssl/leak_1/openssl_leak_1.c:222:30
            size <integer_cst 0x7eff9c9f1df8 constant 32>
            unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9ca065e8 int> chain <parm_decl 0x7eff9c53ef00 offset_sec>>>
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘make_dummy_resp’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_set========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c5499d8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ec80 s>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt is child function---ASN1_TIME_adj-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
this stmt is child function---ASN1_TIME_adj-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5499d8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ec80 s>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c180>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_set========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_new========= [0m
[40;42m =======pre_check_funciton:make_dummy_resp========= [0m
[40;42m =======start_check_funciton:make_dummy_resp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fa20
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>
# .MEM_59 = VDEF <.MEM_58>
_1 = OCSP_BASICRESP_new ();

 ================== trace ptable================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---OCSP_BASICRESP_new-----
this other function ------OCSP_BASICRESP_new-----
 
 Start check Pointer Collect  

======================================================================
_2 = (long int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
bs_35 = (struct OCSP_BASICRESP *) _2;
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:21: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                     ^
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = OCSP_BASICRESP_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:288:26: warning: use location
  288 |     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();                                  /* allocation site */
      |                          ^
this stmt is child function---OCSP_BASICRESP_new-----

 ================== trace ================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fa20
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c9f1fc0 type <pointer_type 0x7eff9ca0d000> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535978 type <pointer_type 0x7eff9c526c78> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535978 type <pointer_type 0x7eff9c526c78> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fc18
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>
# .MEM_64 = VDEF <.MEM_63>
_8 = X509_NAME_new ();

 ================== trace ptable================== 
trace fucntion name:X509_NAME_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---X509_NAME_new-----
this other function ------X509_NAME_new-----
 
 Start check Pointer Collect  

======================================================================
_9 = (long int) _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
name_43 = (void *) _9;
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:16: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                ^
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
_8 = X509_NAME_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:292:23: warning: use location
  292 |     X509_NAME *name = X509_NAME_new();                          /* allocation site */
      |                       ^
this stmt is child function---X509_NAME_new-----

 ================== trace ================== 
trace fucntion name:X509_NAME_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fc18
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _8 = X509_NAME_new ();
    version:8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fca8
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>
# .MEM_65 = VDEF <.MEM_64>
_10 = ASN1_BIT_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_BIT_STRING_new-----
this other function ------ASN1_BIT_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_11 = (long int) _10;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
key_45 = (struct ASN1_BIT_STRING *) _11;
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:22: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                      ^
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_10 = ASN1_BIT_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:293:28: warning: use location
  293 |     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
      |                            ^
this stmt is child function---ASN1_BIT_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fca8
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fd38
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>
# .MEM_66 = VDEF <.MEM_65>
_12 = ASN1_INTEGER_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_INTEGER_new-----
this other function ------ASN1_INTEGER_new-----
 
 Start check Pointer Collect  

======================================================================
_13 = (long int) _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
serial_47 = (struct ASN1_INTEGER *) _13;
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:19: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                   ^
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_12 = ASN1_INTEGER_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:294:28: warning: use location
  294 |     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
      |                            ^
this stmt is child function---ASN1_INTEGER_new-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fd38
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version:12>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5432d0
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c540480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7eff9c55c018>
name_43 = (void *) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5432d0
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c540480 name>
    def_stmt name_43 = (void *) _9;
    version:43
    ptr-info 0x7eff9c55c018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543318
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5403f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7eff9c55c030>
key_45 = (struct ASN1_BIT_STRING *) _11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with key ========= [0m
[40;36m ======= relate stmt argument:key ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543318
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5403f0 key>
    def_stmt key_45 = (struct ASN1_BIT_STRING *) _11;
    version:45
    ptr-info 0x7eff9c55c030>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>
# .MEM_69 = VDEF <.MEM_68>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_16 = EVP_sha256 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>
# .MEM_69 = VDEF <.MEM_68>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_16 = EVP_sha256 ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c53fe58
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _16 = EVP_sha256 ();
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c544180
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c5433f0 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c5441e0
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c543438 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c544260
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c543480 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c5442e0
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c5434c8 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5431f8
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5406c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7eff9c511e10>
bs_35 = (struct OCSP_BASICRESP *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with bs ========= [0m
[40;36m ======= relate stmt argument:bs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5431f8
    type <pointer_type 0x7eff9c528690
        type <record_type 0x7eff9c5285e8 OCSP_BASICRESP BLK
            size <integer_cst 0x7eff9ca0f000 constant 512>
            unit-size <integer_cst 0x7eff9cac6090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c528540 fields <field_decl 0x7eff9c529130 tbsResponseData> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c528690>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5406c0 bs>
    def_stmt bs_35 = (struct OCSP_BASICRESP *) _2;
    version:35
    ptr-info 0x7eff9c511e10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7eff9c544380
    type <pointer_type 0x7eff9c52a150
        type <array_type 0x7eff9c52a0a8 type <integer_type 0x7eff9c51a9d8 char>
            BLK
            size <integer_cst 0x7eff9c511b58 constant 360>
            unit-size <integer_cst 0x7eff9c511bd0 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7eff9c52a000>
            pointer_to_this <pointer_type 0x7eff9c52a150>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7eff9c543510 type <array_type 0x7eff9c52a0a8>
        readonly constant static "./benchmarks/openssl/leak_1/openssl_leak_1.c\000">
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543240
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5405a0 thisupd>
    def_stmt thisupd_38 = ASN1_TIME_set (0B, _4);
    version:38
    ptr-info 0x7eff9c511e28>
# .MEM_61 = VDEF <.MEM_60>
thisupd_38 = ASN1_TIME_set (0B, _4);

 ================== trace ptable================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :890========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :891========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_TIME_set-----
this other function ------ASN1_TIME_set-----
 
 Start check Pointer Collect  

======================================================================
thisupd_38 = ASN1_TIME_set (0B, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:290:26: warning: use location
  290 |     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
      |                          ^
this stmt is child function---ASN1_TIME_set-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_77 = VDEF <.MEM_76>
ASN1_TIME_free (thisupd_38);
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :ASN1_TIME_free
# .MEM_77 = VDEF <.MEM_76>
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
# .MEM_78 = VDEF <.MEM_77>
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
=======================Path Constaint===========================

=succs:= 9
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
	relate logic:= 0
=succs:= 8
if (_22 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:9: warning: use location
  305 |         || !TEST_ptr(cid)
      |         ^
	relate logic:= 0
=succs:= 7
if (_21 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:9: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |         ^
	relate logic:= 0
=succs:= 6
if (_20 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:9: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |         ^
	relate logic:= 0
=succs:= 5
if (_19 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:8: warning: use location
  302 |     if (!TEST_ptr(bs)
      |        ^
	relate logic:= 0
=succs:= 3
if (_15 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:9: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |         ^
	relate logic:= 0
=succs:= 2
if (_14 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:8: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with thisupd ========= [0m
[40;36m ======= relate stmt argument:thisupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543240
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c5405a0 thisupd>
    def_stmt thisupd_38 = ASN1_TIME_set (0B, _4);
    version:38
    ptr-info 0x7eff9c511e28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543288
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540510 nextupd>
    def_stmt nextupd_41 = ASN1_TIME_set (0B, _7);
    version:41
    ptr-info 0x7eff9c55c000>
# .MEM_63 = VDEF <.MEM_62>
nextupd_41 = ASN1_TIME_set (0B, _7);

 ================== trace ptable================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :890========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :891========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_TIME_set-----
this other function ------ASN1_TIME_set-----
 
 Start check Pointer Collect  

======================================================================
nextupd_41 = ASN1_TIME_set (0B, _7);
./benchmarks/openssl/leak_1/openssl_leak_1.c:291:26: warning: use location
  291 |     ASN1_TIME *nextupd = ASN1_TIME_set(NULL, time(NULL) + 200);
      |                          ^
this stmt is child function---ASN1_TIME_set-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_set 
[40;44m =======trace_function_path ASN1_TIME_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_78 = VDEF <.MEM_77>
ASN1_TIME_free (nextupd_41);
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with nextupd ========= [0m
[40;36m ======= relate stmt argument:nextupd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543288
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540510 nextupd>
    def_stmt nextupd_41 = ASN1_TIME_set (0B, _7);
    version:41
    ptr-info 0x7eff9c55c000>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c543360
    type <pointer_type 0x7eff9c5287e0
        type <record_type 0x7eff9c528738 ASN1_INTEGER BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5287e0>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7eff9c55c048>
serial_47 = (struct ASN1_INTEGER *) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_80 = VDEF <.MEM_79>
ASN1_INTEGER_free (serial_47);
ASN1_INTEGER_free (serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:313:5: warning: use location
  313 |     ASN1_INTEGER_free(serial);
      |     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 
_18 = (long int) _17;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:11: warning: use location
cid_52 = (struct OCSP_CERTID *) _18;
./benchmarks/openssl/leak_1/openssl_leak_1.c:301:9: warning: use location
  301 |     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
      |         ^
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
X509_NAME_free (name_43);
./benchmarks/openssl/leak_1/openssl_leak_1.c:315:5: warning: use location
  315 |     X509_NAME_free(name);
      |     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:296:10: warning: use location
  296 |     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
      |          ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 
[40;44m =======trace_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_BIT_STRING_free (key_45);
./benchmarks/openssl/leak_1/openssl_leak_1.c:312:5: warning: use location
  312 |     ASN1_BIT_STRING_free(key);
      |     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:298:13: warning: use location
  298 |         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
      |             ^
this stmt is child function---ASN1_BIT_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_BIT_STRING_set 
[40;44m =======trace_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ASN1_BIT_STRING_set========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with serial ========= [0m
[40;36m ======= relate stmt argument:serial ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543360
    type <pointer_type 0x7eff9c5287e0
        type <record_type 0x7eff9c528738 ASN1_INTEGER BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5287e0>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540360 serial>
    def_stmt serial_47 = (struct ASN1_INTEGER *) _13;
    version:47
    ptr-info 0x7eff9c55c048>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5433a8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7eff9c55c060>
cid_52 = (struct OCSP_CERTID *) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_81 = VDEF <.MEM_80>
OCSP_CERTID_free (cid_52);
OCSP_CERTID_free (cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:314:5: warning: use location
  314 |     OCSP_CERTID_free(cid);
      |     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |             ^
this stmt is child function---OCSP_basic_add1_status-----

 ================== trace ================== 
trace fucntion name:OCSP_basic_add1_status 
[40;44m =======trace_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:OCSP_basic_add1_status========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m

 ================== trace ================== 
trace fucntion free:0 
_24 = _23 != 0B;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_25 = (int) _24;
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_true========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_26 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
  306 |         || !TEST_true(OCSP_basic_add1_status(bs, cid,
      |         ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:306:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_27 = PHI <0B(4), 0B(10), bs_35(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
./benchmarks/openssl/leak_1/openssl_leak_1.c:302:10: warning: use location
  302 |     if (!TEST_ptr(bs)
      |          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:310:5: warning: use location
  310 |     ASN1_TIME_free(thisupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
./benchmarks/openssl/leak_1/openssl_leak_1.c:303:13: warning: use location
  303 |         || !TEST_ptr(thisupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
ASN1_TIME_free (nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:311:5: warning: use location
  311 |     ASN1_TIME_free(nextupd);
      |     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
./benchmarks/openssl/leak_1/openssl_leak_1.c:304:13: warning: use location
  304 |         || !TEST_ptr(nextupd)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
./benchmarks/openssl/leak_1/openssl_leak_1.c:305:13: warning: use location
  305 |         || !TEST_ptr(cid)
      |             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:test_ptr========= [0m
[40;36m ======= find relate stmt with cid ========= [0m
[40;36m ======= relate stmt argument:cid ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5433a8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c540630 cid>
    def_stmt cid_52 = (struct OCSP_CERTID *) _18;
    version:52
    ptr-info 0x7eff9c55c060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_dummy_resp========= [0m
[40;44m =======node_fun:OCSP_basic_add1_status========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path OCSP_basic_add1_status  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre_check_funciton:OCSP_basic_add1_status========= [0m
[40;42m =======start_check_funciton:OCSP_basic_add1_status========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c543ea0
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _2 = sk_OCSP_SINGLERESP_new_null ();
    version:2>
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = sk_OCSP_SINGLERESP_new_null ();

 ================== trace ptable================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sk_OCSP_SINGLERESP_new_null-----
this other function ------sk_OCSP_SINGLERESP_new_null-----
 
 Start check Pointer Collect  

======================================================================
_3 = (long int) _2;
In function ‘OCSP_basic_add1_status’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
_4 = (struct OCSP_SINGLERESP *) _3;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
rsp_16(D)->tbsResponseData.responses = _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:17: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                 ^
_2 = sk_OCSP_SINGLERESP_new_null ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:270:19: warning: use location
  270 |                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
      |                   ^
this stmt is child function---sk_OCSP_SINGLERESP_new_null-----

 ================== trace ================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c543ea0
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _2 = sk_OCSP_SINGLERESP_new_null ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5491f8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53e500 cid>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7eff9c55c120>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = OCSP_CERTID_dup (cid_19(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_7 = (long int) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_8 = (struct OCSP_CERTID *) _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:27: warning: use location
_9 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:16: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                ^
if (_9 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |        ^
if (_9 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:8: warning: use location
Cond in fucntion OCSP_basic_add1_status basic block 5
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 6
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _8;
./benchmarks/openssl/leak_1/openssl_leak_1.c:273:25: warning: use location
  273 |     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
      |                         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5491f8
    type <pointer_type 0x7eff9c521540
        type <record_type 0x7eff9c521498 OCSP_CERTID VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c521540>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53e500 cid>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7eff9c55c120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549120
    type <pointer_type 0x7eff9c527930
        type <record_type 0x7eff9c527888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7eff9c9f1f18 constant 256>
            unit-size <integer_cst 0x7eff9ca0f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c5277e0 fields <field_decl 0x7eff9c51d8e8 certId> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c527930>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = rsp_16(D)->tbsResponseData.responses;
    version:10
    ptr-info 0x7eff9c55c0f0>
# VUSE <.MEM_27>
_10 = rsp_16(D)->tbsResponseData.responses;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:15: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |               ^
this stmt is child function---sk_OCSP_SINGLERESP_push-----

 ================== trace ================== 
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_11 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
if (_11 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
  276 |         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
      |            ^
if (_11 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:276:12: warning: use location
Cond in fucntion OCSP_basic_add1_status basic block 7
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 8
 ================== possible direct basic block ================= 
from OCSP_basic_add1_status basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549120
    type <pointer_type 0x7eff9c527930
        type <record_type 0x7eff9c527888 OCSP_SINGLERESP BLK
            size <integer_cst 0x7eff9c9f1f18 constant 256>
            unit-size <integer_cst 0x7eff9ca0f018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c5277e0 fields <field_decl 0x7eff9c51d8e8 certId> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c527930>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = rsp_16(D)->tbsResponseData.responses;
    version:10
    ptr-info 0x7eff9c55c0f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7eff9c535a50 type <pointer_type 0x7eff9c527930> constant 0>
[40;33m =======POP node_fun stack:OCSP_basic_add1_status========= [0m
[40;44m =======node_fun:X509_NAME_add_entry_by_NID========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path X509_NAME_add_entry_by_NID  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre_check_funciton:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======start_check_funciton:X509_NAME_add_entry_by_NID========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c549750
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <parm_decl 0x7eff9c53e900 name>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7eff9c55c168>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘X509_NAME_add_entry_by_NID’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <0(2), ret_16(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
X509_NAME_ENTRY_free (ne_11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
  253 |     X509_NAME_ENTRY_free(ne);
      |     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549750
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <parm_decl 0x7eff9c53e900 name>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7eff9c55c168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549708
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c54a1b0 ne>
    def_stmt ne_11 = (void *) _2;
    version:11
    ptr-info 0x7eff9c55c150>
ne_11 = (void *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
# .MEM_21 = VDEF <.MEM_20>
X509_NAME_ENTRY_free (ne_11);
X509_NAME_ENTRY_free (ne_11);
./benchmarks/openssl/leak_1/openssl_leak_1.c:253:5: warning: use location
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:252:11: warning: use location
  252 |     ret = X509_NAME_add_entry(name, ne, loc, set);
      |           ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <0(2), ret_16(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549708
    type <pointer_type 0x7eff9ca0d000
        type <void_type 0x7eff9ca06f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d000>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7eff9ca129d8>>
    var <var_decl 0x7eff9c54a1b0 ne>
    def_stmt ne_11 = (void *) _2;
    version:11
    ptr-info 0x7eff9c55c150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;44m =======node_fun:ASN1_TIME_set========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_TIME_set  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path asn1_time_from_tm  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre_check_funciton:asn1_time_from_tm========= [0m
[40;42m =======start_check_funciton:asn1_time_from_tm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>
# VUSE <.MEM_49(D)>
_1 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = is_utc (_1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_2 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 3
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>
# VUSE <.MEM_49(D)>
_3 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = is_utc (_3);
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:14: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |              ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |            ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 6
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>
# .MEM_52 = VDEF <.MEM_45>
_5 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_41 = (struct ASN1_TIME *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
In function ‘ASN1_TIME_set’:
lto1: warning: use location
this stmt have mutiple branch --------
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_set’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_set’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with tmps ========= [0m
[40;36m ======= relate stmt argument:tmps ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_set’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_set’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:asn1_time_from_tm========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7eff9c5446a0
    type <pointer_type 0x7eff9c5272a0
        type <integer_type 0x7eff9c521000 time_t DI
            size <integer_cst 0x7eff9c9f1bb8 constant 64>
            unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06738 precision:64 min <integer_cst 0x7eff9c9f1e40 -9223372036854775808> max <integer_cst 0x7eff9c9f1e58 9223372036854775807> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5272a0>>
        unsigned DI size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <parm_decl 0x7eff9c53ee00 t type <integer_type 0x7eff9c521000 time_t>
        addressable DI ./benchmarks/openssl/leak_1/openssl_leak_1.c:221:47 size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9c521000 time_t>
        chain <parm_decl 0x7eff9c53ee80 offset_day type <integer_type 0x7eff9ca065e8 int>
            SI ./benchmarks/openssl/leak_1/openssl_leak_1.c:222:30
            size <integer_cst 0x7eff9c9f1df8 constant 32>
            unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9ca065e8 int> chain <parm_decl 0x7eff9c53ef00 offset_sec>>>
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘ASN1_TIME_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_set========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c5499d8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ec80 s>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c180>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
  240 |     return ASN1_TIME_adj(s, t, 0, 0);
      |            ^
this stmt is child function---ASN1_TIME_adj-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
./benchmarks/openssl/leak_1/openssl_leak_1.c:240:12: warning: use location
this stmt is child function---ASN1_TIME_adj-----

 ================== trace ================== 
trace fucntion name:ASN1_TIME_adj 
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_TIME_adj========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;46m =======add node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5499d8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ec80 s>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c180>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_set========= [0m
[40;44m =======node_fun:ASN1_TIME_adj========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:asn1_time_from_tm========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path asn1_time_from_tm  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre_check_funciton:asn1_time_from_tm========= [0m
[40;42m =======start_check_funciton:asn1_time_from_tm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>
# VUSE <.MEM_49(D)>
_1 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = is_utc (_1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_2 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 3
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>
# VUSE <.MEM_49(D)>
_3 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = is_utc (_3);
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:14: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |              ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |            ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 6
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>
# .MEM_52 = VDEF <.MEM_45>
_5 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_41 = (struct ASN1_TIME *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
this stmt have mutiple branch --------
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with tmps ========= [0m
[40;36m ======= relate stmt argument:tmps ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
ASN1_STRING_free (tmps_28);
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
In function ‘asn1_time_from_tm’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
In function ‘ASN1_TIME_adj’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:asn1_time_from_tm========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7eff9c5446a0
    type <pointer_type 0x7eff9c5272a0
        type <integer_type 0x7eff9c521000 time_t DI
            size <integer_cst 0x7eff9c9f1bb8 constant 64>
            unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06738 precision:64 min <integer_cst 0x7eff9c9f1e40 -9223372036854775808> max <integer_cst 0x7eff9c9f1e58 9223372036854775807> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c5272a0>>
        unsigned DI size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <parm_decl 0x7eff9c53ee00 t type <integer_type 0x7eff9c521000 time_t>
        addressable DI ./benchmarks/openssl/leak_1/openssl_leak_1.c:221:47 size <integer_cst 0x7eff9c9f1bb8 64> unit-size <integer_cst 0x7eff9c9f1bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9c521000 time_t>
        chain <parm_decl 0x7eff9c53ee80 offset_day type <integer_type 0x7eff9ca065e8 int>
            SI ./benchmarks/openssl/leak_1/openssl_leak_1.c:222:30
            size <integer_cst 0x7eff9c9f1df8 constant 32>
            unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7eff9c51bf00 ASN1_TIME_adj> arg-type <integer_type 0x7eff9ca065e8 int> chain <parm_decl 0x7eff9c53ef00 offset_sec>>>
    ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 start: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10 finish: ./benchmarks/openssl/leak_1/openssl_leak_1.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with ts ========= [0m
[40;36m ======= relate stmt argument:ts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549d38
    type <pointer_type 0x7eff9c526dc8
        type <record_type 0x7eff9c526d20 tm BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526d20 fields <field_decl 0x7eff9c51d688 tm_sec> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526dc8>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a480 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version:12
    ptr-info 0x7eff9c55c1c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_19>
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:235:12: warning: use location
  235 |     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
      |            ^
this stmt is child function---asn1_time_from_tm-----

 ================== trace ================== 
trace fucntion name:asn1_time_from_tm 
[40;44m =======trace_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:asn1_time_from_tm========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(2), 0B(4), _18(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:14: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_6 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
  232 |         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:232:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = offset_day_13(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:9: warning: use location
  231 |     if (offset_day || offset_sec) {
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_5 = _3 | _4;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_5 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
  231 |     if (offset_day || offset_sec) {
      |        ^
if (_5 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = offset_sec_14(D) != 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:231:20: warning: use location
  231 |     if (offset_day || offset_sec) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c549e10
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c53ed80 s>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7eff9c55c1e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======node_fun:asn1_time_from_tm========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path asn1_time_from_tm  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘asn1_time_from_tm’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre_check_funciton:asn1_time_from_tm========= [0m
[40;42m =======start_check_funciton:asn1_time_from_tm========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>
# VUSE <.MEM_49(D)>
_1 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = is_utc (_1);
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:13: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_2 != 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
  179 |         if (is_utc(ts->tm_year))
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:179:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 3
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550120
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _1 = ts_36(D)->tm_year;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>
# VUSE <.MEM_49(D)>
_3 = ts_36(D)->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = is_utc (_3);
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:14: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |              ^
this stmt is child function---is_utc-----

 ================== trace ================== 
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
if (_4 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
  184 |         if (!is_utc(ts->tm_year))
      |            ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:184:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 6
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5501b0
    type <integer_type 0x7eff9ca06690 unsigned int public unsigned SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca06690 precision:32 min <integer_cst 0x7eff9c9f1e28 0> max <integer_cst 0x7eff9c9f1de0 4294967295>
        pointer_to_this <pointer_type 0x7eff9ca12690>>
   
    def_stmt _3 = ts_36(D)->tm_year;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>
# .MEM_52 = VDEF <.MEM_45>
_5 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
tmps_41 = (struct ASN1_TIME *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:14: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
lto1: warning: use location
this stmt have mutiple branch --------
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = ASN1_STRING_new ();
./benchmarks/openssl/leak_1/openssl_leak_1.c:191:16: warning: use location
  191 |         tmps = ASN1_STRING_new();       /* allocation site */
      |                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550240
    type <integer_type 0x7eff9ca065e8 int public SI
        size <integer_cst 0x7eff9c9f1df8 constant 32>
        unit-size <integer_cst 0x7eff9c9f1e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca065e8 precision:32 min <integer_cst 0x7eff9c9f1db0 -2147483648> max <integer_cst 0x7eff9c9f1dc8 2147483647>
        pointer_to_this <pointer_type 0x7eff9ca0d9d8>>
   
    def_stmt _5 = ASN1_STRING_new ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>
tmps_27 = PHI <s_39(D)(10), tmps_41(11)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with tmps ========= [0m
[40;36m ======= relate stmt argument:tmps ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550870
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
    version:27
    ptr-info 0x7eff9c55c210>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>
# VUSE <.MEM_54>
p_44 = tmps_27->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:24: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_27->length = _25;
./benchmarks/openssl/leak_1/openssl_leak_1.c:209:22: warning: use location
  209 |         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
      |                      ^
_29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
ASN1_STRING_free (tmps_28);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
tmps_27->length = _16;
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:22: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                      ^
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion asn1_time_from_tm basic block 7
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^
p_44 = tmps_27->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:201:7: warning: use location
  201 |     p = (char*)tmps->data;
      |       ^
tmps_27->type = type_26;
./benchmarks/openssl/leak_1/openssl_leak_1.c:200:16: warning: use location
  200 |     tmps->type = type;
      |                ^
if (type_26 == 24)
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
  203 |     if (type == V_ASN1_GENERALIZEDTIME)
      |        ^
if (type_26 == 24)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:203:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 15
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 16
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:10: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 13
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 4

======================================================================
if (_7 == 0)
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
  197 |     if (!ASN1_STRING_set(tmps, NULL, len))
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:197:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 13
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 14
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_27 == 0B)
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================
if (tmps_27 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
  194 |     if (tmps == NULL)
      |        ^
if (tmps_27 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:194:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 12
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
./benchmarks/openssl/leak_1/openssl_leak_1.c:204:24: warning: use location
  204 |         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
      |                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550a68
    type <pointer_type 0x7eff9c526e70
        type <integer_type 0x7eff9c51a9d8 char public QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c511720 -128> max <integer_cst 0x7eff9c511708 127>
            pointer_to_this <pointer_type 0x7eff9c526e70>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>>
    var <var_decl 0x7eff9c54a630 p>
    def_stmt p_44 = tmps_27->data;
    version:44
    ptr-info 0x7eff9c55c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>
tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
bb index := 19
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================
# .MEM_59 = VDEF <.MEM_47>
ASN1_STRING_free (tmps_28);
ASN1_STRING_free (tmps_28);
./benchmarks/openssl/leak_1/openssl_leak_1.c:217:9: warning: use location
  217 |         ASN1_STRING_free(tmps);
      |         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmps_28 != s_39(D))
bb index := 18
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 4

======================================================================
if (tmps_28 != s_39(D))
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
  216 |     if (tmps != s)
      |        ^
if (tmps_28 != s_39(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:216:8: warning: use location
Cond in fucntion asn1_time_from_tm basic block 18
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 19
 ================== possible direct basic block ================= 
from asn1_time_from_tm basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c5508b8
    type <pointer_type 0x7eff9c526c78
        type <record_type 0x7eff9c526bd0 ASN1_TIME BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526c78>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9d299b40 tmps>
    def_stmt tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
    version:28
    ptr-info 0x7eff9c55c228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:asn1_time_from_tm========= [0m
[40;44m =======node_fun:ASN1_BIT_STRING_set========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_BIT_STRING_set  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_BIT_STRING_set’:
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre_check_funciton:ASN1_BIT_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_BIT_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c550ee8
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551200 x>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c2b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
  169 |     return ASN1_STRING_set(x, d, len);
      |            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with x ========= [0m
[40;36m ======= relate stmt argument:x ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:169:12: warning: use location
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:ASN1_STRING_set========= [0m
[40;36m ======= find relate stmt with x ========= [0m
[40;36m ======= relate stmt argument:x ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c550ee8
    type <pointer_type 0x7eff9c526a80
        type <record_type 0x7eff9c5269d8 ASN1_BIT_STRING BLK
            size <integer_cst 0x7eff9ca0f078 constant 192>
            unit-size <integer_cst 0x7eff9ca0f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9c526690 fields <field_decl 0x7eff9c51d2f8 length> context <translation_unit_decl 0x7eff9c9fc168 ./benchmarks/openssl/leak_1/openssl_leak_1.c>
            pointer_to_this <pointer_type 0x7eff9c526a80>>
        unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551200 x>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7eff9c55c2b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_set========= [0m
[40;44m =======node_fun:ASN1_STRING_set========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_80>
return _31;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_1 = strlen (_data_18(D));
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:19: warning: use location
  133 |             len = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
len_21 = (int) _1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:133:17: warning: use location
  133 |             len = strlen(data);
      |                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
if (_data_18(D) != 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
  144 |     if (data != NULL) {
      |        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557510
    type <pointer_type 0x7eff9ca0d150
        type <void_type 0x7eff9ca0d0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7eff9ca0d150>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7eff9c551400 _data>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7eff9c55c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
str_22(D)->data = c_23;
./benchmarks/openssl/leak_1/openssl_leak_1.c:139:23: warning: use location
  139 |             str->data = c;
      |                       ^
c_23 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:136:11: warning: use location
  136 |         c = str->data;
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_11 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:12: warning: use location
  147 |         str->data[len] = '\0';
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_13 = _11 + _12;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
*_13 = 0;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:24: warning: use location
  147 |         str->data[len] = '\0';
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_10 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:19: warning: use location
  145 |         memcpy(str->data, data, len);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
memcpy (_10, _data_18(D), _9);
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================
str_22(D)->length = len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:143:17: warning: use location
  143 |     str->length = len;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_12 = (sizetype) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:147:18: warning: use location
  147 |         str->data[len] = '\0';
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_80>
return _31;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_84>
return _27;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return 0B;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return _3;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_48>
return _29;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================
_9 = (long unsigned int) len_14;
./benchmarks/openssl/leak_1/openssl_leak_1.c:145:9: warning: use location
  145 |         memcpy(str->data, data, len);
      |         ^
_4 = len_14 + 1;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                     ^
_5 = OPENSSL_realloc (c_23, _4);
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
_7 = (unsigned char *) _6;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:21: warning: use location
str_22(D)->data = _7;
./benchmarks/openssl/leak_1/openssl_leak_1.c:137:19: warning: use location
  137 |         str->data = OPENSSL_realloc(c, len + 1);
      |                   ^
_8 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:16: warning: use location
  138 |         if (str->data == NULL) {
      |                ^
if (_8 == 0B)
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
  138 |         if (str->data == NULL) {
      |            ^
if (_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_1/openssl_leak_1.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:37: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |                                     ^
_2 = str_22(D)->length;
./benchmarks/openssl/leak_1/openssl_leak_1.c:135:13: warning: use location
  135 |     if ((str->length <= len) || (str->data == NULL)) {
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7eff9c557630
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7eff9c54a990 c>
    def_stmt c_23 = str_22(D)->data;
    version:23
    ptr-info 0x7eff9c55c3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7eff9c557360
    type <pointer_type 0x7eff9c51a348
        type <integer_type 0x7eff9ca06348 unsigned char public unsigned QI
            size <integer_cst 0x7eff9c9f1ca8 constant 8>
            unit-size <integer_cst 0x7eff9c9f1cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7eff9ca063f0 precision:8 min <integer_cst 0x7eff9c9f1cd8 0> max <integer_cst 0x7eff9c9f1c78 255>
            pointer_to_this <pointer_type 0x7eff9c51a348>>
        public unsigned DI
        size <integer_cst 0x7eff9c9f1bb8 constant 64>
        unit-size <integer_cst 0x7eff9c9f1bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = str_22(D)->data;
    version:10
    ptr-info 0x7eff9c55c330>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======node_fun:test_true========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m
[40;33m =======POP node_fun stack:test_true========= [0m
[40;44m =======node_fun:test_ptr========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m
[40;33m =======POP node_fun stack:test_ptr========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
signer = 0B;
key = 0B;
bs_40 = make_dummy_resp ();
_1 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 329, "bs", bs_40);
if (_1 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
_2 = get_cert_and_key (&signer, &key);
_3 = _2 != 0;
_4 = (int) _3;
_5 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 330, "get_cert_and_key(&signer, &key)", _4);
if (_5 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 256544234]:
_6 = EVP_sha1 ();
_7 = key;
_8 = signer;
_9 = OCSP_basic_sign (bs_40, _8, _7, _6, 0B, 1);
_10 = _9 != 0;
_11 = (int) _10;
_12 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 331, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
if (_12 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 948343004]:
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 125398821]:
OCSP_BASICRESP_free (bs_40);
bs_49 = make_dummy_resp ();
tmp = 0B;
_13 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 339, "bs", bs_49);
if (_13 == 0)
  goto <bb 8>; [51.12%]
else
  goto <bb 7>; [48.88%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 61294943]:
_14 = EVP_sha1 ();
_15 = key;
_16 = signer;
_17 = OCSP_basic_sign (bs_49, _16, _15, _14, 0B, 0);
_18 = _17 != 0;
_19 = (int) _18;
_20 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 340, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
if (_20 == 0)
  goto <bb 8>; [51.12%]
else
  goto <bb 9>; [48.88%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 95437853]:
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 29960968]:
_21 = OCSP_resp_get0_signer (bs_49, &tmp, 0B);
_22 = _21 != 0;
_23 = (int) _22;
_24 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
if (_24 == 0)
  goto <bb 11>; [51.12%]
else
  goto <bb 10>; [48.88%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 14644921]:
_25 = signer;
_26 = tmp;
_27 = X509_cmp (_26, _25);
_28 = TEST_int_eq (_27, 0);
if (_28 == 0)
  goto <bb 11>; [51.12%]
else
  goto <bb 12>; [48.88%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 22802531]:
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 7158437]:
OCSP_BASICRESP_free (bs_49);
_29 = signer;
X509_free (_29);
_30 = key;
EVP_PKEY_free (_30);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# _31 = PHI <0(5), 0(8), 0(11), 1(12)>
signer ={v} {CLOBBER};
tmp ={v} {CLOBBER};
key ={v} {CLOBBER};
return _31;

=======Mapping node_fun:make_dummy_resp=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
namestr = "openssl.example.com";
keybytes = "\x07";
_1 = OCSP_BASICRESP_new ();
_2 = (long int) _1;
bs_35 = (struct OCSP_BASICRESP *) _2;
_3 = time (0B);
_4 = (long int) _3;
thisupd_38 = ASN1_TIME_set (0B, _4);
_5 = time (0B);
_6 = _5 + 200;
_7 = (long int) _6;
nextupd_41 = ASN1_TIME_set (0B, _7);
_8 = X509_NAME_new ();
_9 = (long int) _8;
name_43 = (void *) _9;
_10 = ASN1_BIT_STRING_new ();
_11 = (long int) _10;
key_45 = (struct ASN1_BIT_STRING *) _11;
_12 = ASN1_INTEGER_new ();
_13 = (long int) _12;
serial_47 = (struct ASN1_INTEGER *) _13;
_14 = X509_NAME_add_entry_by_NID (name_43, 13, 4097, &namestr, -1, -1, 1);
if (_14 == 0)
  goto <bb 4>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370896]:
_15 = ASN1_BIT_STRING_set (key_45, &keybytes, 1);
if (_15 == 0)
  goto <bb 4>; [29.93%]
else
  goto <bb 5>; [70.07%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 546555538]:
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 527186286]:
_16 = EVP_sha256 ();
_17 = OCSP_cert_id_new (_16, name_43, key_45, serial_47);
_18 = (long int) _17;
cid_52 = (struct OCSP_CERTID *) _18;
_19 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 302, "bs", bs_35);
if (_19 == 0)
  goto <bb 10>; [29.93%]
else
  goto <bb 6>; [70.07%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 369399431]:
_20 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 303, "thisupd", thisupd_38);
if (_20 == 0)
  goto <bb 10>; [29.93%]
else
  goto <bb 7>; [70.07%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 258838181]:
_21 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 304, "nextupd", nextupd_41);
if (_21 == 0)
  goto <bb 10>; [29.93%]
else
  goto <bb 8>; [70.07%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 181367914]:
_22 = test_ptr ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 305, "cid", cid_52);
if (_22 == 0)
  goto <bb 10>; [29.93%]
else
  goto <bb 9>; [70.07%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 127084497]:
_23 = OCSP_basic_add1_status (bs_35, cid_52, 2, 0, 0B, thisupd_38, nextupd_41);
_24 = _23 != 0B;
_25 = (int) _24;
_26 = test_true ("./benchmarks/openssl/leak_1/openssl_leak_1.c", 306, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
if (_26 == 0)
  goto <bb 10>; [29.93%]
else
  goto <bb 11>; [70.07%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 438138180]:
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 89048107]:
ASN1_TIME_free (thisupd_38);
ASN1_TIME_free (nextupd_41);
ASN1_BIT_STRING_free (key_45);
ASN1_INTEGER_free (serial_47);
OCSP_CERTID_free (cid_52);
X509_NAME_free (name_43);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# _27 = PHI <0B(4), 0B(10), bs_35(11)>
namestr ={v} {CLOBBER};
keybytes ={v} {CLOBBER};
return _27;

=======Mapping node_fun:OCSP_basic_add1_status=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = rsp_16(D)->tbsResponseData.responses;
if (_1 == 0B)
  goto <bb 3>; [30.00%]
else
  goto <bb 5>; [70.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 322122544]:
_2 = sk_OCSP_SINGLERESP_new_null ();
_3 = (long int) _2;
_4 = (struct OCSP_SINGLERESP *) _3;
rsp_16(D)->tbsResponseData.responses = _4;
_5 = rsp_16(D)->tbsResponseData.responses;
if (_5 == 0B)
  goto <bb 4>; [18.09%]
else
  goto <bb 5>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 58271968]:
// predicted unlikely by goto predictor.
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1015469855]:
_6 = OCSP_CERTID_dup (cid_19(D));
_7 = (long int) _6;
_8 = (struct OCSP_CERTID *) _7;
MEM[(struct OCSP_SINGLERESP *)0B].certId = _8;
_9 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
if (_9 == 0B)
  goto <bb 6>; [30.95%]
else
  goto <bb 7>; [69.05%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 314287922]:
// predicted unlikely by goto predictor.
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 701181934]:
_10 = rsp_16(D)->tbsResponseData.responses;
_11 = sk_OCSP_SINGLERESP_push (_10, 0B);
if (_11 == 0)
  goto <bb 8>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 238401860]:
// predicted unlikely by goto predictor.

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 610961751]:
err:
OCSP_SINGLERESP_free (0B);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
return 0B;

=======Mapping node_fun:X509_NAME_add_entry_by_NID=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = X509_NAME_ENTRY_create_by_NID (0B, nid_6(D), type_7(D), bytes_8(D), len_9(D));
_2 = (long int) _1;
ne_11 = (void *) _2;
if (_1 == 0)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
ret_16 = X509_NAME_add_entry (name_12(D), ne_11, loc_13(D), set_14(D));
X509_NAME_ENTRY_free (ne_11);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _3 = PHI <0(2), ret_16(3)>
return _3;

=======Mapping node_fun:ASN1_TIME_set=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = ASN1_TIME_adj (s_2(D), t_3(D), 0, 0);
return _5;

=======Mapping node_fun:ASN1_TIME_adj=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = OPENSSL_gmtime (&t, &data);
_2 = (long int) _1;
ts_12 = (struct tm *) _2;
if (_1 == 0)
  goto <bb 6>; [17.38%]
else
  goto <bb 3>; [82.62%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 887125497]:
_3 = offset_day_13(D) != 0;
_4 = offset_sec_14(D) != 0;
_5 = _3 | _4;
if (_5 != 0)
  goto <bb 4>; [50.00%]
else
  goto <bb 5>; [50.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 443562748]:
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
if (_6 == 0)
  goto <bb 6>; [17.38%]
else
  goto <bb 5>; [82.62%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 810034292]:
_18 = asn1_time_from_tm (s_16(D), ts_12, -1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _7 = PHI <0B(2), 0B(4), _18(5)>
data ={v} {CLOBBER};
return _7;

=======Mapping node_fun:asn1_time_from_tm=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (type_34(D) == -1)
  goto <bb 3>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 217325344]:
_1 = ts_36(D)->tm_year;
_2 = is_utc (_1);
if (_2 != 0)
  goto <bb 10>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 108662672]:
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 856416479]:
if (type_34(D) == 23)
  goto <bb 6>; [20.24%]
else
  goto <bb 8>; [79.76%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 173338694]:
_3 = ts_36(D)->tm_year;
_4 = is_utc (_3);
if (_4 == 0)
  goto <bb 7>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 58935157]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 683077785]:
if (type_34(D) != 24)
  goto <bb 9>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 341538892]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 673267775]:
# type_26 = PHI <23(3), 24(4), type_34(D)(6), type_34(D)(8)>
if (s_39(D) == 0B)
  goto <bb 11>; [17.43%]
else
  goto <bb 12>; [82.57%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 117350573]:
_5 = ASN1_STRING_new ();
_6 = (long int) _5;
tmps_41 = (struct ASN1_TIME *) _6;

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 673267775]:
# tmps_27 = PHI <s_39(D)(10), tmps_41(11)>
if (tmps_27 == 0B)
  goto <bb 20>; [15.47%]
else
  goto <bb 13>; [84.53%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 569113248]:
_7 = ASN1_STRING_set (tmps_27, 0B, 20);
if (_7 == 0)
  goto <bb 14>; [34.00%]
else
  goto <bb 15>; [66.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 193498506]:
// predicted unlikely by goto predictor.
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 375614741]:
tmps_27->type = type_26;
p_44 = tmps_27->data;
if (type_26 == 24)
  goto <bb 16>; [34.00%]
else
  goto <bb 17>; [66.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 127709013]:
_8 = ts_36(D)->tm_sec;
_9 = ts_36(D)->tm_min;
_10 = ts_36(D)->tm_hour;
_11 = ts_36(D)->tm_mday;
_12 = ts_36(D)->tm_mon;
_13 = _12 + 1;
_14 = ts_36(D)->tm_year;
_15 = _14 + 1900;
_16 = BIO_snprintf (p_44, 20, "%04d%02d%02d%02d%02d%02dZ", _15, _13, _11, _10, _9, _8);
tmps_27->length = _16;
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 247905728]:
_17 = ts_36(D)->tm_sec;
_18 = ts_36(D)->tm_min;
_19 = ts_36(D)->tm_hour;
_20 = ts_36(D)->tm_mday;
_21 = ts_36(D)->tm_mon;
_22 = _21 + 1;
_23 = ts_36(D)->tm_year;
_24 = _23 % 100;
_25 = BIO_snprintf (p_44, 20, "%02d%02d%02d%02d%02d%02dZ", _24, _22, _20, _19, _18, _17);
tmps_27->length = _25;
goto <bb 20>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 593972556]:
# tmps_28 = PHI <0B(7), 0B(9), tmps_27(14)>
err:
if (tmps_28 != s_39(D))
  goto <bb 19>; [53.47%]
else
  goto <bb 20>; [46.53%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 317597125]:
ASN1_STRING_free (tmps_28);

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 1073741824]:
# _29 = PHI <0B(12), tmps_27(16), tmps_27(17), 0B(18), 0B(19)>
return _29;

=======Mapping node_fun:ASN1_BIT_STRING_set=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = ASN1_STRING_set (x_2(D), d_3(D), len_4(D));
return _6;

=======Mapping node_fun:ASN1_STRING_set=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (len_19(D) < 0)
  goto <bb 3>; [41.00%]
else
  goto <bb 5>; [59.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 440234143]:
if (_data_18(D) == 0B)
  goto <bb 11>; [18.09%]
else
  goto <bb 4>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 360595787]:
_1 = strlen (_data_18(D));
len_21 = (int) _1;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 994103467]:
# len_14 = PHI <len_19(D)(2), len_21(4)>
_2 = str_22(D)->length;
if (_2 <= len_14)
  goto <bb 7>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 666049325]:
_3 = str_22(D)->data;
if (_3 == 0B)
  goto <bb 7>; [30.00%]
else
  goto <bb 9>; [70.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 527868937]:
c_23 = str_22(D)->data;
_4 = len_14 + 1;
_5 = OPENSSL_realloc (c_23, _4);
_6 = (long int) _5;
_7 = (unsigned char *) _6;
str_22(D)->data = _7;
_8 = str_22(D)->data;
if (_8 == 0B)
  goto <bb 8>; [18.09%]
else
  goto <bb 9>; [81.91%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 95491491]:
str_22(D)->data = c_23;
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 898611976]:
str_22(D)->length = len_14;
if (_data_18(D) != 0B)
  goto <bb 10>; [53.47%]
else
  goto <bb 11>; [46.53%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 480487822]:
_9 = (long unsigned int) len_14;
_10 = str_22(D)->data;
memcpy (_10, _data_18(D), _9);
_11 = str_22(D)->data;
_12 = (sizetype) len_14;
_13 = _11 + _12;
*_13 = 0;

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# _15 = PHI <0(3), 0(8), 1(9), 1(10)>
return _15;

=======Mapping node_fun:test_true=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (b_3(D) != 0)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <1(2), 0(3)>
return _1;

=======Mapping node_fun:test_ptr=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (p_3(D) != 0B)
  goto <bb 4>; [70.93%]
else
  goto <bb 3>; [29.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 312136752]:
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <1(2), 0(3)>
return _1;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 0 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    find Entry point : 37 [0m
[40;34m    used_stmt array stack totalsize of : 0.015480 mb[0m
[40;34m    collect time: : 0.000919 s [0m
[40;34m    algorithm time: 0.376017 s [0m
[40;34m    gimple stmt count : : 227 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.3%|     -0.3%|
copyprop                         |      |      |      |      |     -0.3%|     -0.3%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                             |      |      |      |      |          |     -0.0%|
dce                              |      |      |      |      |          |     -0.0%|
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +0.8%|     -0.0%|
strlen                           |      |      |      |      |     +0.8%|     -0.0%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +76.0%|    +52.0%|
into_cfglayout                   |      |      |      |      |     -1.5%|     -0.7%|
jump                             |      |      |      |      |     -2.0%|     -1.5%|
subreg1                          |      |      |      |      |     -0.4%|     -0.8%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -0.4%|     -0.5%|
ce1                              |      |      |      |      |     -0.5%|     -0.2%|
reginfo                          |      |      |      |      |     -0.1%|     +0.3%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +2.5%|     +5.3%|
ce2                              |      |      |      |      |     +2.5%|     +5.1%|
outof_cfglayout                  |      |      |      |      |     +1.1%|     +0.5%|
split1                           |      |      |      |      |     +1.1%|     +0.5%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.5%|     -0.2%|
reload                           |      |      |      |      |     -9.3%|    -12.5%|
postreload                       |      |      |      |      |     -9.7%|    -14.2%|
split2                           |      |      |      |      |     +1.1%|     +1.4%|
cmpelim                          |      |      |      |      |     +1.2%|     +1.4%|
pro_and_epilogue                 |      |      |      |      |     +6.8%|    +14.7%|
dse2                             |      |      |      |      |     +6.4%|    +12.8%|
csa                              |      |      |      |      |     -0.1%|     -0.1%|
jump2                            |      |      |      |      |     -0.1%|     -0.1%|
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     +0.1%|     -0.1%|
split4                           |      |      |      |      |     +0.1%|     -0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `test_true':
<artificial>:(.text+0x35): undefined reference to `test_fail_message'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `test_ptr':
<artificial>:(.text+0x7a): undefined reference to `test_fail_message'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `ASN1_STRING_set':
<artificial>:(.text+0x102): undefined reference to `OPENSSL_realloc'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `asn1_time_from_tm':
<artificial>:(.text+0x1d1): undefined reference to `BIO_snprintf'
/usr/bin/ld: <artificial>:(.text+0x1eb): undefined reference to `is_utc'
/usr/bin/ld: <artificial>:(.text+0x204): undefined reference to `is_utc'
/usr/bin/ld: <artificial>:(.text+0x21e): undefined reference to `ASN1_STRING_new'
/usr/bin/ld: <artificial>:(.text+0x27c): undefined reference to `BIO_snprintf'
/usr/bin/ld: <artificial>:(.text+0x29e): undefined reference to `ASN1_STRING_free'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `ASN1_TIME_adj':
<artificial>:(.text+0x2ed): undefined reference to `OPENSSL_gmtime'
/usr/bin/ld: <artificial>:(.text+0x32a): undefined reference to `OPENSSL_gmtime_adj'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `X509_NAME_add_entry_by_NID':
<artificial>:(.text+0x373): undefined reference to `X509_NAME_ENTRY_create_by_NID'
/usr/bin/ld: <artificial>:(.text+0x3a0): undefined reference to `X509_NAME_add_entry'
/usr/bin/ld: <artificial>:(.text+0x3af): undefined reference to `X509_NAME_ENTRY_free'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `OCSP_basic_add1_status':
<artificial>:(.text+0x3d1): undefined reference to `OCSP_CERTID_dup'
/usr/bin/ld: <artificial>:(.text+0x3f3): undefined reference to `sk_OCSP_SINGLERESP_push'
/usr/bin/ld: <artificial>:(.text+0x406): undefined reference to `OCSP_SINGLERESP_free'
/usr/bin/ld: <artificial>:(.text+0x41c): undefined reference to `sk_OCSP_SINGLERESP_new_null'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `make_dummy_resp':
<artificial>:(.text+0x509): undefined reference to `OCSP_BASICRESP_new'
/usr/bin/ld: <artificial>:(.text+0x55c): undefined reference to `X509_NAME_new'
/usr/bin/ld: <artificial>:(.text+0x569): undefined reference to `ASN1_BIT_STRING_new'
/usr/bin/ld: <artificial>:(.text+0x575): undefined reference to `ASN1_INTEGER_new'
/usr/bin/ld: <artificial>:(.text+0x5e3): undefined reference to `EVP_sha256'
/usr/bin/ld: <artificial>:(.text+0x5f8): undefined reference to `OCSP_cert_id_new'
/usr/bin/ld: <artificial>:(.text+0x6d8): undefined reference to `ASN1_TIME_free'
/usr/bin/ld: <artificial>:(.text+0x6e7): undefined reference to `ASN1_TIME_free'
/usr/bin/ld: <artificial>:(.text+0x6f4): undefined reference to `ASN1_BIT_STRING_free'
/usr/bin/ld: <artificial>:(.text+0x701): undefined reference to `ASN1_INTEGER_free'
/usr/bin/ld: <artificial>:(.text+0x70e): undefined reference to `OCSP_CERTID_free'
/usr/bin/ld: <artificial>:(.text+0x71b): undefined reference to `X509_NAME_free'
/usr/bin/ld: /tmp/ccAlrC1c.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x7ac): undefined reference to `get_cert_and_key'
/usr/bin/ld: <artificial>:(.text+0x7d6): undefined reference to `EVP_sha1'
/usr/bin/ld: <artificial>:(.text+0x7fb): undefined reference to `OCSP_basic_sign'
/usr/bin/ld: <artificial>:(.text+0x82c): undefined reference to `OCSP_BASICRESP_free'
/usr/bin/ld: <artificial>:(.text+0x866): undefined reference to `EVP_sha1'
/usr/bin/ld: <artificial>:(.text+0x88b): undefined reference to `OCSP_basic_sign'
/usr/bin/ld: <artificial>:(.text+0x8c6): undefined reference to `OCSP_resp_get0_signer'
/usr/bin/ld: <artificial>:(.text+0x8fe): undefined reference to `X509_cmp'
/usr/bin/ld: <artificial>:(.text+0x90f): undefined reference to `TEST_int_eq'
/usr/bin/ld: <artificial>:(.text+0x924): undefined reference to `OCSP_BASICRESP_free'
/usr/bin/ld: <artificial>:(.text+0x933): undefined reference to `X509_free'
/usr/bin/ld: <artificial>:(.text+0x942): undefined reference to `EVP_PKEY_free'
collect2: error: ld returned 1 exit status
