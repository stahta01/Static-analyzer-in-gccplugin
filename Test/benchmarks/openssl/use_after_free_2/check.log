../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 39%)
 phase parsing                      :   0.03 ( 75%)   0.02 (100%)   0.05 ( 83%)  1895k ( 56%)
 phase opt and generate             :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 17%)   164k (  5%)
 callgraph ipa passes               :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    62k (  2%)
 lto stream output                  :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 preprocessing                      :   0.00 (  0%)   0.02 (100%)   0.02 ( 33%)  1083k ( 32%)
 lexical analysis                   :   0.03 ( 75%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   677k ( 20%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   107k (  3%)
 tree eh                            :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1528  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 TOTAL                              :   0.04          0.02          0.06         3368k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)  2157k ( 98%)
 phase finalize                     :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2193k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:wait_for_async=========
=======node_fun:SSL_get_all_async_fds=========
=======node_fun:ASYNC_WAIT_CTX_get_all_fds=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 14 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
wait_for_async (&s);
# .MEM_47 = VDEF <.MEM_46(D)>
_1 = SSL_get_all_async_fds (s_24(D), 0B, &numfds);
# .MEM_48 = VDEF <.MEM_47>
fds_27 = malloc (_4);
# .MEM_49 = VDEF <.MEM_48>
_5 = SSL_get_all_async_fds (s_24(D), fds_27, &numfds);
# .MEM_54 = VDEF <.MEM_44>
asyncfds.__fds_bits[_34] = _14;
# .MEM_51 = VDEF <.MEM_44>
select (width_19, &asyncfds, 0B, 0B, 0B);
# .MEM_12 = VDEF <.MEM_11(D)>
_9 = ASYNC_WAIT_CTX_get_all_fds (ctx_5, fds_6(D), numfds_7(D));
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
wait_for_async (&s);
s ={v} {CLOBBER};
return 0;

=======Mapping node_fun:wait_for_async=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 366114918]:
_1 = SSL_get_all_async_fds (s_24(D), 0B, &numfds);
if (_1 == 0)
  goto <bb 12>; [34.00%]
else
  goto <bb 3>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 241635845]:
_2 = numfds;
if (_2 == 0)
  goto <bb 12>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118111600]:
_3 = numfds;
_4 = _3 * 4;
fds_27 = malloc (_4);
_5 = SSL_get_all_async_fds (s_24(D), fds_27, &numfds);
if (_5 == 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 38976828]:
free (fds_27);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 118111600]:
# width_42 = PHI <0(4), 0(5)>
# fds_40 = PHI <fds_27(4), fds_27(5)>
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630225]:
_6 = *fds_20;
if (_6 >= width_19)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 477815112]:
_7 = *fds_20;
width_33 = _7 + 1;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 955630225]:
# width_18 = PHI <width_19(7), width_33(8)>
_8 = *fds_20;
_34 = _8 / 64;
_9 = asyncfds.__fds_bits[_34];
_10 = *fds_20;
_11 = _10 & 63;
_12 = 1 << _11;
_13 = (long int) _12;
_14 = _9 | _13;
asyncfds.__fds_bits[_34] = _14;
_15 = numfds;
_16 = _15 + 18446744073709551615;
numfds = _16;
fds_37 = fds_20 + 4;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# width_19 = PHI <width_42(6), width_18(9)>
# fds_20 = PHI <fds_40(6), fds_37(9)>
_17 = numfds;
if (_17 != 0)
  goto <bb 7>; [89.00%]
else
  goto <bb 11>; [11.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 118111600]:
select (width_19, &asyncfds, 0B, 0B, 0B);
asyncfds ={v} {CLOBBER};
numfds ={v} {CLOBBER};
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 248003318]:
asyncfds ={v} {CLOBBER};
numfds ={v} {CLOBBER};

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 366114918]:
return;

=======Mapping node_fun:SSL_get_all_async_fds=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ctx_5 = s_4(D)->waitctx;
if (ctx_5 == 0B)
  goto <bb 4>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_9 = ASYNC_WAIT_CTX_get_all_fds (ctx_5, fds_6(D), numfds_7(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <0(2), _9(3)>
return _1;

=======Mapping node_fun:ASYNC_WAIT_CTX_get_all_fds=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
curr_12 = ctx_11(D)->fds;
*numfds_13(D) = 0;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = curr_7->del;
if (_1 != 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 315357973]:
curr_21 = curr_7->next;
// predicted unlikely by continue predictor.
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 640272253]:
if (fd_6 != 0B)
  goto <bb 6>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 448190578]:
_2 = curr_7->fd;
*fd_6 = _2;
fd_18 = fd_6 + 4;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 640272253]:
# fd_5 = PHI <fd_6(5), fd_18(6)>
_3 = *numfds_13(D);
_4 = _3 + 1;
*numfds_13(D) = _4;
curr_20 = curr_7->next;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630225]:
# fd_16 = PHI <fd_6(4), fd_5(7)>
# curr_22 = PHI <curr_21(4), curr_20(7)>

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# fd_6 = PHI <fd_15(D)(2), fd_16(8)>
# curr_7 = PHI <curr_12(2), curr_22(8)>
if (curr_7 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 9>; [11.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 118111600]:
return 1;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 14 [0m
[40;34m    analyzable ptable point : 12 [0m
[40;34m    analyzable ptable all point stmt : 79 [0m
[40;34m    used_stmt array stack totalsize of : 0.002440 mb[0m
[40;34m    collect time: : 0.000134 s [0m
[40;34m    mapping time: : 0.000482 s [0m
[40;34m    algorithm time: 0.001341 s [0m
[40;34m    gimple stmt count : : 58 [0m
[40;34m    this report analysis in Mon Jun 20 14:58:14 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)  2157k ( 85%)
 phase opt and generate             :   0.02 (100%)   0.01 (100%)   0.02 ( 67%)   361k ( 14%)
 callgraph functions expansion      :   0.02 (100%)   0.01 (100%)   0.02 ( 67%)   288k ( 11%)
 cfg construction                   :   0.01 ( 50%)   0.01 (100%)   0.00 (  0%)   352  (  0%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)    12k (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)    12k (  0%)
 rest of compilation                :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)    12k (  0%)
 TOTAL                              :   0.02          0.01          0.03         2552k
