./benchmarks/openssl/leak_6/openssl_leak_6.c: In function â€˜BN_cmpâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:33:5: warning: implicit declaration of function â€˜bn_check_topâ€™ [-Wimplicit-function-declaration]
   33 |     bn_check_top(a);
      |     ^~~~~~~~~~~~
./benchmarks/openssl/leak_6/openssl_leak_6.c: In function â€˜BN_rshift1â€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: implicit declaration of function â€˜BN_is_zeroâ€™ [-Wimplicit-function-declaration]
   73 |     if (BN_is_zero(a)) {
      |         ^~~~~~~~~~
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: implicit declaration of function â€˜BN_zeroâ€™ [-Wimplicit-function-declaration]
   74 |         BN_zero(r);
      |         ^~~~~~~
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: implicit declaration of function â€˜bn_wexpandâ€™ [-Wimplicit-function-declaration]
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^~~~~~~~~~
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:30: warning: comparison between pointer and integer
   81 |         if (bn_wexpand(r, j) == NULL)
      |                              ^~
./benchmarks/openssl/leak_6/openssl_leak_6.c: In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:9: warning: implicit declaration of function â€˜BN_get_wordâ€™ [-Wimplicit-function-declaration]
  106 |     if (BN_get_word(dh->g) != 2)
      |         ^~~~~~~~~~~
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:21: warning: implicit declaration of function â€˜BN_dupâ€™; did you mean â€˜BN_cmpâ€™? [-Wimplicit-function-declaration]
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                     ^~~~~~
      |                     BN_cmp
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:21: warning: initialization of â€˜BIGNUM *â€™ {aka â€˜struct bignum_st *â€™} from â€˜intâ€™ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: implicit declaration of function â€˜BN_freeâ€™; did you mean â€˜freeâ€™? [-Wimplicit-function-declaration]
  125 |             BN_free(q);
      |             ^~~~~~~
      |             free
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.9%|          |
nothrow                          |      |      |      |      |     -1.9%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:DH_get_nid=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 3
succs:= 4
succs:= 5
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 9
succs:= 10
succs:= 11
succs:= 2
succs:= 7
succs:= 8
succs:= 11
=======node_fun:BN_rshift1=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 4
--------GIMPLE Cond -------
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
succs:= 12
succs:= 5
=======node_fun:BN_cmp=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 14
succs:= 15
--------GIMPLE Cond -------
succs:= 3
succs:= 4
succs:= 7
succs:= 11
succs:= 12
succs:= 14
succs:= 15
succs:= 17
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 0 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
DH_get_nid (&dh);
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
# .MEM_41 = VDEF <.MEM_40>
_6 = BN_cmp (_5, &_bignum_ffdhe3072_p);
# .MEM_42 = VDEF <.MEM_41>
_8 = BN_cmp (_7, &_bignum_ffdhe4096_p);
# .MEM_43 = VDEF <.MEM_42>
_10 = BN_cmp (_9, &_bignum_ffdhe6144_p);
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
# .MEM_46 = VDEF <.MEM_45>
_17 = BN_rshift1 (q_34, q_34);
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
# .MEM_70 = VDEF <.MEM_69>
_1 = BN_is_zero (a_37(D));
# .MEM_78 = VDEF <.MEM_70>
BN_zero (r_35(D));
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
# .MEM_37 = VDEF <.MEM_36(D)>
bn_check_top (a_26(D));
# .MEM_38 = VDEF <.MEM_37>
bn_check_top (b_27(D));
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:DH_get_nid========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path DH_get_nid  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:BN_free========= [0m
[40;33m =======POP node_fun stack:BN_free========= [0m
[40;42m =======pre add _ fucntion:BN_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path BN_cmp  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;33m =======POP node_fun stack:bn_check_top========= [0m
[40;42m =======pre_check_funciton:BN_cmp========= [0m
[40;42m =======start_check_funciton:BN_cmp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5843c50a68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c480 a>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f5843c416d8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = a_26(D)->d;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:15: warning: use location
   55 |         t1 = a->d[i];
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = _13 + _15;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:18: warning: use location
   55 |         t1 = a->d[i];
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t1_32 = *_16;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:12: warning: use location
   55 |         t1 = a->d[i];
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t1_32 < t2_33)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:59:12: warning: use location
   59 |         if (t1 < t2)
      |            ^
if (t1_32 < t2_33)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:59:12: warning: use location
Cond in fucntion BN_cmp basic block 15
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 18

======================================================================
_12 = a_26(D)->top;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:15: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 18

======================================================================
i_31 = _12 + -1;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:12: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_21 = PHI <i_31(13), i_34(16)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (i_21 >= 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:28: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |                            ^
if (i_21 >= 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:28: warning: use location
Cond in fucntion BN_cmp basic block 17
 ================== possible direct basic block ================= 
from BN_cmp basic block 14
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
_10 = a_26(D)->top;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:10: warning: use location
   52 |     if (a->top < b->top)
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
if (_10 < _11)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:8: warning: use location
   52 |     if (a->top < b->top)
      |        ^
if (_10 < _11)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:8: warning: use location
Cond in fucntion BN_cmp basic block 12
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_8 = a_26(D)->top;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:10: warning: use location
   50 |     if (a->top > b->top)
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_8 > _9)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:8: warning: use location
   50 |     if (a->top > b->top)
      |        ^
if (_8 > _9)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:8: warning: use location
Cond in fucntion BN_cmp basic block 11
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_7 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:10: warning: use location
   42 |     if (a->neg == 0) {
      |          ^
if (_7 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:8: warning: use location
   42 |     if (a->neg == 0) {
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:8: warning: use location
Cond in fucntion BN_cmp basic block 9
 ================== possible direct basic block ================= 
from BN_cmp basic block 11
 ================== possible direct basic block ================= 
from BN_cmp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
_6 = a_26(D)->neg;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:37:14: warning: use location
   37 |         if (a->neg)
      |              ^
_4 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:10: warning: use location
   36 |     if (a->neg != b->neg) {
      |          ^
if (_4 != _5)
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:8: warning: use location
   36 |     if (a->neg != b->neg) {
      |        ^
if (_4 != _5)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:8: warning: use location
Cond in fucntion BN_cmp basic block 6
 ================== possible direct basic block ================= 
from BN_cmp basic block 7
 ================== possible direct basic block ================= 
from BN_cmp basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
# .MEM_37 = VDEF <.MEM_36(D)>
bn_check_top (a_26(D));
bn_check_top (a_26(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:33:5: warning: use location
   33 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
if (a_26(D) != 0B)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:25:12: warning: use location
   25 |         if (a != NULL)
      |            ^
if (a_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:25:12: warning: use location
Cond in fucntion BN_cmp basic block 3
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = a_26(D) == 0B;
./benchmarks/openssl/leak_6/openssl_leak_6.c:24:12: warning: use location
   24 |     if ((a == NULL) || (b == NULL)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c50a68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c480 a>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f5843c416d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c50ab0
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c500 b>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7f5843c416f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:BN_cmp========= [0m
[40;42m =======pre add _ fucntion:BN_rshift1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path BN_rshift1  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;33m =======POP node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;33m =======POP node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;33m =======POP node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;33m =======POP node_fun stack:BN_is_zero========= [0m
[40;42m =======pre_check_funciton:BN_rshift1========= [0m
[40;42m =======start_check_funciton:BN_rshift1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c380 r>
    def_stmt GIMPLE_NOP
    version:35
    ptr-info 0x7f5843c41618>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
=======================Path Constaint===========================

=succs:= 12
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
	relate logic:= 0
=succs:= 8
if (_13 != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:120:8: warning: use location
  120 |     if (dh->q != NULL) {
      |        ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
	relate logic:= 0
=succs:= 6
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
	relate logic:= 0
=succs:= 5
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
	relate logic:= 0
=succs:= 4
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
	relate logic:= 0
=succs:= 3
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
	relate logic:= 0
=succs:= 2
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c380 r>
    def_stmt GIMPLE_NOP
    version:35
    ptr-info 0x7f5843c41618>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
=======================Path Constaint===========================

=succs:= 12
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
	relate logic:= 0
=succs:= 8
if (_13 != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:120:8: warning: use location
  120 |     if (dh->q != NULL) {
      |        ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
	relate logic:= 0
=succs:= 6
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
	relate logic:= 0
=succs:= 5
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
	relate logic:= 0
=succs:= 4
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
	relate logic:= 0
=succs:= 3
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
	relate logic:= 0
=succs:= 2
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
ap_41 = a_37(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:78:8: warning: use location
   78 |     ap = a->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ap_41 + _18;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:15: warning: use location
   91 |         t = ap[--i];
      |               ^
_13 = ap_41 + _12;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:11: warning: use location
   86 |     t = ap[--i];
      |           ^
_5 = ap_41 + _4;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
_6 = *_5;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
_7 = _6 == 1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                        ^
_8 = (int) _7;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
i_46 = i_40 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:7: warning: use location
   86 |     t = ap[--i];
      |       ^
i_59 = PHI <i_46(7), i_46(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_28 = PHI <i_59(9), i_54(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_54 = i_28 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:11: warning: use location
   91 |         t = ap[--i];
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) i_54;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^
_14 = (long unsigned int) i_46;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
_15 = _14 * 8;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
_2 = (long unsigned int) i_40;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
i_40 = a_37(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:77:7: warning: use location
   77 |     i = a->top;
      |       ^
_1 = BN_is_zero (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: use location
   73 |     if (BN_is_zero(a)) {
      |         ^
this stmt is child function---BN_is_zero-----

 ================== trace ================== 
trace fucntion name:BN_is_zero 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
ap_41 = a_37(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:78:8: warning: use location
   78 |     ap = a->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ap_41 + _18;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:15: warning: use location
   91 |         t = ap[--i];
      |               ^
_13 = ap_41 + _12;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:11: warning: use location
   86 |     t = ap[--i];
      |           ^
_5 = ap_41 + _4;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
_6 = *_5;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
_7 = _6 == 1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                        ^
_8 = (int) _7;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
i_46 = i_40 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:7: warning: use location
   86 |     t = ap[--i];
      |       ^
i_59 = PHI <i_46(7), i_46(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_28 = PHI <i_59(9), i_54(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_54 = i_28 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:11: warning: use location
   91 |         t = ap[--i];
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) i_54;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^
_14 = (long unsigned int) i_46;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
_15 = _14 * 8;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
_2 = (long unsigned int) i_40;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
i_40 = a_37(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:77:7: warning: use location
   77 |     i = a->top;
      |       ^
_1 = BN_is_zero (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: use location
   73 |     if (BN_is_zero(a)) {
      |         ^
this stmt is child function---BN_is_zero-----

 ================== trace ================== 
trace fucntion name:BN_is_zero 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:BN_rshift1========= [0m
[40;42m =======pre add _ fucntion:BN_dup========= [0m
[40;33m =======POP node_fun stack:BN_dup========= [0m
[40;42m =======pre add _ fucntion:BN_get_word========= [0m
[40;33m =======POP node_fun stack:BN_get_word========= [0m
[40;42m =======pre_check_funciton:DH_get_nid========= [0m
[40;42m =======start_check_funciton:DH_get_nid========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5844111750
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = dh_26(D)->g;
    version:1
    ptr-info 0x7f5843c41498>
# VUSE <.MEM_38(D)>
_1 = dh_26(D)->g;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
bb index := 2
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
bb index := 2
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
bb index := 2
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================
_2 = BN_get_word (_1);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:9: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |         ^
this stmt is child function---BN_get_word-----

 ================== trace ================== 
trace fucntion name:BN_get_word 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 2)
bb index := 2
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 2)
bb index := 2
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 2)
bb index := 2
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================
if (_2 != 2)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
if (_2 != 2)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
Cond in fucntion DH_get_nid basic block 2
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== possible direct basic block ================= 
from DH_get_nid basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111750
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = dh_26(D)->g;
    version:1
    ptr-info 0x7f5843c41498>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f58441117e0
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = dh_26(D)->p;
    version:3
    ptr-info 0x7f5843c414b0>
# VUSE <.MEM_39>
_3 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
bb index := 3
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:10: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |          ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 3
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
if (_4 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
Cond in fucntion DH_get_nid basic block 3
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f58441117e0
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = dh_26(D)->p;
    version:3
    ptr-info 0x7f5843c414b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111870
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = dh_26(D)->p;
    version:5
    ptr-info 0x7f5843c414c8>
# VUSE <.MEM_40>
_5 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = BN_cmp (_5, &_bignum_ffdhe3072_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:15: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
Cond in fucntion DH_get_nid basic block 4
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111870
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = dh_26(D)->p;
    version:5
    ptr-info 0x7f5843c414c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111900
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _7 = dh_26(D)->p;
    version:7
    ptr-info 0x7f5843c414e0>
# VUSE <.MEM_41>
_7 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_8 = BN_cmp (_7, &_bignum_ffdhe4096_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:15: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
if (_8 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
Cond in fucntion DH_get_nid basic block 5
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111900
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _7 = dh_26(D)->p;
    version:7
    ptr-info 0x7f5843c414e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111990
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = dh_26(D)->p;
    version:9
    ptr-info 0x7f5843c414f8>
# VUSE <.MEM_42>
_9 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_10 = BN_cmp (_9, &_bignum_ffdhe6144_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:15: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
Cond in fucntion DH_get_nid basic block 6
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111990
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = dh_26(D)->p;
    version:9
    ptr-info 0x7f5843c414f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111a20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = dh_26(D)->p;
    version:11
    ptr-info 0x7f5843c41510>
# VUSE <.MEM_43>
_11 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
bb index := 7
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:15: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 7
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
if (_12 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
Cond in fucntion DH_get_nid basic block 7
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111a20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = dh_26(D)->p;
    version:11
    ptr-info 0x7f5843c41510>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111af8
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _14 = dh_26(D)->p;
    version:14
    ptr-info 0x7f5843c41540>
# VUSE <.MEM_35>
_14 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
bb index := 9
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
_15 = BN_dup (_14);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:21: warning: use location
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                     ^
this stmt is child function---BN_dup-----

 ================== trace ================== 
trace fucntion name:BN_dup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
if (_15 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:12: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |            ^
if (_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:12: warning: use location
Cond in fucntion DH_get_nid basic block 9
 ================== possible direct basic block ================= 
from DH_get_nid basic block 12
 ================== possible direct basic block ================= 
from DH_get_nid basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (long int) _15;
bb index := 9
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (long int) _15;
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (long int) _15;
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
_16 = (long int) _15;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:21: warning: use location
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
q_34 = (struct BIGNUM *) _16;
bb index := 9
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
q_34 = (struct BIGNUM *) _16;
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
q_34 = (struct BIGNUM *) _16;
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
q_34 = (struct BIGNUM *) _16;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:17: warning: use location
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
BN_free (q_34);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: use location
  125 |             BN_free(q);
      |             ^
this stmt is child function---BN_free-----

 ================== trace ================== 
trace fucntion name:BN_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_19 = BN_cmp (_18, q_34);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:48: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                                ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                           ^
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111af8
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _14 = dh_26(D)->p;
    version:14
    ptr-info 0x7f5843c41540>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111d80
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5843c45120 q>
    def_stmt q_34 = (struct BIGNUM *) _16;
    version:34
    ptr-info 0x7f5843c41588>
q_34 = (struct BIGNUM *) _16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
BN_free (q_34);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: use location
  125 |             BN_free(q);
      |             ^
this stmt is child function---BN_free-----

 ================== trace ================== 
trace fucntion name:BN_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_19 = BN_cmp (_18, q_34);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:48: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                                ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_19 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                            ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
Cond in fucntion DH_get_nid basic block 11
 ================== possible direct basic block ================= 
from DH_get_nid basic block 12
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                           ^
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111d80
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5843c45120 q>
    def_stmt q_34 = (struct BIGNUM *) _16;
    version:34
    ptr-info 0x7f5843c41588>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111c18
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = dh_26(D)->q;
    version:18
    ptr-info 0x7f5843c41558>
# VUSE <.MEM_46>
_18 = dh_26(D)->q;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_19 = BN_cmp (_18, q_34);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:48: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                                ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_19 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                            ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
Cond in fucntion DH_get_nid basic block 11
 ================== possible direct basic block ================= 
from DH_get_nid basic block 12
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
BN_free (q_34);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: use location
  125 |             BN_free(q);
      |             ^
this stmt is child function---BN_free-----

 ================== trace ================== 
trace fucntion name:BN_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                           ^
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111c18
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = dh_26(D)->q;
    version:18
    ptr-info 0x7f5843c41558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:DH_get_nid========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f5844305a40
    type <pointer_type 0x7f5843c3b1f8
        type <record_type 0x7f5843c3b0a8 DH BLK
            size <integer_cst 0x7f58441de0a8 constant 1088>
            unit-size <integer_cst 0x7f5843c29858 constant 136>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c3ac78 fields <field_decl 0x7f5843c35e40 pad> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3b1f8>>
        unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f58449b1ea0 dh type <record_type 0x7f5843c3b0a8 DH>
        addressable BLK ./benchmarks/openssl/leak_6/openssl_leak_6.c:134:5 size <integer_cst 0x7f58441de0a8 1088> unit-size <integer_cst 0x7f5843c29858 136>
        align:64 warn_if_not_align:0 context <function_decl 0x7f5843c33d00 main>>
    ./benchmarks/openssl/leak_6/openssl_leak_6.c:135:13 start: ./benchmarks/openssl/leak_6/openssl_leak_6.c:135:13 finish: ./benchmarks/openssl/leak_6/openssl_leak_6.c:135:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:DH_get_nid========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path DH_get_nid  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:BN_free========= [0m
[40;33m =======POP node_fun stack:BN_free========= [0m
[40;42m =======pre add _ fucntion:BN_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path BN_cmp  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;33m =======POP node_fun stack:bn_check_top========= [0m
[40;42m =======pre_check_funciton:BN_cmp========= [0m
[40;42m =======start_check_funciton:BN_cmp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5843c50a68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c480 a>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f5843c416d8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = a_26(D)->d;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:15: warning: use location
   55 |         t1 = a->d[i];
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = _13 + _15;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:18: warning: use location
   55 |         t1 = a->d[i];
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t1_32 = *_16;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:12: warning: use location
   55 |         t1 = a->d[i];
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t1_32 < t2_33)
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:59:12: warning: use location
   59 |         if (t1 < t2)
      |            ^
if (t1_32 < t2_33)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:59:12: warning: use location
Cond in fucntion BN_cmp basic block 15
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 18

======================================================================
_12 = a_26(D)->top;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:15: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 18

======================================================================
i_31 = _12 + -1;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:12: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_21 = PHI <i_31(13), i_34(16)>
In function â€˜DH_get_nidâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (i_21 >= 0)
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:28: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |                            ^
if (i_21 >= 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:28: warning: use location
Cond in fucntion BN_cmp basic block 17
 ================== possible direct basic block ================= 
from BN_cmp basic block 14
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
_10 = a_26(D)->top;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:10: warning: use location
   52 |     if (a->top < b->top)
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
if (_10 < _11)
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:8: warning: use location
   52 |     if (a->top < b->top)
      |        ^
if (_10 < _11)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:8: warning: use location
Cond in fucntion BN_cmp basic block 12
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_8 = a_26(D)->top;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:10: warning: use location
   50 |     if (a->top > b->top)
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_8 > _9)
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:8: warning: use location
   50 |     if (a->top > b->top)
      |        ^
if (_8 > _9)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:8: warning: use location
Cond in fucntion BN_cmp basic block 11
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_7 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:10: warning: use location
   42 |     if (a->neg == 0) {
      |          ^
if (_7 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:8: warning: use location
   42 |     if (a->neg == 0) {
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:8: warning: use location
Cond in fucntion BN_cmp basic block 9
 ================== possible direct basic block ================= 
from BN_cmp basic block 11
 ================== possible direct basic block ================= 
from BN_cmp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
_6 = a_26(D)->neg;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:37:14: warning: use location
   37 |         if (a->neg)
      |              ^
_4 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:10: warning: use location
   36 |     if (a->neg != b->neg) {
      |          ^
if (_4 != _5)
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:8: warning: use location
   36 |     if (a->neg != b->neg) {
      |        ^
if (_4 != _5)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:8: warning: use location
Cond in fucntion BN_cmp basic block 6
 ================== possible direct basic block ================= 
from BN_cmp basic block 7
 ================== possible direct basic block ================= 
from BN_cmp basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
# .MEM_37 = VDEF <.MEM_36(D)>
bn_check_top (a_26(D));
bn_check_top (a_26(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:33:5: warning: use location
   33 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
if (a_26(D) != 0B)
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:25:12: warning: use location
   25 |         if (a != NULL)
      |            ^
if (a_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:25:12: warning: use location
Cond in fucntion BN_cmp basic block 3
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = a_26(D) == 0B;
./benchmarks/openssl/leak_6/openssl_leak_6.c:24:12: warning: use location
   24 |     if ((a == NULL) || (b == NULL)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c50a68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c480 a>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f5843c416d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c50ab0
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c500 b>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7f5843c416f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:BN_cmp========= [0m
[40;42m =======pre add _ fucntion:BN_rshift1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path BN_rshift1  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;33m =======POP node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;33m =======POP node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;33m =======POP node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;33m =======POP node_fun stack:BN_is_zero========= [0m
[40;42m =======pre_check_funciton:BN_rshift1========= [0m
[40;42m =======start_check_funciton:BN_rshift1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c380 r>
    def_stmt GIMPLE_NOP
    version:35
    ptr-info 0x7f5843c41618>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
=======================Path Constaint===========================

=succs:= 12
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
	relate logic:= 0
=succs:= 8
if (_13 != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:120:8: warning: use location
  120 |     if (dh->q != NULL) {
      |        ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
	relate logic:= 0
=succs:= 6
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
	relate logic:= 0
=succs:= 5
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
	relate logic:= 0
=succs:= 4
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
	relate logic:= 0
=succs:= 3
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
	relate logic:= 0
=succs:= 2
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c380 r>
    def_stmt GIMPLE_NOP
    version:35
    ptr-info 0x7f5843c41618>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
=======================Path Constaint===========================

=succs:= 12
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
	relate logic:= 0
=succs:= 8
if (_13 != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:120:8: warning: use location
  120 |     if (dh->q != NULL) {
      |        ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
	relate logic:= 0
=succs:= 6
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
	relate logic:= 0
=succs:= 5
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
	relate logic:= 0
=succs:= 4
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
	relate logic:= 0
=succs:= 3
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
	relate logic:= 0
=succs:= 2
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
ap_41 = a_37(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:78:8: warning: use location
   78 |     ap = a->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ap_41 + _18;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:15: warning: use location
   91 |         t = ap[--i];
      |               ^
_13 = ap_41 + _12;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:11: warning: use location
   86 |     t = ap[--i];
      |           ^
_5 = ap_41 + _4;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
_6 = *_5;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
_7 = _6 == 1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                        ^
_8 = (int) _7;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
i_46 = i_40 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:7: warning: use location
   86 |     t = ap[--i];
      |       ^
i_59 = PHI <i_46(7), i_46(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_28 = PHI <i_59(9), i_54(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_54 = i_28 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:11: warning: use location
   91 |         t = ap[--i];
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) i_54;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^
_14 = (long unsigned int) i_46;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
_15 = _14 * 8;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
_2 = (long unsigned int) i_40;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
i_40 = a_37(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:77:7: warning: use location
   77 |     i = a->top;
      |       ^
_1 = BN_is_zero (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: use location
   73 |     if (BN_is_zero(a)) {
      |         ^
this stmt is child function---BN_is_zero-----

 ================== trace ================== 
trace fucntion name:BN_is_zero 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
In function â€˜BN_rshift1â€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
In function â€˜DH_get_nidâ€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
ap_41 = a_37(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:78:8: warning: use location
   78 |     ap = a->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ap_41 + _18;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:15: warning: use location
   91 |         t = ap[--i];
      |               ^
_13 = ap_41 + _12;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:11: warning: use location
   86 |     t = ap[--i];
      |           ^
_5 = ap_41 + _4;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
_6 = *_5;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
_7 = _6 == 1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                        ^
_8 = (int) _7;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
i_46 = i_40 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:7: warning: use location
   86 |     t = ap[--i];
      |       ^
i_59 = PHI <i_46(7), i_46(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_28 = PHI <i_59(9), i_54(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_54 = i_28 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:11: warning: use location
   91 |         t = ap[--i];
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) i_54;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^
_14 = (long unsigned int) i_46;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
_15 = _14 * 8;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
_2 = (long unsigned int) i_40;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
i_40 = a_37(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:77:7: warning: use location
   77 |     i = a->top;
      |       ^
_1 = BN_is_zero (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: use location
   73 |     if (BN_is_zero(a)) {
      |         ^
this stmt is child function---BN_is_zero-----

 ================== trace ================== 
trace fucntion name:BN_is_zero 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:BN_rshift1========= [0m
[40;42m =======pre add _ fucntion:BN_dup========= [0m
[40;33m =======POP node_fun stack:BN_dup========= [0m
[40;42m =======pre add _ fucntion:BN_get_word========= [0m
[40;33m =======POP node_fun stack:BN_get_word========= [0m
[40;42m =======pre_check_funciton:DH_get_nid========= [0m
[40;42m =======start_check_funciton:DH_get_nid========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5844111750
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = dh_26(D)->g;
    version:1
    ptr-info 0x7f5843c41498>
# VUSE <.MEM_38(D)>
_1 = dh_26(D)->g;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
bb index := 2
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
bb index := 2
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38(D)>
_2 = BN_get_word (_1);
bb index := 2
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================
_2 = BN_get_word (_1);
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:9: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |         ^
this stmt is child function---BN_get_word-----

 ================== trace ================== 
trace fucntion name:BN_get_word 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 2)
bb index := 2
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 2)
bb index := 2
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 2)
bb index := 2
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
if (_2 != 2)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
Cond in fucntion DH_get_nid basic block 2
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== possible direct basic block ================= 
from DH_get_nid basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111750
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = dh_26(D)->g;
    version:1
    ptr-info 0x7f5843c41498>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f58441117e0
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = dh_26(D)->p;
    version:3
    ptr-info 0x7f5843c414b0>
# VUSE <.MEM_39>
_3 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
bb index := 3
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:10: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |          ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 3
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
Cond in fucntion DH_get_nid basic block 3
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f58441117e0
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = dh_26(D)->p;
    version:3
    ptr-info 0x7f5843c414b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111870
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = dh_26(D)->p;
    version:5
    ptr-info 0x7f5843c414c8>
# VUSE <.MEM_40>
_5 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = BN_cmp (_5, &_bignum_ffdhe3072_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:15: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
Cond in fucntion DH_get_nid basic block 4
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111870
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = dh_26(D)->p;
    version:5
    ptr-info 0x7f5843c414c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111900
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _7 = dh_26(D)->p;
    version:7
    ptr-info 0x7f5843c414e0>
# VUSE <.MEM_41>
_7 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_8 = BN_cmp (_7, &_bignum_ffdhe4096_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:15: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
if (_8 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
Cond in fucntion DH_get_nid basic block 5
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111900
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _7 = dh_26(D)->p;
    version:7
    ptr-info 0x7f5843c414e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111990
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = dh_26(D)->p;
    version:9
    ptr-info 0x7f5843c414f8>
# VUSE <.MEM_42>
_9 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_10 = BN_cmp (_9, &_bignum_ffdhe6144_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:15: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
Cond in fucntion DH_get_nid basic block 6
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111990
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _9 = dh_26(D)->p;
    version:9
    ptr-info 0x7f5843c414f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111a20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = dh_26(D)->p;
    version:11
    ptr-info 0x7f5843c41510>
# VUSE <.MEM_43>
_11 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
bb index := 7
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:15: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |               ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 7
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
if (_12 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
Cond in fucntion DH_get_nid basic block 7
 ================== possible direct basic block ================= 
from DH_get_nid basic block 8
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111a20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = dh_26(D)->p;
    version:11
    ptr-info 0x7f5843c41510>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111af8
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _14 = dh_26(D)->p;
    version:14
    ptr-info 0x7f5843c41540>
# VUSE <.MEM_35>
_14 = dh_26(D)->p;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
bb index := 9
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_35>
_15 = BN_dup (_14);
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
_15 = BN_dup (_14);
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:21: warning: use location
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                     ^
this stmt is child function---BN_dup-----

 ================== trace ================== 
trace fucntion name:BN_dup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
if (_15 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:12: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |            ^
if (_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:12: warning: use location
Cond in fucntion DH_get_nid basic block 9
 ================== possible direct basic block ================= 
from DH_get_nid basic block 12
 ================== possible direct basic block ================= 
from DH_get_nid basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (long int) _15;
bb index := 9
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (long int) _15;
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (long int) _15;
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
_16 = (long int) _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:21: warning: use location
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
q_34 = (struct BIGNUM *) _16;
bb index := 9
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
q_34 = (struct BIGNUM *) _16;
bb index := 9
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
q_34 = (struct BIGNUM *) _16;
bb index := 9
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 18

======================================================================
q_34 = (struct BIGNUM *) _16;
./benchmarks/openssl/leak_6/openssl_leak_6.c:121:17: warning: use location
  121 |         BIGNUM *q = BN_dup(dh->p);      /* allocation site */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
BN_free (q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: use location
  125 |             BN_free(q);
      |             ^
this stmt is child function---BN_free-----

 ================== trace ================== 
trace fucntion name:BN_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_19 = BN_cmp (_18, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:48: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                                ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                           ^
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111af8
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _14 = dh_26(D)->p;
    version:14
    ptr-info 0x7f5843c41540>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111d80
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5843c45120 q>
    def_stmt q_34 = (struct BIGNUM *) _16;
    version:34
    ptr-info 0x7f5843c41588>
q_34 = (struct BIGNUM *) _16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
BN_free (q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: use location
  125 |             BN_free(q);
      |             ^
this stmt is child function---BN_free-----

 ================== trace ================== 
trace fucntion name:BN_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_19 = BN_cmp (_18, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:48: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                                ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_19 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                            ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
Cond in fucntion DH_get_nid basic block 11
 ================== possible direct basic block ================= 
from DH_get_nid basic block 12
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                           ^
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111d80
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f5843c45120 q>
    def_stmt q_34 = (struct BIGNUM *) _16;
    version:34
    ptr-info 0x7f5843c41588>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5844111c18
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = dh_26(D)->q;
    version:18
    ptr-info 0x7f5843c41558>
# VUSE <.MEM_46>
_18 = dh_26(D)->q;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
_19 = BN_cmp (_18, q_34);
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_19 = BN_cmp (_18, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:48: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                                ^
this stmt is child function---BN_cmp-----

 ================== trace ================== 
trace fucntion name:BN_cmp 
[40;44m =======trace_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_cmp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_19 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                                            ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:44: warning: use location
Cond in fucntion DH_get_nid basic block 11
 ================== possible direct basic block ================= 
from DH_get_nid basic block 12
 ================== possible direct basic block ================= 
from DH_get_nid basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_36>
BN_free (q_34);
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
BN_free (q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:125:13: warning: use location
  125 |             BN_free(q);
      |             ^
this stmt is child function---BN_free-----

 ================== trace ================== 
trace fucntion name:BN_free 

 ================== trace ================== 
trace fucntion free:0 
_17 = BN_rshift1 (q_34, q_34);
./benchmarks/openssl/leak_6/openssl_leak_6.c:124:27: warning: use location
  124 |         if (q == NULL || !BN_rshift1(q, q) || !BN_cmp(dh->q, q)) {
      |                           ^
this stmt is child function---BN_rshift1-----

 ================== trace ================== 
trace fucntion name:BN_rshift1 
[40;44m =======trace_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:BN_rshift1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;46m =======add node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;46m =======add node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;46m =======add node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;46m =======add node_fun stack:BN_is_zero========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5844111c18
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = dh_26(D)->q;
    version:18
    ptr-info 0x7f5843c41558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:DH_get_nid========= [0m
[40;44m =======node_fun:BN_rshift1========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path BN_rshift1  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;33m =======POP node_fun stack:bn_check_top========= [0m
[40;42m =======pre add _ fucntion:bn_wexpand========= [0m
[40;33m =======POP node_fun stack:bn_wexpand========= [0m
[40;42m =======pre add _ fucntion:BN_zero========= [0m
[40;33m =======POP node_fun stack:BN_zero========= [0m
[40;42m =======pre add _ fucntion:BN_is_zero========= [0m
[40;33m =======POP node_fun stack:BN_is_zero========= [0m
[40;42m =======pre_check_funciton:BN_rshift1========= [0m
[40;42m =======start_check_funciton:BN_rshift1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c380 r>
    def_stmt GIMPLE_NOP
    version:35
    ptr-info 0x7f5843c41618>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
In function â€˜BN_rshift1â€™:
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
=======================Path Constaint===========================

=succs:= 12
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
	relate logic:= 0
=succs:= 8
if (_13 != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:120:8: warning: use location
  120 |     if (dh->q != NULL) {
      |        ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
	relate logic:= 0
=succs:= 6
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
	relate logic:= 0
=succs:= 5
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
	relate logic:= 0
=succs:= 4
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
	relate logic:= 0
=succs:= 3
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
	relate logic:= 0
=succs:= 2
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba20
    type <pointer_type 0x7f5843c3a2a0
        type <record_type 0x7f5843c3a1f8 BIGNUM BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c3a2a0>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c380 r>
    def_stmt GIMPLE_NOP
    version:35
    ptr-info 0x7f5843c41618>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
# .MEM_76 = VDEF <.MEM_65>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
=======================Path Constaint===========================

=succs:= 12
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
	relate logic:= 0
=succs:= 8
if (_13 != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:120:8: warning: use location
  120 |     if (dh->q != NULL) {
      |        ^
	relate logic:= 1
=succs:= 7
if (_12 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:116:13: warning: use location
  116 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe8192_p))
      |             ^
	relate logic:= 0
=succs:= 6
if (_10 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:114:13: warning: use location
  114 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe6144_p))
      |             ^
	relate logic:= 0
=succs:= 5
if (_8 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:112:13: warning: use location
  112 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe4096_p))
      |             ^
	relate logic:= 0
=succs:= 4
if (_6 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:110:13: warning: use location
  110 |     else if (!BN_cmp(dh->p, &_bignum_ffdhe3072_p))
      |             ^
	relate logic:= 0
=succs:= 3
if (_4 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:108:8: warning: use location
  108 |     if (!BN_cmp(dh->p, &_bignum_ffdhe2048_p))
      |        ^
	relate logic:= 0
=succs:= 2
if (_2 != 2)
./benchmarks/openssl/leak_6/openssl_leak_6.c:106:8: warning: use location
  106 |     if (BN_get_word(dh->g) != 2)
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :bn_check_top
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
# .MEM_68 = VDEF <.MEM_67(D)>
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
ap_41 = a_37(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:78:8: warning: use location
   78 |     ap = a->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ap_41 + _18;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:15: warning: use location
   91 |         t = ap[--i];
      |               ^
_13 = ap_41 + _12;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:11: warning: use location
   86 |     t = ap[--i];
      |           ^
_5 = ap_41 + _4;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
_6 = *_5;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
_7 = _6 == 1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                        ^
_8 = (int) _7;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
i_46 = i_40 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:7: warning: use location
   86 |     t = ap[--i];
      |       ^
i_59 = PHI <i_46(7), i_46(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_28 = PHI <i_59(9), i_54(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_54 = i_28 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:11: warning: use location
   91 |         t = ap[--i];
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) i_54;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^
_14 = (long unsigned int) i_46;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
_15 = _14 * 8;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
_2 = (long unsigned int) i_40;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
i_40 = a_37(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:77:7: warning: use location
   77 |     i = a->top;
      |       ^
_1 = BN_is_zero (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: use location
   73 |     if (BN_is_zero(a)) {
      |         ^
this stmt is child function---BN_is_zero-----

 ================== trace ================== 
trace fucntion name:BN_is_zero 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_69 = VDEF <.MEM_68>
bn_check_top (a_37(D));
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_71>
_10 = a_37(D)->neg;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
_10 = a_37(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:19: warning: use location
   83 |         r->neg = a->neg;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
r_35(D)->neg = _10;
bb index := 6
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
r_35(D)->neg = _10;
./benchmarks/openssl/leak_6/openssl_leak_6.c:83:16: warning: use location
   83 |         r->neg = a->neg;
      |                ^
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:98:5: warning: use location
   98 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
r_35(D)->neg = 0;
./benchmarks/openssl/leak_6/openssl_leak_6.c:97:16: warning: use location
   97 |         r->neg = 0; /* don't allow negative zero */
      |                ^
_26 = r_35(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:11: warning: use location
   96 |     if (!r->top)
      |           ^
if (_26 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
   96 |     if (!r->top)
      |        ^
if (_26 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:96:8: warning: use location
Cond in fucntion BN_rshift1 basic block 12
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 13
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location
   95 |     r->top = j;
      |            ^
r_35(D)->top = j_42;
./benchmarks/openssl/leak_6/openssl_leak_6.c:95:12: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_9 = bn_wexpand (r_35(D), j_42);
bb index := 5
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 18

======================================================================
_9 = bn_wexpand (r_35(D), j_42);
./benchmarks/openssl/leak_6/openssl_leak_6.c:81:13: warning: use location
   81 |         if (bn_wexpand(r, j) == NULL)
      |             ^
this stmt is child function---bn_wexpand-----

 ================== trace ================== 
trace fucntion name:bn_wexpand 

 ================== trace ================== 
trace fucntion free:0 
rp_45 = r_35(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:85:8: warning: use location
   85 |     rp = r->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = rp_45 + _23;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:15: warning: use location
_16 = rp_45 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
   89 |         rp[i] = t;
      |               ^
*_16 = t_49;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:15: warning: use location
if (t_49 != 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
   88 |     if (t >>= 1)
      |        ^
if (t_49 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:88:8: warning: use location
Cond in fucntion BN_rshift1 basic block 7
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 8
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (r_35(D) != a_37(D))
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
   80 |     if (a != r) {
      |        ^
if (r_35(D) != a_37(D))

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:80:8: warning: use location
Cond in fucntion BN_rshift1 basic block 4
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 5
 ================== possible direct basic block ================= 
from BN_rshift1 basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
BN_zero (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:74:9: warning: use location
   74 |         BN_zero(r);
      |         ^
this stmt is child function---BN_zero-----

 ================== trace ================== 
trace fucntion name:BN_zero 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (r_35(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:70:5: warning: use location
   70 |     bn_check_top(r);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
ap_41 = a_37(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:78:8: warning: use location
   78 |     ap = a->d;
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ap_41 + _18;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:15: warning: use location
   91 |         t = ap[--i];
      |               ^
_13 = ap_41 + _12;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:11: warning: use location
   86 |     t = ap[--i];
      |           ^
_5 = ap_41 + _4;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
_6 = *_5;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
_7 = _6 == 1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                        ^
_8 = (int) _7;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:24: warning: use location
i_46 = i_40 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:86:7: warning: use location
   86 |     t = ap[--i];
      |       ^
i_59 = PHI <i_46(7), i_46(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_28 = PHI <i_59(9), i_54(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_54 = i_28 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:91:11: warning: use location
   91 |         t = ap[--i];
      |           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) i_54;
./benchmarks/openssl/leak_6/openssl_leak_6.c:92:11: warning: use location
   92 |         rp[i] = ((t >> 1) & BN_MASK2) | c;
      |           ^
_14 = (long unsigned int) i_46;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
   89 |         rp[i] = t;
      |           ^
_15 = _14 * 8;
./benchmarks/openssl/leak_6/openssl_leak_6.c:89:11: warning: use location
_2 = (long unsigned int) i_40;
./benchmarks/openssl/leak_6/openssl_leak_6.c:79:16: warning: use location
   79 |     j = i - (ap[i - 1] == 1);
      |                ^
i_40 = a_37(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:77:7: warning: use location
   77 |     i = a->top;
      |       ^
_1 = BN_is_zero (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:73:9: warning: use location
   73 |     if (BN_is_zero(a)) {
      |         ^
this stmt is child function---BN_is_zero-----

 ================== trace ================== 
trace fucntion name:BN_is_zero 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
   71 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 
bn_check_top (a_37(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:71:5: warning: use location
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c4ba68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c400 a>
    def_stmt GIMPLE_NOP
    version:37
    ptr-info 0x7f5843c41630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:BN_rshift1========= [0m
[40;44m =======node_fun:BN_cmp========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path BN_cmp  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bn_check_top========= [0m
[40;33m =======POP node_fun stack:bn_check_top========= [0m
[40;42m =======pre_check_funciton:BN_cmp========= [0m
[40;42m =======start_check_funciton:BN_cmp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f5843c50a68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c480 a>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f5843c416d8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_37>
return _21;
In function â€˜BN_cmpâ€™:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_13 = a_26(D)->d;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = a_26(D)->d;
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:15: warning: use location
   55 |         t1 = a->d[i];
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _13 + _15;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = _13 + _15;
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:18: warning: use location
   55 |         t1 = a->d[i];
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
t1_32 = *_16;
bb index := 14
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t1_32 = *_16;
./benchmarks/openssl/leak_6/openssl_leak_6.c:55:12: warning: use location
   55 |         t1 = a->d[i];
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (t1_32 < t2_33)
bb index := 15
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t1_32 < t2_33)
./benchmarks/openssl/leak_6/openssl_leak_6.c:59:12: warning: use location
   59 |         if (t1 < t2)
      |            ^
if (t1_32 < t2_33)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:59:12: warning: use location
Cond in fucntion BN_cmp basic block 15
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_12 = a_26(D)->top;
bb index := 13
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 18

======================================================================
_12 = a_26(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:15: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_31 = _12 + -1;
bb index := 13
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 18

======================================================================
i_31 = _12 + -1;
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:12: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
i_21 = PHI <i_31(13), i_34(16)>
bb index := 17
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_21 = PHI <i_31(13), i_34(16)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_21 >= 0)
bb index := 17
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (i_21 >= 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:28: warning: use location
   54 |     for (i = a->top - 1; i >= 0; i--) {
      |                            ^
if (i_21 >= 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:54:28: warning: use location
Cond in fucntion BN_cmp basic block 17
 ================== possible direct basic block ================= 
from BN_cmp basic block 14
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_10 = a_26(D)->top;
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
_10 = a_26(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:10: warning: use location
   52 |     if (a->top < b->top)
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 < _11)
bb index := 12
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 18

======================================================================
if (_10 < _11)
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:8: warning: use location
   52 |     if (a->top < b->top)
      |        ^
if (_10 < _11)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:52:8: warning: use location
Cond in fucntion BN_cmp basic block 12
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_8 = a_26(D)->top;
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
_8 = a_26(D)->top;
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:10: warning: use location
   50 |     if (a->top > b->top)
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 > _9)
bb index := 11
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 18

======================================================================
if (_8 > _9)
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:8: warning: use location
   50 |     if (a->top > b->top)
      |        ^
if (_8 > _9)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:50:8: warning: use location
Cond in fucntion BN_cmp basic block 11
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_7 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:10: warning: use location
   42 |     if (a->neg == 0) {
      |          ^
if (_7 == 0)
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:8: warning: use location
   42 |     if (a->neg == 0) {
      |        ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:42:8: warning: use location
Cond in fucntion BN_cmp basic block 9
 ================== possible direct basic block ================= 
from BN_cmp basic block 11
 ================== possible direct basic block ================= 
from BN_cmp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_6 = a_26(D)->neg;
bb index := 7
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================
_6 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:37:14: warning: use location
   37 |         if (a->neg)
      |              ^
_4 = a_26(D)->neg;
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:10: warning: use location
   36 |     if (a->neg != b->neg) {
      |          ^
if (_4 != _5)
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:8: warning: use location
   36 |     if (a->neg != b->neg) {
      |        ^
if (_4 != _5)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:36:8: warning: use location
Cond in fucntion BN_cmp basic block 6
 ================== possible direct basic block ================= 
from BN_cmp basic block 7
 ================== possible direct basic block ================= 
from BN_cmp basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
# .MEM_37 = VDEF <.MEM_36(D)>
bn_check_top (a_26(D));
bn_check_top (a_26(D));
./benchmarks/openssl/leak_6/openssl_leak_6.c:33:5: warning: use location
   33 |     bn_check_top(a);
      |     ^
this stmt is child function---bn_check_top-----

 ================== trace ================== 
trace fucntion name:bn_check_top 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_37>
return _21;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_66>
return _29;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (a_26(D) != 0B)
bb index := 3
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_35>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================
if (a_26(D) != 0B)
./benchmarks/openssl/leak_6/openssl_leak_6.c:25:12: warning: use location
   25 |         if (a != NULL)
      |            ^
if (a_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_6/openssl_leak_6.c:25:12: warning: use location
Cond in fucntion BN_cmp basic block 3
 ================== possible direct basic block ================= 
from BN_cmp basic block 18
 ================== possible direct basic block ================= 
from BN_cmp basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = a_26(D) == 0B;
./benchmarks/openssl/leak_6/openssl_leak_6.c:24:12: warning: use location
   24 |     if ((a == NULL) || (b == NULL)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f5843c50a68
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c480 a>
    def_stmt GIMPLE_NOP
    version:26
    ptr-info 0x7f5843c416d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f5843c50ab0
    type <pointer_type 0x7f5843c32888
        type <record_type 0x7f5843c32690 BIGNUM readonly BLK
            size <integer_cst 0x7f5844127078 constant 192>
            unit-size <integer_cst 0x7f5844127048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f5843c325e8 fields <field_decl 0x7f5843c35390 d> context <translation_unit_decl 0x7f5844114168 ./benchmarks/openssl/leak_6/openssl_leak_6.c>
            pointer_to_this <pointer_type 0x7f5843c32888>>
        public unsigned DI
        size <integer_cst 0x7f5844109bb8 constant 64>
        unit-size <integer_cst 0x7f5844109bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f5843c3c500 b>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7f5843c416f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:BN_cmp========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
DH_get_nid (&dh);
dh ={v} {CLOBBER};
return 0;

=======Mapping node_fun:DH_get_nid=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = dh_26(D)->g;
_2 = BN_get_word (_1);
if (_2 != 2)
  goto <bb 13>; [67.00%]
else
  goto <bb 3>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_3 = dh_26(D)->p;
_4 = BN_cmp (_3, &_bignum_ffdhe2048_p);
if (_4 == 0)
  goto <bb 8>; [67.00%]
else
  goto <bb 4>; [33.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 116930483]:
_5 = dh_26(D)->p;
_6 = BN_cmp (_5, &_bignum_ffdhe3072_p);
if (_6 == 0)
  goto <bb 8>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 38587059]:
_7 = dh_26(D)->p;
_8 = BN_cmp (_7, &_bignum_ffdhe4096_p);
if (_8 == 0)
  goto <bb 8>; [67.00%]
else
  goto <bb 6>; [33.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 12733729]:
_9 = dh_26(D)->p;
_10 = BN_cmp (_9, &_bignum_ffdhe6144_p);
if (_10 == 0)
  goto <bb 8>; [67.00%]
else
  goto <bb 7>; [33.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 4202131]:
_11 = dh_26(D)->p;
_12 = BN_cmp (_11, &_bignum_ffdhe8192_p);
if (_12 == 0)
  goto <bb 8>; [66.00%]
else
  goto <bb 13>; [34.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 352906076]:
# nid_20 = PHI <1126(3), 1127(4), 1128(5), 1129(6), 1130(7)>
_13 = dh_26(D)->q;
if (_13 != 0B)
  goto <bb 9>; [53.47%]
else
  goto <bb 13>; [46.53%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 188698879]:
_14 = dh_26(D)->p;
_15 = BN_dup (_14);
_16 = (long int) _15;
q_34 = (struct BIGNUM *) _16;
if (_15 == 0)
  goto <bb 12>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 124541259]:
_17 = BN_rshift1 (q_34, q_34);
if (_17 == 0)
  goto <bb 12>; [51.12%]
else
  goto <bb 11>; [48.88%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 60875767]:
_18 = dh_26(D)->q;
_19 = BN_cmp (_18, q_34);
if (_19 == 0)
  goto <bb 12>; [34.00%]
else
  goto <bb 13>; [66.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 148520873]:
BN_free (q_34);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# _21 = PHI <0(2), 0(7), nid_20(8), nid_20(11), 0(12)>
return _21;

=======Mapping node_fun:BN_rshift1=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 180986787]:
bn_check_top (r_35(D));
bn_check_top (a_37(D));
_1 = BN_is_zero (a_37(D));
if (_1 != 0)
  goto <bb 3>; [20.24%]
else
  goto <bb 4>; [79.76%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 36631726]:
BN_zero (r_35(D));
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 144355062]:
i_40 = a_37(D)->top;
ap_41 = a_37(D)->d;
_2 = (long unsigned int) i_40;
_3 = _2 * 8;
_4 = _3 + 18446744073709551608;
_5 = ap_41 + _4;
_6 = *_5;
_7 = _6 == 1;
_8 = (int) _7;
j_42 = i_40 - _8;
if (r_35(D) != a_37(D))
  goto <bb 5>; [53.47%]
else
  goto <bb 7>; [46.53%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 77186651]:
_9 = bn_wexpand (r_35(D), j_42);
if (_9 == 0)
  goto <bb 15>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 50943190]:
_10 = a_37(D)->neg;
r_35(D)->neg = _10;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
rp_45 = r_35(D)->d;
i_46 = i_40 + -1;
_11 = (long unsigned int) i_46;
_12 = _11 * 8;
_13 = ap_41 + _12;
t_47 = *_13;
c_48 = t_47 << 63;
t_49 = t_47 >> 1;
if (t_49 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 59055800]:
_14 = (long unsigned int) i_46;
_15 = _14 * 8;
_16 = rp_45 + _15;
*_16 = t_49;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 118111600]:
# c_61 = PHI <c_48(7), c_48(8)>
# i_59 = PHI <i_46(7), i_46(8)>
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 955630226]:
i_54 = i_28 + -1;
_17 = (long unsigned int) i_54;
_18 = _17 * 8;
_19 = ap_41 + _18;
t_55 = *_19;
_20 = t_55 >> 1;
_21 = _20 & 4294967295;
_22 = (long unsigned int) i_54;
_23 = _22 * 8;
_24 = rp_45 + _23;
_25 = _21 | c_27;
*_24 = _25;
c_57 = t_55 << 63;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# c_27 = PHI <c_61(9), c_57(10)>
# i_28 = PHI <i_59(9), i_54(10)>
if (i_28 > 0)
  goto <bb 10>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118111600]:
r_35(D)->top = j_42;
_26 = r_35(D)->top;
if (_26 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 59055800]:
r_35(D)->neg = 0;

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 118111600]:
bn_check_top (r_35(D));

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 180986788]:
# _29 = PHI <1(3), 0(5), 1(14)>
return _29;

=======Mapping node_fun:BN_cmp=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = a_26(D) == 0B;
_2 = b_27(D) == 0B;
_3 = _1 | _2;
if (_3 != 0)
  goto <bb 3>; [67.00%]
else
  goto <bb 6>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407025]:
if (a_26(D) != 0B)
  goto <bb 18>; [54.59%]
else
  goto <bb 4>; [45.41%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 326682728]:
if (b_27(D) != 0B)
  goto <bb 18>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 98004817]:
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 354334800]:
bn_check_top (a_26(D));
bn_check_top (b_27(D));
_4 = a_26(D)->neg;
_5 = b_27(D)->neg;
if (_4 != _5)
  goto <bb 7>; [66.00%]
else
  goto <bb 9>; [34.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 233860967]:
_6 = a_26(D)->neg;
if (_6 != 0)
  goto <bb 18>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 116930483]:
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 120473833]:
_7 = a_26(D)->neg;
if (_7 == 0)
  goto <bb 11>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 60236917]:

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 120473833]:
# gt_22 = PHI <1(9), -1(10)>
# lt_23 = PHI <-1(9), 1(10)>
_8 = a_26(D)->top;
_9 = b_27(D)->top;
if (_8 > _9)
  goto <bb 18>; [34.00%]
else
  goto <bb 12>; [66.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 79512730]:
_10 = a_26(D)->top;
_11 = b_27(D)->top;
if (_10 < _11)
  goto <bb 18>; [34.00%]
else
  goto <bb 13>; [66.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 52478401]:
_12 = a_26(D)->top;
i_31 = _12 + -1;
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 477723935]:
_13 = a_26(D)->d;
_14 = (long unsigned int) i_21;
_15 = _14 * 8;
_16 = _13 + _15;
t1_32 = *_16;
_17 = b_27(D)->d;
_18 = (long unsigned int) i_21;
_19 = _18 * 8;
_20 = _17 + _19;
t2_33 = *_20;
if (t1_32 > t2_33)
  goto <bb 18>; [3.66%]
else
  goto <bb 15>; [96.34%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 460239239]:
if (t1_32 < t2_33)
  goto <bb 18>; [3.66%]
else
  goto <bb 16>; [96.34%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 443394482]:
i_34 = i_21 + -1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 495872883]:
# i_21 = PHI <i_31(13), i_34(16)>
if (i_21 >= 0)
  goto <bb 14>; [96.34%]
else
  goto <bb 18>; [3.66%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 1073741824]:
# _24 = PHI <-1(3), 1(4), 0(5), -1(7), 1(8), gt_22(11), lt_23(12), gt_22(14), lt_23(15), 0(17)>
return _24;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 0 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    find Entry point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 0.004152 mb[0m
[40;34m    collect time: : 0.000330 s [0m
[40;34m    algorithm time: 0.062529 s [0m
[40;34m    gimple stmt count : : 126 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt                           |      |      |      |      |     -0.3%|     -0.2%|
ch                               |      |      |      |      |     +0.3%|     -0.2%|
cplxlower                        |      |      |      |      |     +0.6%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -2.5%|     -1.1%|
copyprop                         |      |      |      |      |     -2.5%|     -1.1%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -40.1%|    -48.9%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |          |     -2.6%|
lim                              |      |      |      |      |          |     -2.7%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +67.0%|   +101.1%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.6%|     -0.1%|
strlen                           |      |      |      |      |     -0.6%|     -0.1%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +77.1%|    +59.1%|
into_cfglayout                   |      |      |      |      |     -2.3%|     -1.2%|
jump                             |      |      |      |      |     -2.3%|     -1.3%|
subreg1              ------------|      |      |      |      |          |          |
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -0.5%|     -0.8%|
ce1                              |      |      |      |      |     -0.5%|     -0.1%|
reginfo                          |      |      |      |      |          |     +0.7%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     -0.2%|     -0.2%|
ce2                              |      |      |      |      |     -0.2%|     -0.2%|
outof_cfglayout                  |      |      |      |      |     +1.1%|     +0.5%|
split1                           |      |      |      |      |     +1.1%|     +0.5%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -3.9%|     -4.4%|
postreload                       |      |      |      |      |     -4.3%|     -4.6%|
split2                           |      |      |      |      |     +0.3%|     +0.2%|
cmpelim                          |      |      |      |      |     +0.5%|     +0.3%|
pro_and_epilogue                 |      |      |      |      |     +5.8%|    +13.6%|
dse2                             |      |      |      |      |     +5.5%|    +12.0%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.3%|     -0.2%|
rtl_dce                          |      |      |      |      |     -0.3%|     -0.2%|
bbro                             |      |      |      |      |     +0.6%|     +0.2%|
split4                           |      |      |      |      |     +0.6%|     +0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccGUP4RU.ltrans0.ltrans.o: in function `BN_cmp':
<artificial>:(.text+0x38): undefined reference to `bn_check_top'
/usr/bin/ld: <artificial>:(.text+0x45): undefined reference to `bn_check_top'
/usr/bin/ld: /tmp/ccGUP4RU.ltrans0.ltrans.o: in function `BN_rshift1':
<artificial>:(.text+0xe1): undefined reference to `bn_check_top'
/usr/bin/ld: <artificial>:(.text+0xee): undefined reference to `bn_check_top'
/usr/bin/ld: <artificial>:(.text+0xfb): undefined reference to `BN_is_zero'
/usr/bin/ld: <artificial>:(.text+0x135): undefined reference to `bn_wexpand'
/usr/bin/ld: <artificial>:(.text+0x1a5): undefined reference to `bn_check_top'
/usr/bin/ld: <artificial>:(.text+0x1c0): undefined reference to `BN_zero'
/usr/bin/ld: /tmp/ccGUP4RU.ltrans0.ltrans.o: in function `DH_get_nid':
<artificial>:(.text+0x1dc): undefined reference to `BN_get_word'
/usr/bin/ld: <artificial>:(.text+0x1f6): undefined reference to `_bignum_ffdhe2048_p'
/usr/bin/ld: <artificial>:(.text+0x219): undefined reference to `BN_dup'
/usr/bin/ld: <artificial>:(.text+0x23c): undefined reference to `BN_free'
/usr/bin/ld: <artificial>:(.text+0x24c): undefined reference to `_bignum_ffdhe3072_p'
/usr/bin/ld: <artificial>:(.text+0x263): undefined reference to `_bignum_ffdhe4096_p'
/usr/bin/ld: <artificial>:(.text+0x27a): undefined reference to `_bignum_ffdhe6144_p'
/usr/bin/ld: <artificial>:(.text+0x295): undefined reference to `_bignum_ffdhe8192_p'
collect2: error: ld returned 1 exit status
