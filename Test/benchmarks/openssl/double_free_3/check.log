./benchmarks/openssl/double_free_3/openssl_df_3.c: In function â€˜PACKET_memdupâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: implicit declaration of function â€˜PACKET_remainingâ€™ [-Wimplicit-function-declaration]
   53 |     length = PACKET_remaining(pkt);
      |              ^~~~~~~~~~~~~~~~
In file included from ./benchmarks/openssl/double_free_3/openssl_df_3.c:9:
./benchmarks/openssl/double_free_3/../openssl.h:9:33: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
    9 | #define OPENSSL_memdup(p, size) strdup(p)
      |                                 ^~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: note: in expansion of macro â€˜OPENSSL_memdupâ€™
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^~~~~~~~~~~~~~
./benchmarks/openssl/double_free_3/../openssl.h:9:33: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
    9 | #define OPENSSL_memdup(p, size) strdup(p)
      |                                 ^~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: note: in expansion of macro â€˜OPENSSL_memdupâ€™
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^~~~~~~~~~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c: In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:10: warning: implicit declaration of function â€˜PACKET_as_length_prefixed_2â€™ [-Wimplicit-function-declaration]
   71 |     if (!PACKET_as_length_prefixed_2(pkt, &cookie)
      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c: In function â€˜tls_construct_ctos_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: implicit declaration of function â€˜WPACKET_put_bytes_u16â€™ [-Wimplicit-function-declaration]
   89 |     if (!WPACKET_put_bytes_u16(pkt, 0)
      |          ^~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c:91:17: warning: implicit declaration of function â€˜WPACKET_start_sub_packet_u16â€™ [-Wimplicit-function-declaration]
   91 |             || !WPACKET_start_sub_packet_u16(pkt)
      |                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c:92:17: warning: implicit declaration of function â€˜WPACKET_sub_memcpy_u16â€™ [-Wimplicit-function-declaration]
   92 |             || !WPACKET_sub_memcpy_u16(pkt, s->ext.tls13_cookie,
      |                 ^~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:17: warning: implicit declaration of function â€˜WPACKET_closeâ€™ [-Wimplicit-function-declaration]
   94 |             || !WPACKET_close(pkt)) {
      |                 ^~~~~~~~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.0%|          |
nothrow                          |      |      |      |      |     -1.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:tls_construct_ctos_cookie=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 4
succs:= 5
succs:= 6
succs:= 6
succs:= 7
succs:= 2
=======node_fun:tls_parse_stoc_cookie=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
=======node_fun:PACKET_memdup=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
=======node_fun:SSL_free=========

--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_5 = VDEF <.MEM_4(D)>
s_3 = malloc (16);
# .MEM_9 = VDEF <.MEM_8>
tls_parse_stoc_cookie (s_3, &pkt, 0, 0B, 0, 0B);
# .MEM_10 = VDEF <.MEM_9>
tls_construct_ctos_cookie (s_3, 0B, 0, 0B, 0, 0B);
# .MEM_11 = VDEF <.MEM_10>
SSL_free (s_3);
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
# .MEM_22 = VDEF <.MEM_21>
_3 = WPACKET_start_sub_packet_u16 (pkt_16(D));
# .MEM_23 = VDEF <.MEM_22>
_6 = WPACKET_sub_memcpy_u16 (pkt_16(D), _5, _4);
# .MEM_24 = VDEF <.MEM_23>
_7 = WPACKET_close (pkt_16(D));
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = PACKET_as_length_prefixed_2 (pkt_9(D), &cookie);
# .MEM_16 = VDEF <.MEM_15>
_4 = PACKET_memdup (&cookie, _3, _2);
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:SSL_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path SSL_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:SSL_free========= [0m
[40;42m =======start_check_funciton:SSL_free========= [0m
[40;33m =======POP node_fun stack:SSL_free========= [0m
[40;42m =======pre add _ fucntion:tls_construct_ctos_cookie========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path tls_construct_ctos_cookie  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:WPACKET_close========= [0m
[40;33m =======POP node_fun stack:WPACKET_close========= [0m
[40;42m =======pre add _ fucntion:WPACKET_sub_memcpy_u16========= [0m
[40;33m =======POP node_fun stack:WPACKET_sub_memcpy_u16========= [0m
[40;42m =======pre add _ fucntion:WPACKET_start_sub_packet_u16========= [0m
[40;33m =======POP node_fun stack:WPACKET_start_sub_packet_u16========= [0m
[40;42m =======pre add _ fucntion:WPACKET_put_bytes_u16========= [0m
[40;33m =======POP node_fun stack:WPACKET_put_bytes_u16========= [0m
[40;42m =======pre_check_funciton:tls_construct_ctos_cookie========= [0m
[40;42m =======start_check_funciton:tls_construct_ctos_cookie========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_7 = WPACKET_close (pkt_16(D));
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:17: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |                 ^
this stmt is child function---WPACKET_close-----

 ================== trace ================== 
trace fucntion name:WPACKET_close 

 ================== trace ================== 
trace fucntion free:0 
if (_7 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |             ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
Cond in fucntion tls_construct_ctos_cookie basic block 6
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 7
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_6 = WPACKET_sub_memcpy_u16 (pkt_16(D), _5, _4);
./benchmarks/openssl/double_free_3/openssl_df_3.c:92:17: warning: use location
   92 |             || !WPACKET_sub_memcpy_u16(pkt, s->ext.tls13_cookie,
      |                 ^
this stmt is child function---WPACKET_sub_memcpy_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_sub_memcpy_u16 

 ================== trace ================== 
trace fucntion free:0 
_3 = WPACKET_start_sub_packet_u16 (pkt_16(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:91:17: warning: use location
   91 |             || !WPACKET_start_sub_packet_u16(pkt)
      |                 ^
this stmt is child function---WPACKET_start_sub_packet_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_start_sub_packet_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜tls_construct_ctos_cookieâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
   89 |     if (!WPACKET_put_bytes_u16(pkt, 0)
      |          ^
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜tls_construct_ctos_cookieâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_7 = WPACKET_close (pkt_16(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:17: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |                 ^
this stmt is child function---WPACKET_close-----

 ================== trace ================== 
trace fucntion name:WPACKET_close 

 ================== trace ================== 
trace fucntion free:0 
if (_7 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |             ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
Cond in fucntion tls_construct_ctos_cookie basic block 6
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 7
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_6 = WPACKET_sub_memcpy_u16 (pkt_16(D), _5, _4);
./benchmarks/openssl/double_free_3/openssl_df_3.c:92:17: warning: use location
   92 |             || !WPACKET_sub_memcpy_u16(pkt, s->ext.tls13_cookie,
      |                 ^
this stmt is child function---WPACKET_sub_memcpy_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_sub_memcpy_u16 

 ================== trace ================== 
trace fucntion free:0 
_3 = WPACKET_start_sub_packet_u16 (pkt_16(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:91:17: warning: use location
   91 |             || !WPACKET_start_sub_packet_u16(pkt)
      |                 ^
this stmt is child function---WPACKET_start_sub_packet_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_start_sub_packet_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜tls_construct_ctos_cookieâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
   89 |     if (!WPACKET_put_bytes_u16(pkt, 0)
      |          ^
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜tls_construct_ctos_cookieâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:tls_construct_ctos_cookie========= [0m
[40;42m =======pre add _ fucntion:tls_parse_stoc_cookie========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path tls_parse_stoc_cookie  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:PACKET_memdup========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path PACKET_memdup  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:PACKET_remaining========= [0m
[40;33m =======POP node_fun stack:PACKET_remaining========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:PACKET_memdup========= [0m
[40;42m =======start_check_funciton:PACKET_memdup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a61903a8
    type <pointer_type 0x7f49a617c5e8
        type <integer_type 0x7f49a617c3f0 char public QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a616c738 -128> max <integer_cst 0x7f49a616c720 127>
            pointer_to_this <pointer_type 0x7f49a617c5e8>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>>
   
    def_stmt _4 = strdup (_3);
    version:4
    ptr-info 0x7f49a6184450>
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = strdup (_3);
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
*data_9(D) = _4;
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a61903a8
    type <pointer_type 0x7f49a617c5e8
        type <integer_type 0x7f49a617c3f0 char public QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a616c738 -128> max <integer_cst 0x7f49a616c720 127>
            pointer_to_this <pointer_type 0x7f49a617c5e8>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>>
   
    def_stmt _4 = strdup (_3);
    version:4
    ptr-info 0x7f49a6184450>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6190510
    type <pointer_type 0x7f49a617cdc8
        type <record_type 0x7f49a617cd20 PACKET readonly TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cdc8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a680 pkt>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f49a61844b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = pkt_14(D)->curr;
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = strdup (_3);
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
*data_9(D) = _4;
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = PACKET_remaining (pkt_14(D));
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |              ^
this stmt is child function---PACKET_remaining-----

 ================== trace ================== 
trace fucntion name:PACKET_remaining 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
length_16 = (size_t) _2;
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:12: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
*len_12(D) = length_16;
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:62:10: warning: use location
   62 |     *len = length;
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (length_16 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
   55 |     if (length == 0)
      |        ^
if (length_16 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
Cond in fucntion PACKET_memdup basic block 2
 ================== possible direct basic block ================= 
from PACKET_memdup basic block 5
 ================== possible direct basic block ================= 
from PACKET_memdup basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6190510
    type <pointer_type 0x7f49a617cdc8
        type <record_type 0x7f49a617cd20 PACKET readonly TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cdc8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a680 pkt>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f49a61844b0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
length_16 = (size_t) _2;
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:12: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
./benchmarks/openssl/double_free_3/openssl_df_3.c:62:10: warning: use location
   62 |     *len = length;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
if (length_16 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
   55 |     if (length == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6190360
    type <pointer_type 0x7f49a617cbd0
        type <integer_type 0x7f49a617cb28 unsigned char readonly unsigned QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a664ccd8 0> max <integer_cst 0x7f49a664cc78 255> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cbd0>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = pkt_14(D)->curr;
    version:3
    ptr-info 0x7f49a6184438>
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:PACKET_memdup========= [0m
[40;42m =======pre add _ fucntion:PACKET_as_length_prefixed_2========= [0m
[40;33m =======POP node_fun stack:PACKET_as_length_prefixed_2========= [0m
[40;42m =======pre_check_funciton:tls_parse_stoc_cookie========= [0m
[40;42m =======start_check_funciton:tls_parse_stoc_cookie========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a6190090
    type <pointer_type 0x7f49a617e150
        type <record_type 0x7f49a617e0a8 PACKET TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617e150>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a400 pkt>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f49a61843f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = PACKET_as_length_prefixed_2 (pkt_9(D), &cookie);
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:10: warning: use location
   71 |     if (!PACKET_as_length_prefixed_2(pkt, &cookie)
      |          ^
this stmt is child function---PACKET_as_length_prefixed_2-----

 ================== trace ================== 
trace fucntion name:PACKET_as_length_prefixed_2 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:8: warning: use location
   71 |     if (!PACKET_as_length_prefixed_2(pkt, &cookie)
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:8: warning: use location
Cond in fucntion tls_parse_stoc_cookie basic block 2
 ================== possible direct basic block ================= 
from tls_parse_stoc_cookie basic block 4
 ================== possible direct basic block ================= 
from tls_parse_stoc_cookie basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6190090
    type <pointer_type 0x7f49a617e150
        type <record_type 0x7f49a617e0a8 PACKET TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617e150>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a400 pkt>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f49a61843f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f49a6848da0
    type <pointer_type 0x7f49a617e150
        type <record_type 0x7f49a617e0a8 PACKET TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617e150>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f49a618d240 cookie type <record_type 0x7f49a617e0a8 PACKET>
        addressable TI ./benchmarks/openssl/double_free_3/openssl_df_3.c:69:12 size <integer_cst 0x7f49a664cc00 128> unit-size <integer_cst 0x7f49a664cc18 16>
        align:64 warn_if_not_align:0 context <function_decl 0x7f49a6176c00 tls_parse_stoc_cookie>>
    ./benchmarks/openssl/double_free_3/openssl_df_3.c:72:17 start: ./benchmarks/openssl/double_free_3/openssl_df_3.c:72:17 finish: ./benchmarks/openssl/double_free_3/openssl_df_3.c:72:17>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:tls_parse_stoc_cookie========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a66545e8
    type <pointer_type 0x7f49a617c9d8
        type <record_type 0x7f49a617c930 SSL TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c888 fields <field_decl 0x7f49a6178260 ext> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c9d8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f49a6ef4b40 s>
    def_stmt s_3 = malloc (16);
    version:3
    ptr-info 0x7f49a6184348>
# .MEM_5 = VDEF <.MEM_4(D)>
s_3 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
SSL_free (s_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:118:5: warning: use location
  118 |     SSL_free(s);
      |     ^
this stmt is child function---SSL_free-----

 ================== trace ================== 
trace fucntion name:SSL_free 
[40;44m =======trace_function_path SSL_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:32:5: warning: use location
   32 |     OPENSSL_free(s->ext.tls13_cookie);  /* double-free */
      |     ^
# .MEM_7 = VDEF <.MEM_6>
free (s_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (s_3(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:33:5: warning: use location
   33 |     OPENSSL_free(s);
      |     ^
[40;36m ======= node_fun:SSL_free========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
tls_construct_ctos_cookie (s_3, 0B, 0, 0B, 0, 0B);
./benchmarks/openssl/double_free_3/openssl_df_3.c:116:5: warning: use location
  116 |     tls_construct_ctos_cookie(s, NULL, 0, NULL, 0, NULL);
      |     ^
this stmt is child function---tls_construct_ctos_cookie-----

 ================== trace ================== 
trace fucntion name:tls_construct_ctos_cookie 
[40;44m =======trace_function_path tls_construct_ctos_cookie  function_call count: 5 level :0========  [0m
# .MEM_25 = VDEF <.MEM_18>
free (_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_18>
free (_8);
./benchmarks/openssl/double_free_3/openssl_df_3.c:100:5: warning: use location
  100 |     OPENSSL_free(s->ext.tls13_cookie);  /* freed */
      |     ^
[40;36m ======= node_fun:tls_construct_ctos_cookie========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:WPACKET_close========= [0m
[40;46m =======add node_fun stack:WPACKET_close========= [0m
[40;42m =======pre add _ fucntion:WPACKET_sub_memcpy_u16========= [0m
[40;46m =======add node_fun stack:WPACKET_sub_memcpy_u16========= [0m
[40;42m =======pre add _ fucntion:WPACKET_start_sub_packet_u16========= [0m
[40;46m =======add node_fun stack:WPACKET_start_sub_packet_u16========= [0m
[40;42m =======pre add _ fucntion:WPACKET_put_bytes_u16========= [0m
[40;46m =======add node_fun stack:WPACKET_put_bytes_u16========= [0m

 ================== trace ================== 
trace fucntion free:3 
tls_parse_stoc_cookie (s_3, &pkt, 0, 0B, 0, 0B);
./benchmarks/openssl/double_free_3/openssl_df_3.c:115:5: warning: use location
  115 |     tls_parse_stoc_cookie(s, &pkt, 0, NULL, 0, NULL);
      |     ^
this stmt is child function---tls_parse_stoc_cookie-----

 ================== trace ================== 
trace fucntion name:tls_parse_stoc_cookie 
[40;44m =======trace_function_path tls_parse_stoc_cookie  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:tls_parse_stoc_cookie========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:PACKET_memdup========= [0m
PACKET_memdup this fucntion return value is heap-object 
tls_parse_stoc_cookie this fucntion return value is heap-object PACKET_memdup
[40;46m =======add node_fun stack:PACKET_memdup========= [0m
[40;44m =======trace_function_path PACKET_memdup  function_call count: 3 level :1========  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^
[40;36m ======= node_fun:PACKET_memdup========= [0m
[40;36m ======= find relate stmt with s ========= [0m
[40;36m ======= relate stmt argument:s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:PACKET_remaining========= [0m
[40;46m =======add node_fun stack:PACKET_remaining========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:PACKET_as_length_prefixed_2========= [0m
[40;46m =======add node_fun stack:PACKET_as_length_prefixed_2========= [0m

 ================== trace ================== 
trace fucntion free:4 
s_3->ext.tls13_cookie_len = 0;
./benchmarks/openssl/double_free_3/openssl_df_3.c:111:29: warning: use location
  111 |     s->ext.tls13_cookie_len = 0;
      |                             ^
s_3->ext.tls13_cookie_len = 0;
./benchmarks/openssl/double_free_3/openssl_df_3.c:111:29: warning: use location
s_3->ext.tls13_cookie = 0B;
./benchmarks/openssl/double_free_3/openssl_df_3.c:110:25: warning: use location
  110 |     s->ext.tls13_cookie = NULL;
      |                         ^
s_3 = malloc (16);
./benchmarks/openssl/double_free_3/openssl_df_3.c:109:14: warning: use location
  109 |     SSL *s = malloc(sizeof(SSL));
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a66545e8
    type <pointer_type 0x7f49a617c9d8
        type <record_type 0x7f49a617c930 SSL TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c888 fields <field_decl 0x7f49a6178260 ext> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c9d8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f49a6ef4b40 s>
    def_stmt s_3 = malloc (16);
    version:3
    ptr-info 0x7f49a6184348>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_10 = VDEF <.MEM_9>
tls_construct_ctos_cookie (s_3, 0B, 0, 0B, 0, 0B);
./benchmarks/openssl/double_free_3/openssl_df_3.c:116:5: warning: Use after free error!: free location 
  116 |     tls_construct_ctos_cookie(s, NULL, 0, NULL, 0, NULL);
      |     ^
# .MEM_11 = VDEF <.MEM_10>
SSL_free (s_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:118:5: warning: use location
  118 |     SSL_free(s);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8>
tls_parse_stoc_cookie (s_3, &pkt, 0, 0B, 0, 0B);
./benchmarks/openssl/double_free_3/openssl_df_3.c:115:5: warning: Use after free error!: free location 
  115 |     tls_parse_stoc_cookie(s, &pkt, 0, NULL, 0, NULL);
      |     ^
# .MEM_11 = VDEF <.MEM_10>
SSL_free (s_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:118:5: warning: use location
  118 |     SSL_free(s);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8>
tls_parse_stoc_cookie (s_3, &pkt, 0, 0B, 0, 0B);
./benchmarks/openssl/double_free_3/openssl_df_3.c:115:5: warning: Use after free error!: free location 
  115 |     tls_parse_stoc_cookie(s, &pkt, 0, NULL, 0, NULL);
      |     ^
# .MEM_10 = VDEF <.MEM_9>
tls_construct_ctos_cookie (s_3, 0B, 0, 0B, 0, 0B);
./benchmarks/openssl/double_free_3/openssl_df_3.c:116:5: warning: use location
  116 |     tls_construct_ctos_cookie(s, NULL, 0, NULL, 0, NULL);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f49a61841c8 type <integer_type 0x7f49a66617e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:tls_construct_ctos_cookie========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path tls_construct_ctos_cookie  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:WPACKET_close========= [0m
[40;33m =======POP node_fun stack:WPACKET_close========= [0m
[40;42m =======pre add _ fucntion:WPACKET_sub_memcpy_u16========= [0m
[40;33m =======POP node_fun stack:WPACKET_sub_memcpy_u16========= [0m
[40;42m =======pre add _ fucntion:WPACKET_start_sub_packet_u16========= [0m
[40;33m =======POP node_fun stack:WPACKET_start_sub_packet_u16========= [0m
[40;42m =======pre add _ fucntion:WPACKET_put_bytes_u16========= [0m
[40;33m =======POP node_fun stack:WPACKET_put_bytes_u16========= [0m
[40;42m =======pre_check_funciton:tls_construct_ctos_cookie========= [0m
[40;42m =======start_check_funciton:tls_construct_ctos_cookie========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_7 = WPACKET_close (pkt_16(D));
In function â€˜tls_construct_ctos_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:17: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |                 ^
this stmt is child function---WPACKET_close-----

 ================== trace ================== 
trace fucntion name:WPACKET_close 

 ================== trace ================== 
trace fucntion free:0 
if (_7 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |             ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
Cond in fucntion tls_construct_ctos_cookie basic block 6
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 7
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_6 = WPACKET_sub_memcpy_u16 (pkt_16(D), _5, _4);
./benchmarks/openssl/double_free_3/openssl_df_3.c:92:17: warning: use location
   92 |             || !WPACKET_sub_memcpy_u16(pkt, s->ext.tls13_cookie,
      |                 ^
this stmt is child function---WPACKET_sub_memcpy_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_sub_memcpy_u16 

 ================== trace ================== 
trace fucntion free:0 
_3 = WPACKET_start_sub_packet_u16 (pkt_16(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:91:17: warning: use location
   91 |             || !WPACKET_start_sub_packet_u16(pkt)
      |                 ^
this stmt is child function---WPACKET_start_sub_packet_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_start_sub_packet_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
   89 |     if (!WPACKET_put_bytes_u16(pkt, 0)
      |          ^
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_7 = WPACKET_close (pkt_16(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:17: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |                 ^
this stmt is child function---WPACKET_close-----

 ================== trace ================== 
trace fucntion name:WPACKET_close 

 ================== trace ================== 
trace fucntion free:0 
if (_7 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
   94 |             || !WPACKET_close(pkt)) {
      |             ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:94:13: warning: use location
Cond in fucntion tls_construct_ctos_cookie basic block 6
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 7
 ================== possible direct basic block ================= 
from tls_construct_ctos_cookie basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_6 = WPACKET_sub_memcpy_u16 (pkt_16(D), _5, _4);
./benchmarks/openssl/double_free_3/openssl_df_3.c:92:17: warning: use location
   92 |             || !WPACKET_sub_memcpy_u16(pkt, s->ext.tls13_cookie,
      |                 ^
this stmt is child function---WPACKET_sub_memcpy_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_sub_memcpy_u16 

 ================== trace ================== 
trace fucntion free:0 
_3 = WPACKET_start_sub_packet_u16 (pkt_16(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:91:17: warning: use location
   91 |             || !WPACKET_start_sub_packet_u16(pkt)
      |                 ^
this stmt is child function---WPACKET_start_sub_packet_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_start_sub_packet_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
   89 |     if (!WPACKET_put_bytes_u16(pkt, 0)
      |          ^
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
./benchmarks/openssl/double_free_3/openssl_df_3.c:89:10: warning: use location
this stmt is child function---WPACKET_put_bytes_u16-----

 ================== trace ================== 
trace fucntion name:WPACKET_put_bytes_u16 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6654bd0
    type <pointer_type 0x7f49a617c0a8
        type <void_type 0x7f49a617c000 WPACKET VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617c0a8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a080 pkt>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f49a61843a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:tls_construct_ctos_cookie========= [0m
[40;44m =======node_fun:tls_parse_stoc_cookie========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path tls_parse_stoc_cookie  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:PACKET_memdup========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path PACKET_memdup  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:PACKET_remaining========= [0m
[40;33m =======POP node_fun stack:PACKET_remaining========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:PACKET_memdup========= [0m
[40;42m =======start_check_funciton:PACKET_memdup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a61903a8
    type <pointer_type 0x7f49a617c5e8
        type <integer_type 0x7f49a617c3f0 char public QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a616c738 -128> max <integer_cst 0x7f49a616c720 127>
            pointer_to_this <pointer_type 0x7f49a617c5e8>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>>
   
    def_stmt _4 = strdup (_3);
    version:4
    ptr-info 0x7f49a6184450>
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = strdup (_3);
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
*data_9(D) = _4;
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a61903a8
    type <pointer_type 0x7f49a617c5e8
        type <integer_type 0x7f49a617c3f0 char public QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a616c738 -128> max <integer_cst 0x7f49a616c720 127>
            pointer_to_this <pointer_type 0x7f49a617c5e8>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>>
   
    def_stmt _4 = strdup (_3);
    version:4
    ptr-info 0x7f49a6184450>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6190510
    type <pointer_type 0x7f49a617cdc8
        type <record_type 0x7f49a617cd20 PACKET readonly TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cdc8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a680 pkt>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f49a61844b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = pkt_14(D)->curr;
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = strdup (_3);
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
*data_9(D) = _4;
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = PACKET_remaining (pkt_14(D));
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |              ^
this stmt is child function---PACKET_remaining-----

 ================== trace ================== 
trace fucntion name:PACKET_remaining 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
length_16 = (size_t) _2;
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:12: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
*len_12(D) = length_16;
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:62:10: warning: use location
   62 |     *len = length;
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (length_16 == 0)
In function â€˜tls_parse_stoc_cookieâ€™:
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
   55 |     if (length == 0)
      |        ^
if (length_16 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
Cond in fucntion PACKET_memdup basic block 2
 ================== possible direct basic block ================= 
from PACKET_memdup basic block 5
 ================== possible direct basic block ================= 
from PACKET_memdup basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6190510
    type <pointer_type 0x7f49a617cdc8
        type <record_type 0x7f49a617cd20 PACKET readonly TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cdc8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a680 pkt>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f49a61844b0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
length_16 = (size_t) _2;
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:12: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
./benchmarks/openssl/double_free_3/openssl_df_3.c:62:10: warning: use location
   62 |     *len = length;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
if (length_16 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
   55 |     if (length == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6190360
    type <pointer_type 0x7f49a617cbd0
        type <integer_type 0x7f49a617cb28 unsigned char readonly unsigned QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a664ccd8 0> max <integer_cst 0x7f49a664cc78 255> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cbd0>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = pkt_14(D)->curr;
    version:3
    ptr-info 0x7f49a6184438>
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:PACKET_memdup========= [0m
[40;42m =======pre add _ fucntion:PACKET_as_length_prefixed_2========= [0m
[40;33m =======POP node_fun stack:PACKET_as_length_prefixed_2========= [0m
[40;42m =======pre_check_funciton:tls_parse_stoc_cookie========= [0m
[40;42m =======start_check_funciton:tls_parse_stoc_cookie========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a6190090
    type <pointer_type 0x7f49a617e150
        type <record_type 0x7f49a617e0a8 PACKET TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617e150>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a400 pkt>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f49a61843f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = PACKET_as_length_prefixed_2 (pkt_9(D), &cookie);
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:10: warning: use location
   71 |     if (!PACKET_as_length_prefixed_2(pkt, &cookie)
      |          ^
this stmt is child function---PACKET_as_length_prefixed_2-----

 ================== trace ================== 
trace fucntion name:PACKET_as_length_prefixed_2 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:8: warning: use location
   71 |     if (!PACKET_as_length_prefixed_2(pkt, &cookie)
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:71:8: warning: use location
Cond in fucntion tls_parse_stoc_cookie basic block 2
 ================== possible direct basic block ================= 
from tls_parse_stoc_cookie basic block 4
 ================== possible direct basic block ================= 
from tls_parse_stoc_cookie basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6190090
    type <pointer_type 0x7f49a617e150
        type <record_type 0x7f49a617e0a8 PACKET TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617e150>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a400 pkt>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f49a61843f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f49a6848da0
    type <pointer_type 0x7f49a617e150
        type <record_type 0x7f49a617e0a8 PACKET TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617e150>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f49a618d240 cookie type <record_type 0x7f49a617e0a8 PACKET>
        addressable TI ./benchmarks/openssl/double_free_3/openssl_df_3.c:69:12 size <integer_cst 0x7f49a664cc00 128> unit-size <integer_cst 0x7f49a664cc18 16>
        align:64 warn_if_not_align:0 context <function_decl 0x7f49a6176c00 tls_parse_stoc_cookie>>
    ./benchmarks/openssl/double_free_3/openssl_df_3.c:72:17 start: ./benchmarks/openssl/double_free_3/openssl_df_3.c:72:17 finish: ./benchmarks/openssl/double_free_3/openssl_df_3.c:72:17>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:tls_parse_stoc_cookie========= [0m
[40;44m =======node_fun:PACKET_memdup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path PACKET_memdup  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:PACKET_remaining========= [0m
[40;33m =======POP node_fun stack:PACKET_remaining========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:PACKET_memdup========= [0m
[40;42m =======start_check_funciton:PACKET_memdup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f49a61903a8
    type <pointer_type 0x7f49a617c5e8
        type <integer_type 0x7f49a617c3f0 char public QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a616c738 -128> max <integer_cst 0x7f49a616c720 127>
            pointer_to_this <pointer_type 0x7f49a617c5e8>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>>
   
    def_stmt _4 = strdup (_3);
    version:4
    ptr-info 0x7f49a6184450>
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
In function â€˜PACKET_memdupâ€™:
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a61903a8
    type <pointer_type 0x7f49a617c5e8
        type <integer_type 0x7f49a617c3f0 char public QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a616c738 -128> max <integer_cst 0x7f49a616c720 127>
            pointer_to_this <pointer_type 0x7f49a617c5e8>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>>
   
    def_stmt _4 = strdup (_3);
    version:4
    ptr-info 0x7f49a6184450>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6190510
    type <pointer_type 0x7f49a617cdc8
        type <record_type 0x7f49a617cd20 PACKET readonly TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cdc8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a680 pkt>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f49a61844b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_3 = pkt_14(D)->curr;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
bb index := 3
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = PACKET_remaining (pkt_14(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |              ^
this stmt is child function---PACKET_remaining-----

 ================== trace ================== 
trace fucntion name:PACKET_remaining 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
length_16 = (size_t) _2;
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
length_16 = (size_t) _2;
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:12: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
bb index := 4
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
*len_12(D) = length_16;
./benchmarks/openssl/double_free_3/openssl_df_3.c:62:10: warning: use location
   62 |     *len = length;
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
beacuse in succ := 9 have return or exit
# VUSE <.MEM_19>
return _10;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (length_16 == 0)
bb index := 2
# VUSE <.MEM_4>
return;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (length_16 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
   55 |     if (length == 0)
      |        ^
if (length_16 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
Cond in fucntion PACKET_memdup basic block 2
 ================== possible direct basic block ================= 
from PACKET_memdup basic block 5
 ================== possible direct basic block ================= 
from PACKET_memdup basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f49a6190510
    type <pointer_type 0x7f49a617cdc8
        type <record_type 0x7f49a617cd20 PACKET readonly TI
            size <integer_cst 0x7f49a664cc00 constant 128>
            unit-size <integer_cst 0x7f49a664cc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a617c7e0 fields <field_decl 0x7f49a6178390 curr> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cdc8>>
        public unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f49a618a680 pkt>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f49a61844b0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: use location
   49 |     OPENSSL_free(*data);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_23 = VDEF <.MEM_22>
_4 = strdup (_3);
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:13: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_24 = VDEF <.MEM_23>
*data_9(D) = _4;
./benchmarks/openssl/double_free_3/openssl_df_3.c:58:11: warning: use location
   58 |     *data = OPENSSL_memdup(pkt->curr, length);  /* allocation site */
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_22 = VDEF <.MEM_21>
_2 = PACKET_remaining (pkt_14(D));
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:14: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
length_16 = (size_t) _2;
./benchmarks/openssl/double_free_3/openssl_df_3.c:53:12: warning: use location
   53 |     length = PACKET_remaining(pkt);
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
# .MEM_25 = VDEF <.MEM_24>
*len_12(D) = length_16;
./benchmarks/openssl/double_free_3/openssl_df_3.c:62:10: warning: use location
   62 |     *len = length;
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18(D)>
free (_1);
./benchmarks/openssl/double_free_3/openssl_df_3.c:49:5: warning: Use after free error!: free location 
   49 |     OPENSSL_free(*data);
      |     ^
if (length_16 == 0)
./benchmarks/openssl/double_free_3/openssl_df_3.c:55:8: warning: use location
   55 |     if (length == 0)
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f49a6190360
    type <pointer_type 0x7f49a617cbd0
        type <integer_type 0x7f49a617cb28 unsigned char readonly unsigned QI
            size <integer_cst 0x7f49a664cca8 constant 8>
            unit-size <integer_cst 0x7f49a664ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f49a66613f0 precision:8 min <integer_cst 0x7f49a664ccd8 0> max <integer_cst 0x7f49a664cc78 255> context <translation_unit_decl 0x7f49a6657168 ./benchmarks/openssl/double_free_3/openssl_df_3.c>
            pointer_to_this <pointer_type 0x7f49a617cbd0>>
        unsigned DI
        size <integer_cst 0x7f49a664cbb8 constant 64>
        unit-size <integer_cst 0x7f49a664cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = pkt_14(D)->curr;
    version:3
    ptr-info 0x7f49a6184438>
# VUSE <.MEM_22>
_3 = pkt_14(D)->curr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:PACKET_memdup========= [0m
[40;44m =======node_fun:SSL_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path SSL_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:SSL_free========= [0m
[40;42m =======start_check_funciton:SSL_free========= [0m
[40;33m =======POP node_fun stack:SSL_free========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
s_3 = malloc (16);
s_3->ext.tls13_cookie = 0B;
s_3->ext.tls13_cookie_len = 0;
pkt.curr = "PACKET";
tls_parse_stoc_cookie (s_3, &pkt, 0, 0B, 0, 0B);
tls_construct_ctos_cookie (s_3, 0B, 0, 0B, 0, 0B);
SSL_free (s_3);
pkt ={v} {CLOBBER};
return 0;

=======Mapping node_fun:tls_construct_ctos_cookie=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = s_15(D)->ext.tls13_cookie_len;
if (_1 == 0)
  goto <bb 9>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524844999]:
_2 = WPACKET_put_bytes_u16 (pkt_16(D), 0);
if (_2 == 0)
  goto <bb 7>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 256544234]:
_3 = WPACKET_start_sub_packet_u16 (pkt_16(D));
if (_3 == 0)
  goto <bb 7>; [51.12%]
else
  goto <bb 5>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 125398821]:
_4 = s_15(D)->ext.tls13_cookie_len;
_5 = s_15(D)->ext.tls13_cookie;
_6 = WPACKET_sub_memcpy_u16 (pkt_16(D), _5, _4);
if (_6 == 0)
  goto <bb 7>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 61294943]:
_7 = WPACKET_close (pkt_16(D));
if (_7 == 0)
  goto <bb 7>; [34.00%]
else
  goto <bb 8>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 484390337]:
// predicted unlikely by goto predictor.

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 524845000]:
# ret_9 = PHI <1(6), 0(7)>
end:
_8 = s_15(D)->ext.tls13_cookie;
free (_8);
s_15(D)->ext.tls13_cookie_len = 0;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 1073741824]:
# _10 = PHI <1(2), ret_9(8)>
return _10;

=======Mapping node_fun:tls_parse_stoc_cookie=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = PACKET_as_length_prefixed_2 (pkt_9(D), &cookie);
if (_1 == 0)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
_2 = &s_11(D)->ext.tls13_cookie_len;
_3 = &s_11(D)->ext.tls13_cookie;
_4 = PACKET_memdup (&cookie, _3, _2);
if (_4 == 0)
  goto <bb 4>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 727344127]:

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _5 = PHI <1(3), 0(4)>
cookie ={v} {CLOBBER};
return _5;

=======Mapping node_fun:PACKET_memdup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = *data_9(D);
free (_1);
*data_9(D) = 0B;
*len_12(D) = 0;
_2 = PACKET_remaining (pkt_14(D));
length_16 = (size_t) _2;
if (length_16 == 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524844999]:
_3 = pkt_14(D)->curr;
_4 = strdup (_3);
*data_9(D) = _4;
_5 = *data_9(D);
if (_5 == 0B)
  goto <bb 5>; [18.09%]
else
  goto <bb 4>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 429900539]:
*len_12(D) = length_16;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _6 = PHI <1(2), 0(3), 1(4)>
return _6;

=======Mapping node_fun:SSL_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (s_3(D) == 0B)
  goto <bb 4>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_1 = s_3(D)->ext.tls13_cookie;
free (_1);
free (s_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    find Entry point : 5 [0m
[40;34m    used_stmt array stack totalsize of : 0.000768 mb[0m
[40;34m    collect time: : 0.000164 s [0m
[40;34m    algorithm time: 0.033752 s [0m
[40;34m    gimple stmt count : : 54 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt                           |      |      |      |      |     -1.0%|     -0.2%|
ch                               |      |      |      |      |     -1.0%|     -0.2%|
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.5%|     -0.1%|
copyprop                         |      |      |      |      |     -0.5%|     -0.1%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +73.8%|    +43.6%|
into_cfglayout                   |      |      |      |      |     -1.0%|     -0.7%|
jump                             |      |      |      |      |     -3.5%|     -4.4%|
subreg1                          |      |      |      |      |     -2.7%|     -4.0%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.7%|     -1.6%|
ce1                              |      |      |      |      |     -1.7%|     -1.1%|
reginfo                          |      |      |      |      |          |     +0.5%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.9%|     +5.7%|
ce2                              |      |      |      |      |     +3.7%|     +5.4%|
outof_cfglayout                  |      |      |      |      |     +0.3%|     +0.2%|
split1                           |      |      |      |      |     +0.3%|     +0.2%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -8.8%|     -9.6%|
postreload                       |      |      |      |      |     -9.6%|    -10.7%|
split2                           |      |      |      |      |     +1.2%|     +0.3%|
cmpelim                          |      |      |      |      |     +1.2%|     +0.3%|
pro_and_epilogue                 |      |      |      |      |    +13.9%|    +19.5%|
dse2                             |      |      |      |      |    +12.2%|    +16.4%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     +1.2%|     +0.5%|
split4                           |      |      |      |      |     +1.2%|     +0.5%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccjoAV3G.ltrans0.ltrans.o: in function `PACKET_memdup':
<artificial>:(.text+0x4f): undefined reference to `PACKET_remaining'
/usr/bin/ld: /tmp/ccjoAV3G.ltrans0.ltrans.o: in function `tls_parse_stoc_cookie':
<artificial>:(.text+0xa2): undefined reference to `PACKET_as_length_prefixed_2'
/usr/bin/ld: /tmp/ccjoAV3G.ltrans0.ltrans.o: in function `tls_construct_ctos_cookie':
<artificial>:(.text+0xf4): undefined reference to `WPACKET_put_bytes_u16'
/usr/bin/ld: <artificial>:(.text+0x11a): undefined reference to `WPACKET_start_sub_packet_u16'
/usr/bin/ld: <artificial>:(.text+0x135): undefined reference to `WPACKET_sub_memcpy_u16'
/usr/bin/ld: <artificial>:(.text+0x148): undefined reference to `WPACKET_close'
collect2: error: ld returned 1 exit status
