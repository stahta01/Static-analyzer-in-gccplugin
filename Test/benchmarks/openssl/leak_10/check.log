./benchmarks/openssl/leak_10/openssl_leak_10.c: In function â€˜EVP_DecodeBlockâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:13: warning: implicit declaration of function â€˜conv_ascii2binâ€™ [-Wimplicit-function-declaration]
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |             ^~~~~~~~~~~~~~
./benchmarks/openssl/leak_10/openssl_leak_10.c: In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
  135 |     size_t inlen = strlen(in);
      |                    ^~~~~~
./benchmarks/openssl/leak_10/openssl_leak_10.c:11:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
   10 | #include "../openssl.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™ [-Wbuiltin-declaration-mismatch]
  135 |     size_t inlen = strlen(in);
      |                    ^~~~~~
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/openssl/leak_10/openssl_leak_10.c:147:9: warning: implicit declaration of function â€˜CTerrâ€™ [-Wimplicit-function-declaration]
  147 |         CTerr(CT_F_CT_BASE64_DECODE, ERR_R_MALLOC_FAILURE);
      |         ^~~~~
./benchmarks/openssl/leak_10/openssl_leak_10.c: In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:12: warning: implicit declaration of function â€˜d2i_PUBKEYâ€™ [-Wimplicit-function-declaration]
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |            ^~~~~~~~~~
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:10: warning: assignment to â€˜EVP_PKEY *â€™ {aka â€˜struct evp_pkey_st *â€™} from â€˜intâ€™ makes pointer from integer without a cast [-Wint-conversion]
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |          ^
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: implicit declaration of function â€˜CTLOG_newâ€™ [-Wimplicit-function-declaration]
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^~~~~~~~~
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: assignment to â€˜CTLOG *â€™ {aka â€˜struct ctlog_st *â€™} from â€˜intâ€™ makes pointer from integer without a cast [-Wint-conversion]
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: implicit declaration of function â€˜EVP_PKEY_freeâ€™ [-Wimplicit-function-declaration]
  202 |         EVP_PKEY_free(pkey);
      |         ^~~~~~~~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -3.0%|          |
nothrow                          |      |      |      |      |     -3.1%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -1.9%|          |
ethread                          |      |      |      |      |     -1.9%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.3%|          |
phiopt                           |      |      |      |      |     -0.3%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:CTLOG_new_from_base64=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 8
succs:= 8
=======node_fun:ct_base64_decode=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 5
succs:= 7
=======node_fun:EVP_DecodeBlock=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 10
succs:= 11
succs:= 12
succs:= 13
succs:= 14
succs:= 16
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
CTLOG_new_from_base64 (&ct_log, "pkey_base64", "name");
# .MEM_25 = VDEF <.MEM_24>
pkey_der_len_15 = ct_base64_decode (pkey_base64_13(D), &pkey_der);
# .MEM_34 = VDEF <.MEM_25>
CTerr (118, 7);
# .MEM_33 = VDEF <.MEM_25>
CTerr (118, 110);
# .MEM_27 = VDEF <.MEM_26>
_2 = d2i_PUBKEY (0B, &p, pkey_der_len_15);
 <var_decl 0x7f9e0793bea0 pkey_der
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    addressable unsigned DI ./benchmarks/openssl/leak_10/openssl_leak_10.c:177:20 size <integer_cst 0x7f9e07093bb8 64> unit-size <integer_cst 0x7f9e07093bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f9e06bbdc00 CTLOG_new_from_base64> chain <var_decl 0x7f9e0793be10 pkey_der_len>>
# .MEM_32 = VDEF <.MEM_28>
CTerr (118, 110);
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
# .MEM_28 = VDEF <.MEM_27(D)>
outbuf_18 = malloc (_4);
# .MEM_32 = VDEF <.MEM_28>
CTerr (124, 65);
# .MEM_29 = VDEF <.MEM_28>
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
# .MEM_31 = VDEF <.MEM_29>
CTerr (124, 108);
# .MEM_85 = VDEF <.MEM_79>
_3 = conv_ascii2bin (_2);
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
# .MEM_90 = VDEF <.MEM_89>
d_69 = conv_ascii2bin (_20);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CTLOG_new_from_base64========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CTLOG_new_from_base64  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:EVP_PKEY_free========= [0m
[40;33m =======POP node_fun stack:EVP_PKEY_free========= [0m
[40;42m =======pre add _ fucntion:CTLOG_new========= [0m
[40;33m =======POP node_fun stack:CTLOG_new========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;33m =======POP node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:d2i_PUBKEY========= [0m
[40;33m =======POP node_fun stack:d2i_PUBKEY========= [0m
[40;42m =======pre add _ fucntion:ct_base64_decode========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ct_base64_decode  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;33m =======POP node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:EVP_DecodeBlock========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path EVP_DecodeBlock  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;33m =======POP node_fun stack:conv_ascii2bin========= [0m
[40;42m =======pre_check_funciton:EVP_DecodeBlock========= [0m
[40;42m =======start_check_funciton:EVP_DecodeBlock========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>
_2 = (int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_79>
_3 = conv_ascii2bin (_2);
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = conv_ascii2bin (_2);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:13: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 224)
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 224)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |                                           ^
if (_3 == 224)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 4
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 5
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>
_8 = (int) _7;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = conv_ascii2bin (_8);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                        ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9 | 19;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 243)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                    ^
if (_10 == 243)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 9
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 6
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>
_14 = (int) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
a_62 = conv_ascii2bin (_14);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:111:13: warning: use location
  111 |         a = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = (long unsigned int) a_62;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = (long unsigned int) a_62;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:16: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = _25 << 18;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _25 << 18;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:34: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = a_62 & 128;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:16: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |            ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 11
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
b_64 = conv_ascii2bin (_16);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:112:13: warning: use location
  112 |         b = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = (long unsigned int) b_64;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = (long unsigned int) b_64;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:16: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = _27 << 12;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = _27 << 12;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:34: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = b_64 & 128;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:30: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                        ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 12
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>
_18 = (int) _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_66 = conv_ascii2bin (_18);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:113:13: warning: use location
  113 |         c = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = (long unsigned int) c_66;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (long unsigned int) c_66;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:16: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _30 << 6;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _30 << 6;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:34: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = c_66 & 128;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:44: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                      ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 13
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7cf0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _20 = (int) _19;
    version:20>
_20 = (int) _19;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:EVP_DecodeBlock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ct_base64_decode========= [0m
[40;42m =======start_check_funciton:ct_base64_decode========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7318
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    var <var_decl 0x7f9e06bd33f0 outbuf>
    def_stmt outbuf_18 = malloc (_4);
    version:18
    ptr-info 0x7f9e06bcb648>
# .MEM_28 = VDEF <.MEM_27(D)>
outbuf_18 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with outbuf ========= [0m
[40;36m ======= relate stmt argument:outbuf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
outbuf_18 = malloc (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:145:14: warning: use location
  145 |     outbuf = OPENSSL_malloc(outlen);                            /* allocation site */
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7318
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    var <var_decl 0x7f9e06bd33f0 outbuf>
    def_stmt outbuf_18 = malloc (_4);
    version:18
    ptr-info 0x7f9e06bcb648>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7240
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0180 in>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f9e06bcb630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7240
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0180 in>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f9e06bcb630>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7048
    type <integer_type 0x7f9e070a87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a8738 precision:64 min <integer_cst 0x7f9e07093e88 0> max <integer_cst 0x7f9e07094500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9e070b47e0>>
   
    def_stmt _4 = (long unsigned int) outlen_16;
    version:4>
_4 = (long unsigned int) outlen_16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
outbuf_18 = malloc (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:145:14: warning: use location
  145 |     outbuf = OPENSSL_malloc(outlen);                            /* allocation site */
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7048
    type <integer_type 0x7f9e070a87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a8738 precision:64 min <integer_cst 0x7f9e07093e88 0> max <integer_cst 0x7f9e07094500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9e070b47e0>>
   
    def_stmt _4 = (long unsigned int) outlen_16;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb300 type <integer_type 0x7f9e070a85e8 int> constant 124>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb300 type <integer_type 0x7f9e070a85e8 int> constant 124>
[40;33m =======POP node_fun stack:ct_base64_decode========= [0m
[40;42m =======pre_check_funciton:CTLOG_new_from_base64========= [0m
[40;42m =======start_check_funciton:CTLOG_new_from_base64========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e0709b990
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0080 pkey_base64>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f9e06bcb5b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
pkey_der_len_15 = ct_base64_decode (pkey_base64_13(D), &pkey_der);
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
pkey_der_len_15 = ct_base64_decode (pkey_base64_13(D), &pkey_der);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:178:24: warning: use location
  178 |     int pkey_der_len = ct_base64_decode(pkey_base64, &pkey_der);
      |                        ^
this stmt is child function---ct_base64_decode-----

 ================== trace ================== 
trace fucntion name:ct_base64_decode 
[40;44m =======trace_function_path ct_base64_decode  function_call count: 5 level :0========  [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
[40;36m ======= node_fun:ct_base64_decode========= [0m
[40;36m ======= find relate stmt with pkey_base64 ========= [0m
[40;36m ======= relate stmt argument:pkey_base64 ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;46m =======add node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:EVP_DecodeBlock========= [0m
[40;46m =======add node_fun stack:EVP_DecodeBlock========= [0m
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with pkey_base64 ========= [0m
[40;36m ======= relate stmt argument:pkey_base64 ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
_2 = d2i_PUBKEY (0B, &p, pkey_der_len_15);
bb index := 6
# VUSE <.MEM_83>
return _46;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_2 = d2i_PUBKEY (0B, &p, pkey_der_len_15);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:12: warning: use location
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |            ^
this stmt is child function---d2i_PUBKEY-----

 ================== trace ================== 
trace fucntion name:d2i_PUBKEY 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 6
# VUSE <.MEM_83>
return _46;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
if (_2 == 0)
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:195:8: warning: use location
  195 |     if (pkey == NULL) {
      |        ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:195:8: warning: use location
Cond in fucntion CTLOG_new_from_base64 basic block 6
 ================== possible direct basic block ================= 
from CTLOG_new_from_base64 basic block 7
 ================== possible direct basic block ================= 
from CTLOG_new_from_base64 basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) _2;
bb index := 6
# VUSE <.MEM_83>
return _46;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_3 = (long int) _2;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:12: warning: use location
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
pkey_19 = (struct EVP_PKEY *) _3;
bb index := 6
# VUSE <.MEM_83>
return _46;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
pkey_19 = (struct EVP_PKEY *) _3;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:10: warning: use location
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================
EVP_PKEY_free (pkey_19);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_5 = CTLOG_new (pkey_19, name_21(D));
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^
this stmt is child function---CTLOG_new-----

 ================== trace ================== 
trace fucntion name:CTLOG_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_6 = (long int) _5;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_7 = (struct CTLOG *) _6;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
*ct_log_16(D) = _7;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e0709b990
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0080 pkey_base64>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f9e06bcb5b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb1f8 type <integer_type 0x7f9e070a85e8 int> constant 118>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb1f8 type <integer_type 0x7f9e070a85e8 int> constant 118>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e07093fc0 type <pointer_type 0x7f9e070af000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
pkey_19 = (struct EVP_PKEY *) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================
EVP_PKEY_free (pkey_19);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_5 = CTLOG_new (pkey_19, name_21(D));
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^
this stmt is child function---CTLOG_new-----

 ================== trace ================== 
trace fucntion name:CTLOG_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_6 = (long int) _5;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_7 = (struct CTLOG *) _6;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
*ct_log_16(D) = _7;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: use location
  194 |     OPENSSL_free(pkey_der);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
pkey_19 = (struct EVP_PKEY *) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
EVP_PKEY_free (pkey_19);
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_5 = CTLOG_new (pkey_19, name_21(D));
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^
this stmt is child function---CTLOG_new-----

 ================== trace ================== 
trace fucntion name:CTLOG_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_6 = (long int) _5;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_7 = (struct CTLOG *) _6;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_36>
return _9;
In function â€˜CTLOG_new_from_base64â€™:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
*ct_log_16(D) = _7;
In function â€˜mainâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: use location
  194 |     OPENSSL_free(pkey_der);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CTLOG_new_from_base64========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f9e0728fa80
    type <pointer_type 0x7f9e06bbc5e8
        type <pointer_type 0x7f9e06bbc540 type <record_type 0x7f9e06bbc498 CTLOG>
            public unsigned DI
            size <integer_cst 0x7f9e07093bb8 constant 64>
            unit-size <integer_cst 0x7f9e07093bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9e06bbc5e8>>
        public unsigned DI size <integer_cst 0x7f9e07093bb8 64> unit-size <integer_cst 0x7f9e07093bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f9e0793bb40 ct_log type <pointer_type 0x7f9e06bbc540>
        addressable unsigned DI ./benchmarks/openssl/leak_10/openssl_leak_10.c:211:9 size <integer_cst 0x7f9e07093bb8 64> unit-size <integer_cst 0x7f9e07093bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f9e06bbdd00 main>>
    ./benchmarks/openssl/leak_10/openssl_leak_10.c:212:2 start: ./benchmarks/openssl/leak_10/openssl_leak_10.c:212:2 finish: ./benchmarks/openssl/leak_10/openssl_leak_10.c:212:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:CTLOG_new_from_base64========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CTLOG_new_from_base64  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:EVP_PKEY_free========= [0m
[40;33m =======POP node_fun stack:EVP_PKEY_free========= [0m
[40;42m =======pre add _ fucntion:CTLOG_new========= [0m
[40;33m =======POP node_fun stack:CTLOG_new========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;33m =======POP node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:d2i_PUBKEY========= [0m
[40;33m =======POP node_fun stack:d2i_PUBKEY========= [0m
[40;42m =======pre add _ fucntion:ct_base64_decode========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ct_base64_decode  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;33m =======POP node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:EVP_DecodeBlock========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path EVP_DecodeBlock  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;33m =======POP node_fun stack:conv_ascii2bin========= [0m
[40;42m =======pre_check_funciton:EVP_DecodeBlock========= [0m
[40;42m =======start_check_funciton:EVP_DecodeBlock========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>
_2 = (int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_79>
_3 = conv_ascii2bin (_2);
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = conv_ascii2bin (_2);
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:13: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 224)
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 224)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |                                           ^
if (_3 == 224)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 4
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 5
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>
_8 = (int) _7;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = conv_ascii2bin (_8);
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                        ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9 | 19;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 243)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                    ^
if (_10 == 243)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 9
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 6
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>
_14 = (int) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
a_62 = conv_ascii2bin (_14);
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:111:13: warning: use location
  111 |         a = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = (long unsigned int) a_62;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = (long unsigned int) a_62;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:16: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = _25 << 18;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _25 << 18;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:34: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = a_62 & 128;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:16: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |            ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 11
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
b_64 = conv_ascii2bin (_16);
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:112:13: warning: use location
  112 |         b = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = (long unsigned int) b_64;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = (long unsigned int) b_64;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:16: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = _27 << 12;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = _27 << 12;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:34: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = b_64 & 128;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:30: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                        ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 12
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>
_18 = (int) _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_66 = conv_ascii2bin (_18);
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:113:13: warning: use location
  113 |         c = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = (long unsigned int) c_66;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (long unsigned int) c_66;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:16: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _30 << 6;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _30 << 6;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:34: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = c_66 & 128;
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:44: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                      ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 13
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7cf0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _20 = (int) _19;
    version:20>
_20 = (int) _19;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:EVP_DecodeBlock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ct_base64_decode========= [0m
[40;42m =======start_check_funciton:ct_base64_decode========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7318
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    var <var_decl 0x7f9e06bd33f0 outbuf>
    def_stmt outbuf_18 = malloc (_4);
    version:18
    ptr-info 0x7f9e06bcb648>
# .MEM_28 = VDEF <.MEM_27(D)>
outbuf_18 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with outbuf ========= [0m
[40;36m ======= relate stmt argument:outbuf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
outbuf_18 = malloc (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:145:14: warning: use location
  145 |     outbuf = OPENSSL_malloc(outlen);                            /* allocation site */
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7318
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    var <var_decl 0x7f9e06bd33f0 outbuf>
    def_stmt outbuf_18 = malloc (_4);
    version:18
    ptr-info 0x7f9e06bcb648>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7240
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0180 in>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f9e06bcb630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7240
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0180 in>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f9e06bcb630>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7048
    type <integer_type 0x7f9e070a87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a8738 precision:64 min <integer_cst 0x7f9e07093e88 0> max <integer_cst 0x7f9e07094500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9e070b47e0>>
   
    def_stmt _4 = (long unsigned int) outlen_16;
    version:4>
_4 = (long unsigned int) outlen_16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
outbuf_18 = malloc (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:145:14: warning: use location
  145 |     outbuf = OPENSSL_malloc(outlen);                            /* allocation site */
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
In function â€˜ct_base64_decodeâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
In function â€˜CTLOG_new_from_base64â€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7048
    type <integer_type 0x7f9e070a87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a8738 precision:64 min <integer_cst 0x7f9e07093e88 0> max <integer_cst 0x7f9e07094500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9e070b47e0>>
   
    def_stmt _4 = (long unsigned int) outlen_16;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb300 type <integer_type 0x7f9e070a85e8 int> constant 124>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb300 type <integer_type 0x7f9e070a85e8 int> constant 124>
[40;33m =======POP node_fun stack:ct_base64_decode========= [0m
[40;42m =======pre_check_funciton:CTLOG_new_from_base64========= [0m
[40;42m =======start_check_funciton:CTLOG_new_from_base64========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e0709b990
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0080 pkey_base64>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f9e06bcb5b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
pkey_der_len_15 = ct_base64_decode (pkey_base64_13(D), &pkey_der);
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
pkey_der_len_15 = ct_base64_decode (pkey_base64_13(D), &pkey_der);
./benchmarks/openssl/leak_10/openssl_leak_10.c:178:24: warning: use location
  178 |     int pkey_der_len = ct_base64_decode(pkey_base64, &pkey_der);
      |                        ^
this stmt is child function---ct_base64_decode-----

 ================== trace ================== 
trace fucntion name:ct_base64_decode 
[40;44m =======trace_function_path ct_base64_decode  function_call count: 5 level :0========  [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
[40;36m ======= node_fun:ct_base64_decode========= [0m
[40;36m ======= find relate stmt with pkey_base64 ========= [0m
[40;36m ======= relate stmt argument:pkey_base64 ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;46m =======add node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:EVP_DecodeBlock========= [0m
[40;46m =======add node_fun stack:EVP_DecodeBlock========= [0m
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with pkey_base64 ========= [0m
[40;36m ======= relate stmt argument:pkey_base64 ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
_2 = d2i_PUBKEY (0B, &p, pkey_der_len_15);
bb index := 6
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_2 = d2i_PUBKEY (0B, &p, pkey_der_len_15);
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:12: warning: use location
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |            ^
this stmt is child function---d2i_PUBKEY-----

 ================== trace ================== 
trace fucntion name:d2i_PUBKEY 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 6
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
if (_2 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:195:8: warning: use location
  195 |     if (pkey == NULL) {
      |        ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:195:8: warning: use location
Cond in fucntion CTLOG_new_from_base64 basic block 6
 ================== possible direct basic block ================= 
from CTLOG_new_from_base64 basic block 7
 ================== possible direct basic block ================= 
from CTLOG_new_from_base64 basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) _2;
bb index := 6
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_3 = (long int) _2;
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:12: warning: use location
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
pkey_19 = (struct EVP_PKEY *) _3;
bb index := 6
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
pkey_19 = (struct EVP_PKEY *) _3;
./benchmarks/openssl/leak_10/openssl_leak_10.c:193:10: warning: use location
  193 |     pkey = d2i_PUBKEY(NULL, &p, pkey_der_len);
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^
this stmt is child function---CTLOG_new-----

 ================== trace ================== 
trace fucntion name:CTLOG_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e0709b990
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0080 pkey_base64>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f9e06bcb5b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb1f8 type <integer_type 0x7f9e070a85e8 int> constant 118>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb1f8 type <integer_type 0x7f9e070a85e8 int> constant 118>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e07093fc0 type <pointer_type 0x7f9e070af000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
pkey_19 = (struct EVP_PKEY *) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^
this stmt is child function---CTLOG_new-----

 ================== trace ================== 
trace fucntion name:CTLOG_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: use location
  194 |     OPENSSL_free(pkey_der);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
pkey_19 = (struct EVP_PKEY *) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
bb index := 9
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 12

======================================================================
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^
this stmt is child function---EVP_PKEY_free-----

 ================== trace ================== 
trace fucntion name:EVP_PKEY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^
this stmt is child function---CTLOG_new-----

 ================== trace ================== 
trace fucntion name:CTLOG_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (long int) _5;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (struct CTLOG *) _6;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
bb index := 8
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_26>
return _10;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e0709ba68
    type <pointer_type 0x7f9e06bc4690
        type <record_type 0x7f9e06bc45e8 EVP_PKEY VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9e0709e168 ./benchmarks/openssl/leak_10/openssl_leak_10.c>
            pointer_to_this <pointer_type 0x7f9e06bc4690>>
        unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9e0793bcf0 pkey>
    def_stmt pkey_19 = (struct EVP_PKEY *) _3;
    version:19
    ptr-info 0x7f9e06bcb5e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: use location
  194 |     OPENSSL_free(pkey_der);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
# .MEM_31 = VDEF <.MEM_30>
EVP_PKEY_free (pkey_19);
./benchmarks/openssl/leak_10/openssl_leak_10.c:202:9: warning: use location
  202 |         EVP_PKEY_free(pkey);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_29 = VDEF <.MEM_28>
_5 = CTLOG_new (pkey_19, name_21(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_6 = (long int) _5;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
_7 = (struct CTLOG *) _6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:15: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27>
free (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:194:5: warning: Use after free error!: free location 
  194 |     OPENSSL_free(pkey_der);
      |     ^
# .MEM_30 = VDEF <.MEM_29>
*ct_log_16(D) = _7;
./benchmarks/openssl/leak_10/openssl_leak_10.c:200:13: warning: use location
  200 |     *ct_log = CTLOG_new(pkey, name);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (pkey_der_len_15 <= 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:187:8: warning: use location
  187 |     if (pkey_der_len <= 0) {
      |        ^
	relate logic:= 0
=succs:= 2
if (ct_log_16(D) == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:182:8: warning: use location
  182 |     if (ct_log == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CTLOG_new_from_base64========= [0m
[40;44m =======node_fun:ct_base64_decode========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ct_base64_decode  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:CTerr========= [0m
[40;33m =======POP node_fun stack:CTerr========= [0m
[40;42m =======pre add _ fucntion:EVP_DecodeBlock========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path EVP_DecodeBlock  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;33m =======POP node_fun stack:conv_ascii2bin========= [0m
[40;42m =======pre_check_funciton:EVP_DecodeBlock========= [0m
[40;42m =======start_check_funciton:EVP_DecodeBlock========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>
_2 = (int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_79>
_3 = conv_ascii2bin (_2);
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = conv_ascii2bin (_2);
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:13: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 224)
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 224)
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |                                           ^
if (_3 == 224)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 4
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 5
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>
_8 = (int) _7;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = conv_ascii2bin (_8);
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                        ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9 | 19;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 243)
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                    ^
if (_10 == 243)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 9
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 6
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>
_14 = (int) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
a_62 = conv_ascii2bin (_14);
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:111:13: warning: use location
  111 |         a = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = (long unsigned int) a_62;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = (long unsigned int) a_62;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:16: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = _25 << 18;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _25 << 18;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:34: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = a_62 & 128;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:16: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |            ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 11
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
b_64 = conv_ascii2bin (_16);
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:112:13: warning: use location
  112 |         b = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = (long unsigned int) b_64;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = (long unsigned int) b_64;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:16: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = _27 << 12;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = _27 << 12;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:34: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = b_64 & 128;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:30: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                        ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 12
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>
_18 = (int) _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_66 = conv_ascii2bin (_18);
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:113:13: warning: use location
  113 |         c = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = (long unsigned int) c_66;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (long unsigned int) c_66;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:16: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _30 << 6;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _30 << 6;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:34: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = c_66 & 128;
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:44: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
In function â€˜ct_base64_decodeâ€™:
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                      ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 13
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7cf0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _20 = (int) _19;
    version:20>
_20 = (int) _19;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:EVP_DecodeBlock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ct_base64_decode========= [0m
[40;42m =======start_check_funciton:ct_base64_decode========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7318
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    var <var_decl 0x7f9e06bd33f0 outbuf>
    def_stmt outbuf_18 = malloc (_4);
    version:18
    ptr-info 0x7f9e06bcb648>
# .MEM_28 = VDEF <.MEM_27(D)>
outbuf_18 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with outbuf ========= [0m
[40;36m ======= relate stmt argument:outbuf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
outbuf_18 = malloc (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:145:14: warning: use location
  145 |     outbuf = OPENSSL_malloc(outlen);                            /* allocation site */
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7318
    type <pointer_type 0x7f9e06bbcb28
        type <integer_type 0x7f9e070a8348 unsigned char public unsigned QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e07093cd8 0> max <integer_cst 0x7f9e07093c78 255>
            pointer_to_this <pointer_type 0x7f9e06bbcb28>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9e06bbcc78>>
    var <var_decl 0x7f9e06bd33f0 outbuf>
    def_stmt outbuf_18 = malloc (_4);
    version:18
    ptr-info 0x7f9e06bcb648>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7240
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0180 in>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f9e06bcb630>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:EVP_DecodeBlock========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7240
    type <pointer_type 0x7f9e06bbce70
        type <integer_type 0x7f9e06bbcdc8 char readonly public QI
            size <integer_cst 0x7f9e07093ca8 constant 8>
            unit-size <integer_cst 0x7f9e07093cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a83f0 precision:8 min <integer_cst 0x7f9e06bb3738 -128> max <integer_cst 0x7f9e06bb3720 127>
            pointer_to_this <pointer_type 0x7f9e06bbce70>>
        public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f9e06bd0180 in>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f9e06bcb630>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7048
    type <integer_type 0x7f9e070a87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a8738 precision:64 min <integer_cst 0x7f9e07093e88 0> max <integer_cst 0x7f9e07094500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9e070b47e0>>
   
    def_stmt _4 = (long unsigned int) outlen_16;
    version:4>
_4 = (long unsigned int) outlen_16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
outbuf_18 = malloc (_4);
./benchmarks/openssl/leak_10/openssl_leak_10.c:145:14: warning: use location
  145 |     outbuf = OPENSSL_malloc(outlen);                            /* allocation site */
      |              ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
*out_22(D) = outbuf_18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:162:10: warning: use location
  162 |     *out = outbuf;
      |          ^
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
this stmt is child function---EVP_DecodeBlock-----

 ================== trace ================== 
trace fucntion name:EVP_DecodeBlock 
[40;44m =======trace_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;46m =======add node_fun stack:conv_ascii2bin========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location
this stmt have mutiple branch --------
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
outlen_24 = outlen_9 + -1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:159:9: warning: use location
  159 |         --outlen;
      |         ^
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
if (outlen_20 < 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
Cond in fucntion ct_base64_decode basic block 6
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 7
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_27(D)>
inlen_15 = strlen (in_14(D));
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
inlen_15 = strlen (in_14(D));
./benchmarks/openssl/leak_10/openssl_leak_10.c:135:20: warning: use location
  135 |     size_t inlen = strlen(in);
      |                    ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
inlen_21 = inlen_8 + 18446744073709551615;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:24: warning: use location
  158 |     while (in[--inlen] == '=') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = in_14(D) + inlen_21;
./benchmarks/openssl/leak_10/openssl_leak_10.c:158:14: warning: use location
  158 |     while (in[--inlen] == '=') {
      |              ^
_5 = (int) inlen_15;
./benchmarks/openssl/leak_10/openssl_leak_10.c:151:14: warning: use location
  151 |     outlen = EVP_DecodeBlock(outbuf, (unsigned char *)in, inlen);
      |              ^
_1 = inlen_15 / 4;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:21: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |                     ^
_2 = (unsigned int) _1;
./benchmarks/openssl/leak_10/openssl_leak_10.c:144:12: warning: use location
  144 |     outlen = (inlen / 4) * 3;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (inlen_15 == 0)
bb index := 2
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
if (inlen_15 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
Cond in fucntion ct_base64_decode basic block 2
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 3
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
if (outbuf_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
Cond in fucntion ct_base64_decode basic block 4
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 5
 ================== possible direct basic block ================= 
from ct_base64_decode basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7048
    type <integer_type 0x7f9e070a87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9e07093bb8 constant 64>
        unit-size <integer_cst 0x7f9e07093bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a8738 precision:64 min <integer_cst 0x7f9e07093e88 0> max <integer_cst 0x7f9e07094500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9e070b47e0>>
   
    def_stmt _4 = (long unsigned int) outlen_16;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: use location
  165 |     OPENSSL_free(outbuf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
outlen_9 = PHI <outlen_20(6), outlen_24(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
_10 = PHI <0(3), outlen_9(10), -1(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_25>
free (outbuf_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:165:5: warning: Use after free error!: free location 
  165 |     OPENSSL_free(outbuf);
      |     ^
inlen_8 = PHI <inlen_15(6), inlen_21(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:154:9: warning: use location
  154 |         goto err;
      |         ^
	relate logic:= 1
succs:= 6
if (outlen_20 < 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:152:8: warning: use location
  152 |     if (outlen < 0) {
      |        ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssl/leak_10/openssl_leak_10.c:148:9: warning: use location
  148 |         goto err;
      |         ^
	relate logic:= 1
succs:= 4
if (outbuf_18 == 0B)
./benchmarks/openssl/leak_10/openssl_leak_10.c:146:8: warning: use location
  146 |     if (outbuf == NULL) {
      |        ^
	relate logic:= 0
succs:= 2
if (inlen_15 == 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:139:8: warning: use location
  139 |     if (inlen == 0) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb300 type <integer_type 0x7f9e070a85e8 int> constant 124>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9e06bcb300 type <integer_type 0x7f9e070a85e8 int> constant 124>
[40;33m =======POP node_fun stack:ct_base64_decode========= [0m
[40;44m =======node_fun:EVP_DecodeBlock========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path EVP_DecodeBlock  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:conv_ascii2bin========= [0m
[40;33m =======POP node_fun stack:conv_ascii2bin========= [0m
[40;42m =======pre_check_funciton:EVP_DecodeBlock========= [0m
[40;42m =======start_check_funciton:EVP_DecodeBlock========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>
_2 = (int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_85 = VDEF <.MEM_79>
_3 = conv_ascii2bin (_2);
bb index := 4
# VUSE <.MEM_83>
return _46;
In function â€˜EVP_DecodeBlockâ€™:
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = conv_ascii2bin (_2);
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:13: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 224)
bb index := 4
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 224)
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
   95 |     while ((conv_ascii2bin(*f) == B64_WS) && (n > 0)) {
      |                                           ^
if (_3 == 224)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:95:43: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 4
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 5
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd77e0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _2 = (int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>
_8 = (int) _7;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_80>
_9 = conv_ascii2bin (_8);
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = conv_ascii2bin (_8);
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                        ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 | 19;
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9 | 19;
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:24: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 243)
bb index := 9
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 243)
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
  104 |     while ((n > 3) && (B64_NOT_BASE64(conv_ascii2bin(f[n - 1]))))
      |                    ^
if (_10 == 243)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:104:20: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 9
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 6
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7990
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _8 = (int) _7;
    version:8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>
_14 = (int) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_82>
a_62 = conv_ascii2bin (_14);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
a_62 = conv_ascii2bin (_14);
./benchmarks/openssl/leak_10/openssl_leak_10.c:111:13: warning: use location
  111 |         a = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = (long unsigned int) a_62;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = (long unsigned int) a_62;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:16: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = _25 << 18;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _25 << 18;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:34: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = a_62 & 128;
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = a_62 & 128;
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:16: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |            ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:12: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 11
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7b40
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _14 = (int) _13;
    version:14>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>
_16 = (int) _15;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
b_64 = conv_ascii2bin (_16);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
b_64 = conv_ascii2bin (_16);
./benchmarks/openssl/leak_10/openssl_leak_10.c:112:13: warning: use location
  112 |         b = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = (long unsigned int) b_64;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = (long unsigned int) b_64;
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:16: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = _27 << 12;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = _27 << 12;
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:34: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _26 | _28;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _26 | _28;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:42: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = b_64 & 128;
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = b_64 & 128;
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:30: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 12
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                        ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:24: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 12
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7bd0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _16 = (int) _15;
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>
_18 = (int) _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
c_66 = conv_ascii2bin (_18);
bb index := 11
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_66 = conv_ascii2bin (_18);
./benchmarks/openssl/leak_10/openssl_leak_10.c:113:13: warning: use location
  113 |         c = conv_ascii2bin(*(f++));
      |             ^
this stmt is child function---conv_ascii2bin-----

 ================== trace ================== 
trace fucntion name:conv_ascii2bin 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = (long unsigned int) c_66;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (long unsigned int) c_66;
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:16: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _30 << 6;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _30 << 6;
./benchmarks/openssl/leak_10/openssl_leak_10.c:119:34: warning: use location
  119 |              (((unsigned long)c) << 6L) | (((unsigned long)d)));
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 | _31;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 | _31;
./benchmarks/openssl/leak_10/openssl_leak_10.c:118:42: warning: use location
  118 |              (((unsigned long)b) << 12L) |
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
l_70 = _32 | _33;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
l_70 = _32 | _33;
./benchmarks/openssl/leak_10/openssl_leak_10.c:117:11: warning: use location
  117 |         l = ((((unsigned long)a) << 18L) |
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = (unsigned char) l_70;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (unsigned char) l_70;
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:18: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
MEM[(unsigned char *)t_39 + 2B] = _38;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 2B] = _38;
./benchmarks/openssl/leak_10/openssl_leak_10.c:122:16: warning: use location
  122 |         *(t++) = (unsigned char)(l) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = l_70 >> 8;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = l_70 >> 8;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:36: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = (unsigned char) _36;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = (unsigned char) _36;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:18: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_92 = VDEF <.MEM_91>
MEM[(unsigned char *)t_39 + 1B] = _37;
bb index := 15
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(unsigned char *)t_39 + 1B] = _37;
./benchmarks/openssl/leak_10/openssl_leak_10.c:121:16: warning: use location
  121 |         *(t++) = (unsigned char)(l >> 8L) & 0xff;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = c_66 & 128;
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = c_66 & 128;
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:44: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_23 != 0)
bb index := 13
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
beacuse in succ := 17 have return or exit
# VUSE <.MEM_83>
return _46;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_23 != 0)
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
  115 |         if ((a & 0x80) || (b & 0x80) || (c & 0x80) || (d & 0x80))
      |                                      ^
if (_23 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_10/openssl_leak_10.c:115:38: warning: use location
Cond in fucntion EVP_DecodeBlock basic block 13
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 17
 ================== possible direct basic block ================= 
from EVP_DecodeBlock basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9e06bd7c60
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _18 = (int) _17;
    version:18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9e06bd7cf0
    type <integer_type 0x7f9e070a85e8 int public SI
        size <integer_cst 0x7f9e07093df8 constant 32>
        unit-size <integer_cst 0x7f9e07093e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9e070a85e8 precision:32 min <integer_cst 0x7f9e07093db0 -2147483648> max <integer_cst 0x7f9e07093dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9e070af9d8>>
   
    def_stmt _20 = (int) _19;
    version:20>
_20 = (int) _19;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:EVP_DecodeBlock========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
CTLOG_new_from_base64 (&ct_log, "pkey_base64", "name");
ct_log ={v} {CLOBBER};
return 0;

=======Mapping node_fun:CTLOG_new_from_base64=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
pkey_der = 0B;
pkey_der_len_15 = ct_base64_decode (pkey_base64_13(D), &pkey_der);
if (ct_log_16(D) == 0B)
  goto <bb 3>; [9.81%]
else
  goto <bb 4>; [90.19%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 105334072]:
CTerr (118, 7);
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 968407753]:
if (pkey_der_len_15 <= 0)
  goto <bb 5>; [26.36%]
else
  goto <bb 6>; [73.64%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 255272283]:
CTerr (118, 110);
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 713135470]:
_1 = pkey_der;
p = _1;
_2 = d2i_PUBKEY (0B, &p, pkey_der_len_15);
_3 = (long int) _2;
pkey_19 = (struct EVP_PKEY *) _3;
_4 = pkey_der;
free (_4);
if (_2 == 0)
  goto <bb 7>; [34.00%]
else
  goto <bb 8>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 242466062]:
CTerr (118, 110);
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 470669407]:
_5 = CTLOG_new (pkey_19, name_21(D));
_6 = (long int) _5;
_7 = (struct CTLOG *) _6;
*ct_log_16(D) = _7;
_8 = *ct_log_16(D);
if (_8 == 0B)
  goto <bb 9>; [9.81%]
else
  goto <bb 10>; [90.19%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 46172668]:
EVP_PKEY_free (pkey_19);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _9 = PHI <0(3), 0(5), 0(7), 1(8), 0(9)>
pkey_der ={v} {CLOBBER};
p ={v} {CLOBBER};
return _9;

=======Mapping node_fun:ct_base64_decode=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 242605919]:
inlen_15 = strlen (in_14(D));
if (inlen_15 == 0)
  goto <bb 3>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 124020147]:
*out_22(D) = 0B;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118585773]:
_1 = inlen_15 / 4;
_2 = (unsigned int) _1;
_3 = _2 * 3;
outlen_16 = (int) _3;
_4 = (long unsigned int) outlen_16;
outbuf_18 = malloc (_4);
if (outbuf_18 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 47434]:
CTerr (124, 65);
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 118538338]:
_5 = (int) inlen_15;
outlen_20 = EVP_DecodeBlock (outbuf_18, in_14(D), _5);
if (outlen_20 < 0)
  goto <bb 7>; [0.36%]
else
  goto <bb 9>; [99.64%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 426738]:
CTerr (124, 108);
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630225]:
outlen_24 = outlen_9 + -1;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1073741824]:
# inlen_8 = PHI <inlen_15(6), inlen_21(8)>
# outlen_9 = PHI <outlen_20(6), outlen_24(8)>
inlen_21 = inlen_8 + 18446744073709551615;
_6 = in_14(D) + inlen_21;
_7 = *_6;
if (_7 == 61)
  goto <bb 8>; [89.00%]
else
  goto <bb 10>; [11.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
*out_22(D) = outbuf_18;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 474172]:
err:
free (outbuf_18);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 242605919]:
# _10 = PHI <0(3), outlen_9(10), -1(11)>
return _10;

=======Mapping node_fun:EVP_DecodeBlock=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114215608]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 953469453]:
f_56 = f_40 + 1;
n_57 = n_42 + -1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1067685061]:
# f_40 = PHI <f_52(D)(2), f_56(3)>
# n_42 = PHI <n_53(D)(2), n_57(3)>
_1 = *f_40;
_2 = (int) _1;
_3 = conv_ascii2bin (_2);
if (_3 == 224)
  goto <bb 5>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1008962384]:
if (n_42 > 0)
  goto <bb 3>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 953469462]:
n_59 = n_43 + -1;
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 114215609]:
# n_78 = PHI <n_42(4), n_42(5)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1067685073]:
# n_43 = PHI <n_59(6), n_78(7)>
if (n_43 > 3)
  goto <bb 9>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1008962394]:
_4 = (sizetype) n_43;
_5 = _4 + 18446744073709551615;
_6 = f_40 + _5;
_7 = *_6;
_8 = (int) _7;
_9 = conv_ascii2bin (_8);
_10 = _9 | 19;
if (_10 == 243)
  goto <bb 6>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 114215610]:
_11 = (unsigned int) n_43;
_12 = _11 & 3;
if (_12 != 0)
  goto <bb 17>; [1.04%]
else
  goto <bb 18>; [98.96%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 113027768]:
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1050119504]:
_13 = *f_41;
_14 = (int) _13;
a_62 = conv_ascii2bin (_14);
_15 = MEM[(const unsigned char *)f_41 + 1B];
_16 = (int) _15;
b_64 = conv_ascii2bin (_16);
_17 = MEM[(const unsigned char *)f_41 + 2B];
_18 = (int) _17;
c_66 = conv_ascii2bin (_18);
f_67 = &MEM <const unsigned char> [(void *)f_41 + 4B];
_19 = MEM[(const unsigned char *)f_41 + 3B];
_20 = (int) _19;
d_69 = conv_ascii2bin (_20);
_21 = a_62 & 128;
if (_21 != 0)
  goto <bb 17>; [2.20%]
else
  goto <bb 12>; [97.80%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1027016875]:
_22 = b_64 & 128;
if (_22 != 0)
  goto <bb 17>; [2.20%]
else
  goto <bb 13>; [97.80%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 1004422504]:
_23 = c_66 & 128;
if (_23 != 0)
  goto <bb 17>; [2.20%]
else
  goto <bb 14>; [97.80%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 982325209]:
_24 = d_69 & 128;
if (_24 != 0)
  goto <bb 17>; [2.20%]
else
  goto <bb 15>; [97.80%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 960714054]:
_25 = (long unsigned int) a_62;
_26 = _25 << 18;
_27 = (long unsigned int) b_64;
_28 = _27 << 12;
_29 = _26 | _28;
_30 = (long unsigned int) c_66;
_31 = _30 << 6;
_32 = _29 | _31;
_33 = (long unsigned int) d_69;
l_70 = _32 | _33;
_34 = l_70 >> 16;
_35 = (unsigned char) _34;
*t_39 = _35;
_36 = l_70 >> 8;
_37 = (unsigned char) _36;
MEM[(unsigned char *)t_39 + 1B] = _37;
t_73 = &MEM <unsigned char> [(void *)t_39 + 3B];
_38 = (unsigned char) l_70;
MEM[(unsigned char *)t_39 + 2B] = _38;
ret_75 = ret_45 + 3;
i_76 = i_44 + 4;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 1073741824]:
# t_39 = PHI <t_60(D)(18), t_73(15)>
# f_41 = PHI <f_40(18), f_67(15)>
# i_44 = PHI <0(18), i_76(15)>
# ret_45 = PHI <0(18), ret_75(15)>
if (n_43 > i_44)
  goto <bb 11>; [97.80%]
else
  goto <bb 17>; [2.20%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 114215612]:
# _46 = PHI <-1(10), -1(11), -1(12), -1(13), -1(14), ret_45(16)>
return _46;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 0.003200 mb[0m
[40;34m    collect time: : 0.000182 s [0m
[40;34m    algorithm time: 0.065637 s [0m
[40;34m    gimple stmt count : : 118 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine                        |      |      |      |      |     +0.3%|     +0.3%|
mergephi                         |      |      |      |      |     +0.3%|     +0.3%|
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +3.0%|     +0.0%|
cplxlower                        |      |      |      |      |     +2.9%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.6%|     -0.3%|
copyprop                         |      |      |      |      |     -0.6%|     -0.3%|
reassoc                          |      |      |      |      |          |     +0.1%|
dce                              |      |    +2|      |      |     -1.3%|     -0.9%|
forwprop                         |      |      |      |      |     -1.3%|     -1.0%|
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                             |      |      |      |      |     -0.6%|     -0.5%|
dce                              |      |      |      |      |     -0.6%|     -0.5%|
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -28.8%|    -35.6%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     +3.7%|     +0.0%|
lim                              |      |      |      |      |     +3.5%|     +0.0%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +37.6%|    +55.2%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +0.3%|     -0.0%|
strlen                           |      |    +2|      |      |     +0.3%|     -0.0%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.3%|     -0.0%|
forwprop                         |      |    -1|      |      |     -0.3%|     -0.0%|
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +76.6%|    +53.8%|
into_cfglayout                   |      |      |      |      |     -2.5%|     -0.4%|
jump                             |      |      |      |      |     -2.5%|     -0.4%|
subreg1              ------------|      |      |      |      |          |          |
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -0.7%|     -0.5%|
ce1                              |      |      |      |      |     -0.7%|     -0.5%|
reginfo                          |      |      |      |      |          |     +0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +1.8%|     +1.7%|
ce2                              |      |      |      |      |     +1.8%|     +1.6%|
outof_cfglayout                  |      |      |      |      |     +2.5%|     +0.3%|
split1                           |      |      |      |      |     +2.5%|     +0.3%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -4.8%|     -6.3%|
postreload                       |      |      |      |      |     -5.1%|     -6.7%|
split2               ------------|      |      |      |      |          |          |
cmpelim              ------------|      |      |      |      |          |          |
pro_and_epilogue                 |      |      |      |      |     +8.8%|     +7.3%|
dse2                             |      |      |      |      |     +8.1%|     +6.8%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     -0.5%|     +0.2%|
split4                           |      |      |      |      |     -0.5%|     +0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccnI0xIK.ltrans0.ltrans.o: in function `EVP_DecodeBlock':
<artificial>:(.text+0x20): undefined reference to `conv_ascii2bin'
/usr/bin/ld: <artificial>:(.text+0x50): undefined reference to `conv_ascii2bin'
/usr/bin/ld: <artificial>:(.text+0xba): undefined reference to `conv_ascii2bin'
/usr/bin/ld: <artificial>:(.text+0xca): undefined reference to `conv_ascii2bin'
/usr/bin/ld: <artificial>:(.text+0xdb): undefined reference to `conv_ascii2bin'
/usr/bin/ld: /tmp/ccnI0xIK.ltrans0.ltrans.o:<artificial>:(.text+0xf0): more undefined references to `conv_ascii2bin' follow
/usr/bin/ld: /tmp/ccnI0xIK.ltrans0.ltrans.o: in function `ct_base64_decode':
<artificial>:(.text+0x200): undefined reference to `CTerr'
/usr/bin/ld: <artificial>:(.text+0x216): undefined reference to `CTerr'
/usr/bin/ld: /tmp/ccnI0xIK.ltrans0.ltrans.o: in function `CTLOG_new_from_base64':
<artificial>:(.text+0x274): undefined reference to `d2i_PUBKEY'
/usr/bin/ld: <artificial>:(.text+0x295): undefined reference to `CTLOG_new'
/usr/bin/ld: <artificial>:(.text+0x2c7): undefined reference to `CTerr'
/usr/bin/ld: <artificial>:(.text+0x2e2): undefined reference to `CTerr'
/usr/bin/ld: <artificial>:(.text+0x2fd): undefined reference to `CTerr'
/usr/bin/ld: <artificial>:(.text+0x30c): undefined reference to `EVP_PKEY_free'
collect2: error: ld returned 1 exit status
