./benchmarks/openssl/double_free_5/openssl_df_5.c: In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:36: warning: passing argument 1 of ‘lh_CONF_VALUE_retrieve’ from incompatible pointer type [-Wincompatible-pointer-types]
  140 |     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |                                ~~~~^~~~~~
      |                                    |
      |                                    struct lhash_st_CONF_VALUE *
./benchmarks/openssl/double_free_5/openssl_df_5.c:113:51: note: expected ‘OPENSSL_LHASH *’ {aka ‘struct lhash_st *’} but argument is of type ‘struct lhash_st_CONF_VALUE *’
  113 | CONF_VALUE *lh_CONF_VALUE_retrieve(OPENSSL_LHASH *lh, const void *data)
      |                                    ~~~~~~~~~~~~~~~^~
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: assignment to ‘struct lhash_st_CONF_VALUE *’ from incompatible pointer type ‘CONF_VALUE *’ [-Wincompatible-pointer-types]
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5: warning: implicit declaration of function ‘CONF_set_nconf’; did you mean ‘CONF_get_section’? [-Wimplicit-function-declaration]
  210 |     CONF_set_nconf(&ctmp, conf);
      |     ^~~~~~~~~~~~~~
      |     CONF_get_section
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: implicit declaration of function ‘BIO_new_file’ [-Wimplicit-function-declaration]
  224 |     in = BIO_new_file(file, "r");
      |          ^~~~~~~~~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:8: warning: assignment to ‘BIO *’ {aka ‘struct bio_st *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  224 |     in = BIO_new_file(file, "r");
      |        ^
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: implicit declaration of function ‘BIO_free’ [-Wimplicit-function-declaration]
  230 |     BIO_free(in);
      |     ^~~~~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c: In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:27: warning: passing argument 1 of ‘CONF_get_section’ from incompatible pointer type [-Wincompatible-pointer-types]
  256 |     sk = CONF_get_section(parms, "default");
      |                           ^~~~~
      |                           |
      |                           struct lhash_st_CONF_VALUE *
./benchmarks/openssl/double_free_5/openssl_df_5.c:158:52: note: expected ‘const CONF *’ {aka ‘const struct conf_st *’} but argument is of type ‘struct lhash_st_CONF_VALUE *’
  158 | STACK_OF(CONF_VALUE) *CONF_get_section(const CONF *conf, const char *section)
      |                                        ~~~~~~~~~~~~^~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: implicit declaration of function ‘sk_CONF_VALUE_num’; did you mean ‘lh_CONF_VALUE_new’? [-Wimplicit-function-declaration]
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^~~~~~~~~~~~~~~~~
      |         lh_CONF_VALUE_new
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: implicit declaration of function ‘CONF_free’ [-Wimplicit-function-declaration]
  258 |         CONF_free(parms);       /* freed */
      |         ^~~~~~~~~
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: implicit declaration of function ‘sk_CONF_VALUE_value’; did you mean ‘lh_CONF_VALUE_new’? [-Wimplicit-function-declaration]
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^~~~~~~~~~~~~~~~~~~
      |              lh_CONF_VALUE_new
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: assignment to ‘CONF_VALUE *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: implicit declaration of function ‘X509_NAME_add_entry_by_NID’ [-Wimplicit-function-declaration]
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^~~~~~~~~~~~~~~~~~~~~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.1%|          |
nothrow                          |      |      |      |      |     -2.1%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.5%|          |
forwprop                         |      |      |      |      |     -0.5%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.5%|          |
phiopt                           |      |      |      |      |     -0.5%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:certify_spkac=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 2
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 8
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 13
succs:= 13
succs:= 14
succs:= 3
succs:= 5
succs:= 6
succs:= 14
=======node_fun:CONF_load=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:CONF_load_bio=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:NCONF_load_bio=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 3
=======node_fun:_CONF_new_data=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 4
=======node_fun:lh_CONF_VALUE_new=========

--------GIMPLE Cond -------
succs:= 2
=======node_fun:CONF_get_section=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 3
succs:= 2
succs:= 3
=======node_fun:_CONF_get_section_values=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
succs:= 2
=======node_fun:_CONF_get_section=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:lh_CONF_VALUE_retrieve=========

--------GIMPLE Cond -------
succs:= 4
succs:= 2
succs:= 2
=======node_fun:getrn=========

--------GIMPLE Cond -------
succs:= 12
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 10
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_7 = VDEF <.MEM_6(D)>
certify_spkac (_2, _1);
# .MEM_37 = VDEF <.MEM_36(D)>
parms_19 = CONF_load (0B, infile_17(D), &errline);
# .MEM_38 = VDEF <.MEM_37>
sk_21 = CONF_get_section (parms_19, "default");
# .MEM_39 = VDEF <.MEM_38>
_1 = sk_CONF_VALUE_num (sk_21);
# .MEM_43 = VDEF <.MEM_39>
CONF_free (parms_19);
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
# .MEM_42 = VDEF <.MEM_41>
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
# .MEM_44 = VDEF <.MEM_35>
CONF_free (parms_19);
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
# .MEM_11 = VDEF <.MEM_10(D)>
CONF_set_nconf (&ctmp, conf_3(D));
# .MEM_12 = VDEF <.MEM_11>
ret_8 = NCONF_load_bio (&ctmp, bp_5(D), eline_6(D));
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
# .MEM_19 = VDEF <.MEM_18>
rn_14 = getrn (lh_10(D), data_12(D), &hash);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:certify_spkac========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path certify_spkac  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;33m =======POP node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_value========= [0m
[40;33m =======POP node_fun stack:sk_CONF_VALUE_value========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_num========= [0m
[40;33m =======POP node_fun stack:sk_CONF_VALUE_num========= [0m
[40;42m =======pre add _ fucntion:CONF_get_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_get_section  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section_values  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4828
    type <pointer_type 0x7f7a9ba839d8
        type <record_type 0x7f7a9ba83930 OPENSSL_LHASH BLK
            size <integer_cst 0x7f7a9c0260a8 constant 1408>
            unit-size <integer_cst 0x7f7a9ba71930 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83888 fields <field_decl 0x7f7a9ba85130 b> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba839d8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8eb80 lh>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f7a9ba91dc8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section========= [0m
[40;42m =======start_check_funciton:_CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>
# VUSE <.MEM_17>
_4 = conf_7(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:9: warning: use location
  140 |     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |         ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), v_13(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_5 = PHI <0B(2), v_13(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section_values========= [0m
[40;42m =======start_check_funciton:_CONF_get_section_values========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
v_6 = _CONF_get_section (conf_3(D), section_4(D));
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:150:9: warning: use location
  150 |     v = _CONF_get_section(conf, section);
      |         ^
this stmt is child function---_CONF_get_section-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section 
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_7 = v_6->value;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:152:17: warning: use location
  152 |         return ((STACK_OF(CONF_VALUE) *)v->value);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), _7(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), _7(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (v_6 != 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
  151 |     if (v != NULL)
      |        ^
if (v_6 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
Cond in fucntion _CONF_get_section_values basic block 2
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 3
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section_values========= [0m
[40;42m =======pre_check_funciton:CONF_get_section========= [0m
[40;42m =======start_check_funciton:CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aea0
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e800 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91c48>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:168:12: warning: use location
  168 |     return _CONF_get_section_values(conf, section);
      |            ^
this stmt is child function---_CONF_get_section_values-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section_values 
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), 0B(3), _7(4)>
bb index := 5
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), 0B(3), _7(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (section_4(D) == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:164:8: warning: use location
  164 |     if (section == NULL) {
      |        ^
if (section_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:164:8: warning: use location
Cond in fucntion CONF_get_section basic block 3
 ================== possible direct basic block ================= 
from CONF_get_section basic block 5
 ================== possible direct basic block ================= 
from CONF_get_section basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_3(D) == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
  160 |     if (conf == NULL) {
      |        ^
if (conf_3(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
Cond in fucntion CONF_get_section basic block 2
 ================== possible direct basic block ================= 
from CONF_get_section basic block 5
 ================== possible direct basic block ================= 
from CONF_get_section basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aea0
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e800 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91c48>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_get_section========= [0m
[40;42m =======pre add _ fucntion:CONF_load========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_load  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;33m =======POP node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_load_bio  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_load_bio  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = conf_6(D)->data;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
  186 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (_3 == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
  186 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = conf_6(D)->data;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
  184 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
  181 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre_check_funciton:NCONF_load_bio========= [0m
[40;42m =======start_check_funciton:NCONF_load_bio========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = _CONF_new_data (conf_4(D));
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:12: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |            ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |           ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
Cond in fucntion NCONF_load_bio basic block 3
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 4
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_4(D) == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
  194 |     if (conf == NULL) {
      |        ^
if (conf_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
Cond in fucntion NCONF_load_bio basic block 2
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;33m =======POP node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre_check_funciton:CONF_load_bio========= [0m
[40;42m =======start_check_funciton:CONF_load_bio========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14dec0
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14df00
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;33m =======POP node_fun stack:BIO_new_file========= [0m
[40;42m =======pre_check_funciton:CONF_load========= [0m
[40;42m =======start_check_funciton:CONF_load========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a318
    type <pointer_type 0x7f7a9ba7a7e0
        type <integer_type 0x7f7a9ba7a738 char readonly QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba7a7e0>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e300 file>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f7a9ba91a98>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = BIO_new_file (file_6(D), "r");
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |          ^
this stmt is child function---BIO_new_file-----

 ================== trace ================== 
trace fucntion name:BIO_new_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
  225 |     if (in == NULL) {
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
Cond in fucntion CONF_load basic block 2
 ================== possible direct basic block ================= 
from CONF_load basic block 4
 ================== possible direct basic block ================= 
from CONF_load basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_2 = (long int) _1;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
in_8 = (struct BIO *) _2;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:8: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
BIO_free (in_8);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a318
    type <pointer_type 0x7f7a9ba7a7e0
        type <integer_type 0x7f7a9ba7a738 char readonly QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba7a7e0>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e300 file>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f7a9ba91a98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a3a8
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e280 conf>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f7a9ba91ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
BIO_free (in_8);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a3a8
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e280 conf>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f7a9ba91ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a360
    type <pointer_type 0x7f7a9ba81888
        type <record_type 0x7f7a9ba817e0 BIO VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba81888>>
        unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba966c0 in>
    def_stmt in_8 = (struct BIO *) _2;
    version:8
    ptr-info 0x7f7a9ba91ab0>
in_8 = (struct BIO *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
BIO_free (in_8);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a360
    type <pointer_type 0x7f7a9ba81888
        type <record_type 0x7f7a9ba817e0 BIO VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba81888>>
        unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba966c0 in>
    def_stmt in_8 = (struct BIO *) _2;
    version:8
    ptr-info 0x7f7a9ba91ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load========= [0m
[40;42m =======pre_check_funciton:certify_spkac========= [0m
[40;42m =======start_check_funciton:certify_spkac========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba914f8 type <pointer_type 0x7f7a9ba86498> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf59c18
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba961b0 parms>
    def_stmt parms_19 = CONF_load (0B, infile_17(D), &errline);
    version:19
    ptr-info 0x7f7a9ba919f0>
# .MEM_37 = VDEF <.MEM_36(D)>
parms_19 = CONF_load (0B, infile_17(D), &errline);

 ================== trace ptable================== 
trace fucntion name:CONF_load 
[40;44m =======trace_function_path CONF_load  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:CONF_load========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;46m =======add node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;46m =======add node_fun stack:CONF_load_bio========= [0m
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :889========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :890========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :891========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :892========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;46m =======add node_fun stack:BIO_new_file========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_load-----
this other function ------CONF_load-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36(D)>
parms_19 = CONF_load (0B, infile_17(D), &errline);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
parms_19 = CONF_load (0B, infile_17(D), &errline);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:251:13: warning: use location
  251 |     parms = CONF_load(NULL, infile, &errline);
      |             ^
this stmt is child function---CONF_load-----

 ================== trace ================== 
trace fucntion name:CONF_load 
[40;44m =======trace_function_path CONF_load  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:CONF_load========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;46m =======add node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;46m =======add node_fun stack:CONF_load_bio========= [0m
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;46m =======add node_fun stack:BIO_new_file========= [0m

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
  289 |     CONF_free(parms);   /* double-free */
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
  258 |         CONF_free(parms);       /* freed */
      |         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
sk_21 = CONF_get_section (parms_19, "default");
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:10: warning: use location
  256 |     sk = CONF_get_section(parms, "default");
      |          ^
this stmt is child function---CONF_get_section-----

 ================== trace ================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sk_CONF_VALUE_value (sk_21, i_13);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (long int) _3;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_25 = (struct CONF_VALUE *) _4;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_26 = cv_25->name;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_11 = PHI <buf_26(7), buf_28(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_12 = PHI <buf_29(10), buf_11(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion certify_spkac basic block 13
 ================== possible direct basic block ================= 
from certify_spkac basic block 14
 ================== possible direct basic block ================= 
from certify_spkac basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
if (_9 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
Cond in fucntion certify_spkac basic block 12
 ================== possible direct basic block ================= 
from certify_spkac basic block 8
 ================== possible direct basic block ================= 
from certify_spkac basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                ^
if (_8 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion certify_spkac basic block 9
 ================== possible direct basic block ================= 
from certify_spkac basic block 10
 ================== possible direct basic block ================= 
from certify_spkac basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_33 = i_13 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
  266 |     for (i = 0;; i++) {
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = sk_CONF_VALUE_num (sk_21);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
  267 |         if (sk_CONF_VALUE_num(sk) <= i)
      |             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_1 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_19 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (parms_19 == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
  252 |     if (parms == NULL) {
      |        ^
if (parms_19 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion certify_spkac basic block 2
 ================== possible direct basic block ================= 
from certify_spkac basic block 3
 ================== possible direct basic block ================= 
from certify_spkac basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf59c18
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba961b0 parms>
    def_stmt parms_19 = CONF_load (0B, infile_17(D), &errline);
    version:19
    ptr-info 0x7f7a9ba919f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>
# .MEM_38 = VDEF <.MEM_37>
sk_21 = CONF_get_section (parms_19, "default");

 ================== trace ptable================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :890========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :891========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :892========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_get_section-----
this other function ------CONF_get_section-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
  289 |     CONF_free(parms);   /* double-free */
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
  258 |         CONF_free(parms);       /* freed */
      |         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
sk_21 = CONF_get_section (parms_19, "default");
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:10: warning: use location
  256 |     sk = CONF_get_section(parms, "default");
      |          ^
this stmt is child function---CONF_get_section-----

 ================== trace ================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sk_CONF_VALUE_value (sk_21, i_13);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (long int) _3;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_25 = (struct CONF_VALUE *) _4;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_26 = cv_25->name;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_11 = PHI <buf_26(7), buf_28(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_12 = PHI <buf_29(10), buf_11(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion certify_spkac basic block 13
 ================== possible direct basic block ================= 
from certify_spkac basic block 14
 ================== possible direct basic block ================= 
from certify_spkac basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
if (_9 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
Cond in fucntion certify_spkac basic block 12
 ================== possible direct basic block ================= 
from certify_spkac basic block 8
 ================== possible direct basic block ================= 
from certify_spkac basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                ^
if (_8 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion certify_spkac basic block 9
 ================== possible direct basic block ================= 
from certify_spkac basic block 10
 ================== possible direct basic block ================= 
from certify_spkac basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_33 = i_13 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
  266 |     for (i = 0;; i++) {
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = sk_CONF_VALUE_num (sk_21);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
  267 |         if (sk_CONF_VALUE_num(sk) <= i)
      |             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_1 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_19 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (parms_19 == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
  252 |     if (parms == NULL) {
      |        ^
if (parms_19 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion certify_spkac basic block 2
 ================== possible direct basic block ================= 
from certify_spkac basic block 3
 ================== possible direct basic block ================= 
from certify_spkac basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>
# .MEM_38 = VDEF <.MEM_37>
sk_21 = CONF_get_section (parms_19, "default");

 ================== trace ptable================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :890========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :891========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :892========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_get_section-----
this other function ------CONF_get_section-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
  289 |     CONF_free(parms);   /* double-free */
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
  258 |         CONF_free(parms);       /* freed */
      |         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
sk_21 = CONF_get_section (parms_19, "default");
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:10: warning: use location
  256 |     sk = CONF_get_section(parms, "default");
      |          ^
this stmt is child function---CONF_get_section-----

 ================== trace ================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sk_CONF_VALUE_value (sk_21, i_13);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (long int) _3;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_25 = (struct CONF_VALUE *) _4;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_26 = cv_25->name;
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_11 = PHI <buf_26(7), buf_28(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_12 = PHI <buf_29(10), buf_11(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion certify_spkac basic block 13
 ================== possible direct basic block ================= 
from certify_spkac basic block 14
 ================== possible direct basic block ================= 
from certify_spkac basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
if (_9 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
Cond in fucntion certify_spkac basic block 12
 ================== possible direct basic block ================= 
from certify_spkac basic block 8
 ================== possible direct basic block ================= 
from certify_spkac basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                ^
if (_8 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion certify_spkac basic block 9
 ================== possible direct basic block ================= 
from certify_spkac basic block 10
 ================== possible direct basic block ================= 
from certify_spkac basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_33 = i_13 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
  266 |     for (i = 0;; i++) {
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_45>
return -1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = sk_CONF_VALUE_num (sk_21);
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
  267 |         if (sk_CONF_VALUE_num(sk) <= i)
      |             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_1 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_19 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (parms_19 == 0B)
In function ‘main’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
  252 |     if (parms == NULL) {
      |        ^
if (parms_19 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion certify_spkac basic block 2
 ================== possible direct basic block ================= 
from certify_spkac basic block 3
 ================== possible direct basic block ================= 
from certify_spkac basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9bf51fc0 type <pointer_type 0x7f7a9bf6d000> constant 0>
[40;33m =======POP node_fun stack:certify_spkac========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf596c0
    type <pointer_type 0x7f7a9ba81d20
        type <integer_type 0x7f7a9ba7a690 char public QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba81d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
        pointer_to_this <pointer_type 0x7f7a9ba81dc8>>
   
    def_stmt _2 = *argv_5(D);
    version:2
    ptr-info 0x7f7a9ba91978>
# VUSE <.MEM_6(D)>
_2 = *argv_5(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
certify_spkac (_2, _1);
certify_spkac (_2, _1);
./benchmarks/openssl/double_free_5/openssl_df_5.c:295:9: warning: use location
  295 |         certify_spkac(argv[0], argc);
      |         ^
this stmt is child function---certify_spkac-----

 ================== trace ================== 
trace fucntion name:certify_spkac 
[40;44m =======trace_function_path certify_spkac  function_call count: 6 level :0========  [0m
[40;36m ======= node_fun:certify_spkac========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;46m =======add node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_value========= [0m
[40;46m =======add node_fun stack:sk_CONF_VALUE_value========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_num========= [0m
[40;46m =======add node_fun stack:sk_CONF_VALUE_num========= [0m
[40;42m =======pre add _ fucntion:CONF_get_section========= [0m
[40;46m =======add node_fun stack:CONF_get_section========= [0m
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CONF_load========= [0m
[40;46m =======add node_fun stack:CONF_load========= [0m
[40;44m =======trace_function_path CONF_load  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:CONF_load========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;46m =======add node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;46m =======add node_fun stack:CONF_load_bio========= [0m
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;46m =======add node_fun stack:BIO_new_file========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
certify_spkac (_2, _1);
certify_spkac (_2, _1);
./benchmarks/openssl/double_free_5/openssl_df_5.c:295:9: warning: use location
this stmt is child function---certify_spkac-----

 ================== trace ================== 
trace fucntion name:certify_spkac 
[40;44m =======trace_function_path certify_spkac  function_call count: 6 level :0========  [0m
[40;36m ======= node_fun:certify_spkac========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;46m =======add node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_value========= [0m
[40;46m =======add node_fun stack:sk_CONF_VALUE_value========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_num========= [0m
[40;46m =======add node_fun stack:sk_CONF_VALUE_num========= [0m
[40;42m =======pre add _ fucntion:CONF_get_section========= [0m
[40;46m =======add node_fun stack:CONF_get_section========= [0m
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:CONF_load========= [0m
[40;46m =======add node_fun stack:CONF_load========= [0m
[40;44m =======trace_function_path CONF_load  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:CONF_load========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;46m =======add node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;46m =======add node_fun stack:CONF_load_bio========= [0m
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;46m =======add node_fun stack:BIO_new_file========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf596c0
    type <pointer_type 0x7f7a9ba81d20
        type <integer_type 0x7f7a9ba7a690 char public QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba81d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
        pointer_to_this <pointer_type 0x7f7a9ba81dc8>>
   
    def_stmt _2 = *argv_5(D);
    version:2
    ptr-info 0x7f7a9ba91978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:certify_spkac========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path certify_spkac  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:CONF_free========= [0m
[40;33m =======POP node_fun stack:CONF_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry_by_NID========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_value========= [0m
[40;33m =======POP node_fun stack:sk_CONF_VALUE_value========= [0m
[40;42m =======pre add _ fucntion:sk_CONF_VALUE_num========= [0m
[40;33m =======POP node_fun stack:sk_CONF_VALUE_num========= [0m
[40;42m =======pre add _ fucntion:CONF_get_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_get_section  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section_values  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4828
    type <pointer_type 0x7f7a9ba839d8
        type <record_type 0x7f7a9ba83930 OPENSSL_LHASH BLK
            size <integer_cst 0x7f7a9c0260a8 constant 1408>
            unit-size <integer_cst 0x7f7a9ba71930 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83888 fields <field_decl 0x7f7a9ba85130 b> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba839d8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8eb80 lh>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f7a9ba91dc8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section========= [0m
[40;42m =======start_check_funciton:_CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>
# VUSE <.MEM_17>
_4 = conf_7(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:9: warning: use location
  140 |     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |         ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), v_13(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_5 = PHI <0B(2), v_13(3)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section_values========= [0m
[40;42m =======start_check_funciton:_CONF_get_section_values========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
v_6 = _CONF_get_section (conf_3(D), section_4(D));
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:150:9: warning: use location
  150 |     v = _CONF_get_section(conf, section);
      |         ^
this stmt is child function---_CONF_get_section-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section 
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_7 = v_6->value;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:152:17: warning: use location
  152 |         return ((STACK_OF(CONF_VALUE) *)v->value);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), _7(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), _7(3)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (v_6 != 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
  151 |     if (v != NULL)
      |        ^
if (v_6 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
Cond in fucntion _CONF_get_section_values basic block 2
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 3
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section_values========= [0m
[40;42m =======pre_check_funciton:CONF_get_section========= [0m
[40;42m =======start_check_funciton:CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aea0
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e800 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91c48>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:168:12: warning: use location
  168 |     return _CONF_get_section_values(conf, section);
      |            ^
this stmt is child function---_CONF_get_section_values-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section_values 
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), 0B(3), _7(4)>
bb index := 5
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), 0B(3), _7(4)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (section_4(D) == 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:164:8: warning: use location
  164 |     if (section == NULL) {
      |        ^
if (section_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:164:8: warning: use location
Cond in fucntion CONF_get_section basic block 3
 ================== possible direct basic block ================= 
from CONF_get_section basic block 5
 ================== possible direct basic block ================= 
from CONF_get_section basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_3(D) == 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
  160 |     if (conf == NULL) {
      |        ^
if (conf_3(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
Cond in fucntion CONF_get_section basic block 2
 ================== possible direct basic block ================= 
from CONF_get_section basic block 5
 ================== possible direct basic block ================= 
from CONF_get_section basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aea0
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e800 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91c48>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_get_section========= [0m
[40;42m =======pre add _ fucntion:CONF_load========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_load  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;33m =======POP node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_load_bio  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_load_bio  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = conf_6(D)->data;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
  186 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (_3 == 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
  186 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = conf_6(D)->data;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
  184 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
  181 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre_check_funciton:NCONF_load_bio========= [0m
[40;42m =======start_check_funciton:NCONF_load_bio========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = _CONF_new_data (conf_4(D));
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:12: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |            ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |           ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
Cond in fucntion NCONF_load_bio basic block 3
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 4
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_4(D) == 0B)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
  194 |     if (conf == NULL) {
      |        ^
if (conf_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
Cond in fucntion NCONF_load_bio basic block 2
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;33m =======POP node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre_check_funciton:CONF_load_bio========= [0m
[40;42m =======start_check_funciton:CONF_load_bio========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14dec0
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14df00
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;33m =======POP node_fun stack:BIO_new_file========= [0m
[40;42m =======pre_check_funciton:CONF_load========= [0m
[40;42m =======start_check_funciton:CONF_load========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a318
    type <pointer_type 0x7f7a9ba7a7e0
        type <integer_type 0x7f7a9ba7a738 char readonly QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba7a7e0>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e300 file>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f7a9ba91a98>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = BIO_new_file (file_6(D), "r");
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |          ^
this stmt is child function---BIO_new_file-----

 ================== trace ================== 
trace fucntion name:BIO_new_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0)
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
  225 |     if (in == NULL) {
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
Cond in fucntion CONF_load basic block 2
 ================== possible direct basic block ================= 
from CONF_load basic block 4
 ================== possible direct basic block ================= 
from CONF_load basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_2 = (long int) _1;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
in_8 = (struct BIO *) _2;
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:8: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
BIO_free (in_8);
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a318
    type <pointer_type 0x7f7a9ba7a7e0
        type <integer_type 0x7f7a9ba7a738 char readonly QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba7a7e0>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e300 file>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f7a9ba91a98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a3a8
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e280 conf>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f7a9ba91ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
BIO_free (in_8);
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a3a8
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e280 conf>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f7a9ba91ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a360
    type <pointer_type 0x7f7a9ba81888
        type <record_type 0x7f7a9ba817e0 BIO VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba81888>>
        unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba966c0 in>
    def_stmt in_8 = (struct BIO *) _2;
    version:8
    ptr-info 0x7f7a9ba91ab0>
in_8 = (struct BIO *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
BIO_free (in_8);
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
In function ‘certify_spkac’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
In function ‘certify_spkac’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a360
    type <pointer_type 0x7f7a9ba81888
        type <record_type 0x7f7a9ba817e0 BIO VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba81888>>
        unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba966c0 in>
    def_stmt in_8 = (struct BIO *) _2;
    version:8
    ptr-info 0x7f7a9ba91ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load========= [0m
[40;42m =======pre_check_funciton:certify_spkac========= [0m
[40;42m =======start_check_funciton:certify_spkac========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba914f8 type <pointer_type 0x7f7a9ba86498> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf59c18
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba961b0 parms>
    def_stmt parms_19 = CONF_load (0B, infile_17(D), &errline);
    version:19
    ptr-info 0x7f7a9ba919f0>
# .MEM_37 = VDEF <.MEM_36(D)>
parms_19 = CONF_load (0B, infile_17(D), &errline);

 ================== trace ptable================== 
trace fucntion name:CONF_load 
[40;44m =======trace_function_path CONF_load  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:CONF_load========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;46m =======add node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;46m =======add node_fun stack:CONF_load_bio========= [0m
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :889========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :890========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :891========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :892========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;46m =======add node_fun stack:BIO_new_file========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_load-----
this other function ------CONF_load-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36(D)>
parms_19 = CONF_load (0B, infile_17(D), &errline);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
parms_19 = CONF_load (0B, infile_17(D), &errline);
./benchmarks/openssl/double_free_5/openssl_df_5.c:251:13: warning: use location
  251 |     parms = CONF_load(NULL, infile, &errline);
      |             ^
this stmt is child function---CONF_load-----

 ================== trace ================== 
trace fucntion name:CONF_load 
[40;44m =======trace_function_path CONF_load  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:CONF_load========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;46m =======add node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;46m =======add node_fun stack:CONF_load_bio========= [0m
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;46m =======add node_fun stack:BIO_new_file========= [0m

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
  289 |     CONF_free(parms);   /* double-free */
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
  258 |         CONF_free(parms);       /* freed */
      |         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
sk_21 = CONF_get_section (parms_19, "default");
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:10: warning: use location
  256 |     sk = CONF_get_section(parms, "default");
      |          ^
this stmt is child function---CONF_get_section-----

 ================== trace ================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with parms ========= [0m
[40;36m ======= relate stmt argument:parms ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sk_CONF_VALUE_value (sk_21, i_13);
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (long int) _3;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_25 = (struct CONF_VALUE *) _4;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_26 = cv_25->name;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_11 = PHI <buf_26(7), buf_28(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_12 = PHI <buf_29(10), buf_11(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion certify_spkac basic block 13
 ================== possible direct basic block ================= 
from certify_spkac basic block 14
 ================== possible direct basic block ================= 
from certify_spkac basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
if (_9 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
Cond in fucntion certify_spkac basic block 12
 ================== possible direct basic block ================= 
from certify_spkac basic block 8
 ================== possible direct basic block ================= 
from certify_spkac basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                ^
if (_8 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion certify_spkac basic block 9
 ================== possible direct basic block ================= 
from certify_spkac basic block 10
 ================== possible direct basic block ================= 
from certify_spkac basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_33 = i_13 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
  266 |     for (i = 0;; i++) {
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
  267 |         if (sk_CONF_VALUE_num(sk) <= i)
      |             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_1 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_19 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (parms_19 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
  252 |     if (parms == NULL) {
      |        ^
if (parms_19 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion certify_spkac basic block 2
 ================== possible direct basic block ================= 
from certify_spkac basic block 3
 ================== possible direct basic block ================= 
from certify_spkac basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf59c18
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba961b0 parms>
    def_stmt parms_19 = CONF_load (0B, infile_17(D), &errline);
    version:19
    ptr-info 0x7f7a9ba919f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>
# .MEM_38 = VDEF <.MEM_37>
sk_21 = CONF_get_section (parms_19, "default");

 ================== trace ptable================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :890========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :891========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :892========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_get_section-----
this other function ------CONF_get_section-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
  289 |     CONF_free(parms);   /* double-free */
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
  258 |         CONF_free(parms);       /* freed */
      |         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
sk_21 = CONF_get_section (parms_19, "default");
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:10: warning: use location
  256 |     sk = CONF_get_section(parms, "default");
      |          ^
this stmt is child function---CONF_get_section-----

 ================== trace ================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sk_CONF_VALUE_value (sk_21, i_13);
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (long int) _3;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_25 = (struct CONF_VALUE *) _4;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_26 = cv_25->name;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_11 = PHI <buf_26(7), buf_28(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_12 = PHI <buf_29(10), buf_11(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion certify_spkac basic block 13
 ================== possible direct basic block ================= 
from certify_spkac basic block 14
 ================== possible direct basic block ================= 
from certify_spkac basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
if (_9 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
Cond in fucntion certify_spkac basic block 12
 ================== possible direct basic block ================= 
from certify_spkac basic block 8
 ================== possible direct basic block ================= 
from certify_spkac basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                ^
if (_8 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion certify_spkac basic block 9
 ================== possible direct basic block ================= 
from certify_spkac basic block 10
 ================== possible direct basic block ================= 
from certify_spkac basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_33 = i_13 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
  266 |     for (i = 0;; i++) {
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
  267 |         if (sk_CONF_VALUE_num(sk) <= i)
      |             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_1 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_19 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (parms_19 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
  252 |     if (parms == NULL) {
      |        ^
if (parms_19 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion certify_spkac basic block 2
 ================== possible direct basic block ================= 
from certify_spkac basic block 3
 ================== possible direct basic block ================= 
from certify_spkac basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>
# .MEM_38 = VDEF <.MEM_37>
sk_21 = CONF_get_section (parms_19, "default");

 ================== trace ptable================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :890========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :891========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :892========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---CONF_get_section-----
this other function ------CONF_get_section-----
 
 Start check Pointer Collect  

======================================================================
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:289:5: warning: use location
  289 |     CONF_free(parms);   /* double-free */
      |     ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
CONF_free (parms_19);
./benchmarks/openssl/double_free_5/openssl_df_5.c:258:9: warning: use location
  258 |         CONF_free(parms);       /* freed */
      |         ^
this stmt is child function---CONF_free-----

 ================== trace ================== 
trace fucntion name:CONF_free 

 ================== trace ================== 
trace fucntion free:0 
sk_21 = CONF_get_section (parms_19, "default");
./benchmarks/openssl/double_free_5/openssl_df_5.c:256:10: warning: use location
  256 |     sk = CONF_get_section(parms, "default");
      |          ^
this stmt is child function---CONF_get_section-----

 ================== trace ================== 
trace fucntion name:CONF_get_section 
[40;44m =======trace_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;46m =======add node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with sk ========= [0m
[40;36m ======= relate stmt argument:sk ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
_3 = sk_CONF_VALUE_value (sk_21, i_13);
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sk_CONF_VALUE_value (sk_21, i_13);
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^
this stmt is child function---sk_CONF_VALUE_value-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_value 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (long int) _3;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:14: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cv_25 = (struct CONF_VALUE *) _4;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cv_25 = (struct CONF_VALUE *) _4;
./benchmarks/openssl/double_free_5/openssl_df_5.c:270:12: warning: use location
  270 |         cv = sk_CONF_VALUE_value(sk, i);
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
buf_26 = cv_25->name;
bb index := 7
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_26 = cv_25->name;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:18: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_11 = PHI <buf_26(7), buf_28(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_12 = PHI <buf_29(10), buf_11(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:14: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |              ^
this stmt is child function---X509_NAME_add_entry_by_NID-----

 ================== trace ================== 
trace fucntion name:X509_NAME_add_entry_by_NID 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
  283 |         if (!X509_NAME_add_entry_by_NID(n, nid, chtype,
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:283:12: warning: use location
Cond in fucntion certify_spkac basic block 13
 ================== possible direct basic block ================= 
from certify_spkac basic block 14
 ================== possible direct basic block ================= 
from certify_spkac basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
  275 |         for (buf = cv->name; *buf; buf++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_9 != 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
if (_9 != 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:275:30: warning: use location
Cond in fucntion certify_spkac basic block 12
 ================== possible direct basic block ================= 
from certify_spkac basic block 8
 ================== possible direct basic block ================= 
from certify_spkac basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:52: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 == 46)
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                                                ^
if (_8 == 46)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:48: warning: use location
Cond in fucntion certify_spkac basic block 9
 ================== possible direct basic block ================= 
from certify_spkac basic block 10
 ================== possible direct basic block ================= 
from certify_spkac basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *buf_11;
./benchmarks/openssl/double_free_5/openssl_df_5.c:276:18: warning: use location
  276 |             if ((*buf == ':') || (*buf == ',') || (*buf == '.')) {
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
i_33 = i_13 + 1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:266:19: warning: use location
  266 |     for (i = 0;; i++) {
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_2 = sk_CONF_VALUE_num (sk_21);
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:267:13: warning: use location
  267 |         if (sk_CONF_VALUE_num(sk) <= i)
      |             ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 
_1 = sk_CONF_VALUE_num (sk_21);
./benchmarks/openssl/double_free_5/openssl_df_5.c:257:9: warning: use location
  257 |     if (sk_CONF_VALUE_num(sk) == 0) {
      |         ^
this stmt is child function---sk_CONF_VALUE_num-----

 ================== trace ================== 
trace fucntion name:sk_CONF_VALUE_num 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (parms_19 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (parms_19 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
  252 |     if (parms == NULL) {
      |        ^
if (parms_19 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:252:8: warning: use location
Cond in fucntion certify_spkac basic block 2
 ================== possible direct basic block ================= 
from certify_spkac basic block 3
 ================== possible direct basic block ================= 
from certify_spkac basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9bf59c60
    type <pointer_type 0x7f7a9ba811f8
        type <record_type 0x7f7a9ba81150 stack_st_CONF_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba811f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96240 sk>
    def_stmt sk_21 = CONF_get_section (parms_19, "default");
    version:21
    ptr-info 0x7f7a9ba91a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9bf51fc0 type <pointer_type 0x7f7a9bf6d000> constant 0>
[40;33m =======POP node_fun stack:certify_spkac========= [0m
[40;44m =======node_fun:CONF_load========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CONF_load  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:BIO_free========= [0m
[40;33m =======POP node_fun stack:BIO_free========= [0m
[40;42m =======pre add _ fucntion:CONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CONF_load_bio  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_load_bio  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
In function ‘CONF_load’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = conf_6(D)->data;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
  186 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (_3 == 0B)
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
  186 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = conf_6(D)->data;
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
  184 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
  181 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre_check_funciton:NCONF_load_bio========= [0m
[40;42m =======start_check_funciton:NCONF_load_bio========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = _CONF_new_data (conf_4(D));
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:12: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |            ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0)
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |           ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
Cond in fucntion NCONF_load_bio basic block 3
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 4
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_4(D) == 0B)
In function ‘CONF_load’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
  194 |     if (conf == NULL) {
      |        ^
if (conf_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
Cond in fucntion NCONF_load_bio basic block 2
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;33m =======POP node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre_check_funciton:CONF_load_bio========= [0m
[40;42m =======start_check_funciton:CONF_load_bio========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14dec0
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14df00
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:BIO_new_file========= [0m
[40;33m =======POP node_fun stack:BIO_new_file========= [0m
[40;42m =======pre_check_funciton:CONF_load========= [0m
[40;42m =======start_check_funciton:CONF_load========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a318
    type <pointer_type 0x7f7a9ba7a7e0
        type <integer_type 0x7f7a9ba7a738 char readonly QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba7a7e0>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e300 file>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f7a9ba91a98>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = BIO_new_file (file_6(D), "r");
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = BIO_new_file (file_6(D), "r");
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |          ^
this stmt is child function---BIO_new_file-----

 ================== trace ================== 
trace fucntion name:BIO_new_file 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_1 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
  225 |     if (in == NULL) {
      |        ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:225:8: warning: use location
Cond in fucntion CONF_load basic block 2
 ================== possible direct basic block ================= 
from CONF_load basic block 4
 ================== possible direct basic block ================= 
from CONF_load basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_2 = (long int) _1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:10: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
in_8 = (struct BIO *) _2;
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
in_8 = (struct BIO *) _2;
./benchmarks/openssl/double_free_5/openssl_df_5.c:224:8: warning: use location
  224 |     in = BIO_new_file(file, "r");
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
BIO_free (in_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a318
    type <pointer_type 0x7f7a9ba7a7e0
        type <integer_type 0x7f7a9ba7a738 char readonly QI
            size <integer_cst 0x7f7a9bf51ca8 constant 8>
            unit-size <integer_cst 0x7f7a9bf51cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9bf663f0 precision:8 min <integer_cst 0x7f7a9ba71750 -128> max <integer_cst 0x7f7a9ba71738 127>
            pointer_to_this <pointer_type 0x7f7a9ba7a7e0>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e300 file>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f7a9ba91a98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a3a8
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e280 conf>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f7a9ba91ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
BIO_free (in_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a3a8
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e280 conf>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f7a9ba91ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a360
    type <pointer_type 0x7f7a9ba81888
        type <record_type 0x7f7a9ba817e0 BIO VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba81888>>
        unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba966c0 in>
    def_stmt in_8 = (struct BIO *) _2;
    version:8
    ptr-info 0x7f7a9ba91ab0>
in_8 = (struct BIO *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
# .MEM_17 = VDEF <.MEM_16>
BIO_free (in_8);
BIO_free (in_8);
./benchmarks/openssl/double_free_5/openssl_df_5.c:230:5: warning: use location
  230 |     BIO_free(in);
      |     ^
this stmt is child function---BIO_free-----

 ================== trace ================== 
trace fucntion name:BIO_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
./benchmarks/openssl/double_free_5/openssl_df_5.c:229:12: warning: use location
  229 |     ltmp = CONF_load_bio(conf, in, eline);
      |            ^
this stmt is child function---CONF_load_bio-----

 ================== trace ================== 
trace fucntion name:CONF_load_bio 
[40;44m =======trace_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:CONF_load_bio========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;46m =======add node_fun stack:NCONF_load_bio========= [0m
[40;44m =======trace_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:NCONF_load_bio========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;46m =======add node_fun stack:_CONF_new_data========= [0m
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate stmt argument:in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;46m =======add node_fun stack:CONF_set_nconf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <0B(2), ltmp_12(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_3 = PHI <0B(2), ltmp_12(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a360
    type <pointer_type 0x7f7a9ba81888
        type <record_type 0x7f7a9ba817e0 BIO VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba81888>>
        unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba966c0 in>
    def_stmt in_8 = (struct BIO *) _2;
    version:8
    ptr-info 0x7f7a9ba91ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load========= [0m
[40;44m =======node_fun:CONF_load_bio========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CONF_load_bio  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:NCONF_load_bio========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path NCONF_load_bio  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
In function ‘CONF_load_bio’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = conf_6(D)->data;
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
  186 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (_3 == 0B)
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
  186 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = conf_6(D)->data;
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
  184 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
  181 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre_check_funciton:NCONF_load_bio========= [0m
[40;42m =======start_check_funciton:NCONF_load_bio========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = _CONF_new_data (conf_4(D));
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:12: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |            ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0)
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |           ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
Cond in fucntion NCONF_load_bio basic block 3
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 4
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_4(D) == 0B)
In function ‘CONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
  194 |     if (conf == NULL) {
      |        ^
if (conf_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
Cond in fucntion NCONF_load_bio basic block 2
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_load_bio========= [0m
[40;42m =======pre add _ fucntion:CONF_set_nconf========= [0m
[40;33m =======POP node_fun stack:CONF_set_nconf========= [0m
[40;42m =======pre_check_funciton:CONF_load_bio========= [0m
[40;42m =======start_check_funciton:CONF_load_bio========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14dec0
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:210:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f7a9c14df00
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7a9ba96a20 ctmp type <record_type 0x7f7a9ba86888 CONF>
        addressable BLK ./benchmarks/openssl/double_free_5/openssl_df_5.c:207:10 size <integer_cst 0x7f7a9bf6f078 192> unit-size <integer_cst 0x7f7a9bf6f048 24>
        align:64 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>
        chain <var_decl 0x7f7a9ba96990 ret type <integer_type 0x7f7a9bf665e8 int>
            SI ./benchmarks/openssl/double_free_5/openssl_df_5.c:208:9
            size <integer_cst 0x7f7a9bf51df8 constant 32>
            unit-size <integer_cst 0x7f7a9bf51e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f7a9ba82200 CONF_load_bio>>>
    ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 start: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11 finish: ./benchmarks/openssl/double_free_5/openssl_df_5.c:212:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_load_bio========= [0m
[40;44m =======node_fun:NCONF_load_bio========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path NCONF_load_bio  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_new_data========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
In function ‘NCONF_load_bio’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = conf_6(D)->data;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
  186 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (_3 == 0B)
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
  186 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = conf_6(D)->data;
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
  184 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
  181 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = lh_CONF_VALUE_new ();
In function ‘NCONF_load_bio’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;42m =======pre_check_funciton:NCONF_load_bio========= [0m
[40;42m =======start_check_funciton:NCONF_load_bio========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6(D)>
_1 = _CONF_new_data (conf_4(D));
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = _CONF_new_data (conf_4(D));
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:12: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |            ^
this stmt is child function---_CONF_new_data-----

 ================== trace ================== 
trace fucntion name:_CONF_new_data 
[40;44m =======trace_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_new_data========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
lh_CONF_VALUE_new this fucntion return value is heap-object 
_CONF_new_data this fucntion return value is heap-object lh_CONF_VALUE_new
[40;46m =======add node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0)
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
  198 |         if(_CONF_new_data(conf) == 0)
      |           ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:198:11: warning: use location
Cond in fucntion NCONF_load_bio basic block 3
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 4
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_4(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_4(D) == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
  194 |     if (conf == NULL) {
      |        ^
if (conf_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:194:8: warning: use location
Cond in fucntion NCONF_load_bio basic block 2
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 5
 ================== possible direct basic block ================= 
from NCONF_load_bio basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9a948
    type <pointer_type 0x7f7a9ba86930
        type <record_type 0x7f7a9ba86888 CONF BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86930>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e580 conf>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f7a9ba91b88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:NCONF_load_bio========= [0m
[40;44m =======node_fun:_CONF_new_data========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path _CONF_new_data  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
In function ‘_CONF_new_data’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
In function ‘_CONF_new_data’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;42m =======pre_check_funciton:_CONF_new_data========= [0m
[40;42m =======start_check_funciton:_CONF_new_data========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();

 ================== trace ptable================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---lh_CONF_VALUE_new-----
this other function ------lh_CONF_VALUE_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
conf_6(D)->data = _2;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
conf_6(D)->data = _2;
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:20: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_10>
_3 = conf_6(D)->data;
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = conf_6(D)->data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:17: warning: use location
  186 |         if (conf->data == NULL)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0B)
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (_3 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
  186 |         if (conf->data == NULL)
      |            ^
if (_3 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:186:12: warning: use location
Cond in fucntion _CONF_new_data basic block 4
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 5
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_8(D)>
_1 = conf_6(D)->data;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = conf_6(D)->data;
./benchmarks/openssl/double_free_5/openssl_df_5.c:184:13: warning: use location
  184 |     if (conf->data == NULL) {
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_6(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_6(D) == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
  181 |     if (conf == NULL) {
      |        ^
if (conf_6(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:181:8: warning: use location
Cond in fucntion _CONF_new_data basic block 2
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 6
 ================== possible direct basic block ================= 
from _CONF_new_data basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
_2 = lh_CONF_VALUE_new ();
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = lh_CONF_VALUE_new ();
./benchmarks/openssl/double_free_5/openssl_df_5.c:185:22: warning: use location
  185 |         conf->data = lh_CONF_VALUE_new();
      |                      ^
this stmt is child function---lh_CONF_VALUE_new-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_new 
[40;44m =======trace_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aab0
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = lh_CONF_VALUE_new ();
    version:2
    ptr-info 0x7f7a9ba91bb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_new_data========= [0m
[40;44m =======node_fun:lh_CONF_VALUE_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path lh_CONF_VALUE_new  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_new========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <ret_4(2), 0B(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘lh_CONF_VALUE_new’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <ret_4(2), 0B(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (ret_4 == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |           ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:11: warning: use location
Cond in fucntion lh_CONF_VALUE_new basic block 2
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 3
 ================== possible direct basic block ================= 
from lh_CONF_VALUE_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (24);
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
ret_4 = malloc (24);
./benchmarks/openssl/double_free_5/openssl_df_5.c:174:19: warning: use location
  174 |         if((ret = OPENSSL_zalloc(sizeof(*ret))) == NULL)        /* allocation site */
      |                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9ad38
    type <pointer_type 0x7f7a9ba83d20
        type <record_type 0x7f7a9ba83c78 CONF_VALUE BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba852f8 section> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba83d20>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7a9ba96d80 ret>
    def_stmt ret_4 = malloc (24);
    version:4
    ptr-info 0x7f7a9ba91c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7a9ba916a8 type <integer_type 0x7f7a9bf667e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:lh_CONF_VALUE_new========= [0m
[40;44m =======node_fun:CONF_get_section========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CONF_get_section  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section_values========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section_values  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4828
    type <pointer_type 0x7f7a9ba839d8
        type <record_type 0x7f7a9ba83930 OPENSSL_LHASH BLK
            size <integer_cst 0x7f7a9c0260a8 constant 1408>
            unit-size <integer_cst 0x7f7a9ba71930 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83888 fields <field_decl 0x7f7a9ba85130 b> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba839d8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8eb80 lh>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f7a9ba91dc8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section========= [0m
[40;42m =======start_check_funciton:_CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>
# VUSE <.MEM_17>
_4 = conf_7(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:9: warning: use location
  140 |     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |         ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), v_13(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_5 = PHI <0B(2), v_13(3)>
In function ‘CONF_get_section’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section_values========= [0m
[40;42m =======start_check_funciton:_CONF_get_section_values========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
v_6 = _CONF_get_section (conf_3(D), section_4(D));
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:150:9: warning: use location
  150 |     v = _CONF_get_section(conf, section);
      |         ^
this stmt is child function---_CONF_get_section-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section 
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_7 = v_6->value;
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:152:17: warning: use location
  152 |         return ((STACK_OF(CONF_VALUE) *)v->value);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), _7(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), _7(3)>
In function ‘CONF_get_section’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (v_6 != 0B)
In function ‘CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
  151 |     if (v != NULL)
      |        ^
if (v_6 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
Cond in fucntion _CONF_get_section_values basic block 2
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 3
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section_values========= [0m
[40;42m =======pre_check_funciton:CONF_get_section========= [0m
[40;42m =======start_check_funciton:CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9ba9aea0
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e800 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91c48>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
bb index := 4
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_7 = _CONF_get_section_values (conf_3(D), section_4(D));
./benchmarks/openssl/double_free_5/openssl_df_5.c:168:12: warning: use location
  168 |     return _CONF_get_section_values(conf, section);
      |            ^
this stmt is child function---_CONF_get_section_values-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section_values 
[40;44m =======trace_function_path _CONF_get_section_values  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section_values========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;46m =======add node_fun stack:_CONF_get_section========= [0m
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), 0B(3), _7(4)>
bb index := 5
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), 0B(3), _7(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (section_4(D) == 0B)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (section_4(D) == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:164:8: warning: use location
  164 |     if (section == NULL) {
      |        ^
if (section_4(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:164:8: warning: use location
Cond in fucntion CONF_get_section basic block 3
 ================== possible direct basic block ================= 
from CONF_get_section basic block 5
 ================== possible direct basic block ================= 
from CONF_get_section basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (conf_3(D) == 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (conf_3(D) == 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
  160 |     if (conf == NULL) {
      |        ^
if (conf_3(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:160:8: warning: use location
Cond in fucntion CONF_get_section basic block 2
 ================== possible direct basic block ================= 
from CONF_get_section basic block 5
 ================== possible direct basic block ================= 
from CONF_get_section basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9ba9aea0
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e800 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91c48>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CONF_get_section========= [0m
[40;44m =======node_fun:_CONF_get_section_values========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path _CONF_get_section_values  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:_CONF_get_section========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _CONF_get_section  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4828
    type <pointer_type 0x7f7a9ba839d8
        type <record_type 0x7f7a9ba83930 OPENSSL_LHASH BLK
            size <integer_cst 0x7f7a9c0260a8 constant 1408>
            unit-size <integer_cst 0x7f7a9ba71930 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83888 fields <field_decl 0x7f7a9ba85130 b> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba839d8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8eb80 lh>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f7a9ba91dc8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section========= [0m
[40;42m =======start_check_funciton:_CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>
# VUSE <.MEM_17>
_4 = conf_7(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
In function ‘_CONF_get_section_values’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:9: warning: use location
  140 |     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |         ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), v_13(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_5 = PHI <0B(2), v_13(3)>
In function ‘_CONF_get_section_values’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section_values========= [0m
[40;42m =======start_check_funciton:_CONF_get_section_values========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
v_6 = _CONF_get_section (conf_3(D), section_4(D));
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
v_6 = _CONF_get_section (conf_3(D), section_4(D));
./benchmarks/openssl/double_free_5/openssl_df_5.c:150:9: warning: use location
  150 |     v = _CONF_get_section(conf, section);
      |         ^
this stmt is child function---_CONF_get_section-----

 ================== trace ================== 
trace fucntion name:_CONF_get_section 
[40;44m =======trace_function_path _CONF_get_section  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:_CONF_get_section========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;46m =======add node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with conf ========= [0m
[40;36m ======= relate stmt argument:conf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_7 = v_6->value;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_7 = v_6->value;
./benchmarks/openssl/double_free_5/openssl_df_5.c:152:17: warning: use location
  152 |         return ((STACK_OF(CONF_VALUE) *)v->value);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = PHI <0B(2), _7(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_1 = PHI <0B(2), _7(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (v_6 != 0B)
bb index := 2
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (v_6 != 0B)
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
  151 |     if (v != NULL)
      |        ^
if (v_6 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/double_free_5/openssl_df_5.c:151:8: warning: use location
Cond in fucntion _CONF_get_section_values basic block 2
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 3
 ================== possible direct basic block ================= 
from _CONF_get_section_values basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4090
    type <pointer_type 0x7f7a9ba861f8
        type <record_type 0x7f7a9ba86150 CONF readonly BLK
            size <integer_cst 0x7f7a9bf6f078 constant 192>
            unit-size <integer_cst 0x7f7a9bf6f048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83bd0 fields <field_decl 0x7f7a9ba854c0 meth> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba861f8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8e900 conf>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f7a9ba91ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section_values========= [0m
[40;44m =======node_fun:_CONF_get_section========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path _CONF_get_section  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4828
    type <pointer_type 0x7f7a9ba839d8
        type <record_type 0x7f7a9ba83930 OPENSSL_LHASH BLK
            size <integer_cst 0x7f7a9c0260a8 constant 1408>
            unit-size <integer_cst 0x7f7a9ba71930 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83888 fields <field_decl 0x7f7a9ba85130 b> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba839d8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8eb80 lh>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f7a9ba91dc8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======pre_check_funciton:_CONF_get_section========= [0m
[40;42m =======start_check_funciton:_CONF_get_section========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>
# VUSE <.MEM_17>
_4 = conf_7(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_45>
return -1;
In function ‘_CONF_get_section’:
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
  290 |     return (ok);
      |            ^
beacuse in succ := 16 have return or exit
# VUSE <.MEM_45>
return -1;
./benchmarks/openssl/double_free_5/openssl_df_5.c:290:12: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_5>
return _2;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_7>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);
./benchmarks/openssl/double_free_5/openssl_df_5.c:140:9: warning: use location
  140 |     v = lh_CONF_VALUE_retrieve(conf->data, &vv);
      |         ^
this stmt is child function---lh_CONF_VALUE_retrieve-----

 ================== trace ================== 
trace fucntion name:lh_CONF_VALUE_retrieve 
[40;44m =======trace_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;46m =======add node_fun stack:getrn========= [0m
[40;44m =======trace_function_path getrn  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:getrn========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), v_13(3)>
bb index := 4
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
  110 |     return (ret);
      |            ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_49>
return ret_22;
./benchmarks/openssl/double_free_5/openssl_df_5.c:110:12: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
_5 = PHI <0B(2), v_13(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7a9baa4318
    type <pointer_type 0x7f7a9ba86498
        type <record_type 0x7f7a9ba863f0 lhash_st_CONF_VALUE DI
            size <integer_cst 0x7f7a9bf51bb8 constant 64>
            unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba863f0 fields <field_decl 0x7f7a9ba85720 dummy> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba86498>>
        public unsigned DI size <integer_cst 0x7f7a9bf51bb8 64> unit-size <integer_cst 0x7f7a9bf51bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = conf_7(D)->data;
    version:4
    ptr-info 0x7f7a9ba91d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_CONF_get_section========= [0m
[40;44m =======node_fun:lh_CONF_VALUE_retrieve========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path lh_CONF_VALUE_retrieve  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:getrn========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
[40;42m =======pre_check_funciton:lh_CONF_VALUE_retrieve========= [0m
[40;42m =======start_check_funciton:lh_CONF_VALUE_retrieve========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7a9baa4828
    type <pointer_type 0x7f7a9ba839d8
        type <record_type 0x7f7a9ba83930 OPENSSL_LHASH BLK
            size <integer_cst 0x7f7a9c0260a8 constant 1408>
            unit-size <integer_cst 0x7f7a9ba71930 constant 176>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f7a9ba83888 fields <field_decl 0x7f7a9ba85130 b> context <translation_unit_decl 0x7f7a9bf5c168 ./benchmarks/openssl/double_free_5/openssl_df_5.c>
            pointer_to_this <pointer_type 0x7f7a9ba839d8>>
        public unsigned DI
        size <integer_cst 0x7f7a9bf51bb8 constant 64>
        unit-size <integer_cst 0x7f7a9bf51bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f7a9ba8eb80 lh>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f7a9ba91dc8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:lh_CONF_VALUE_retrieve========= [0m
[40;44m =======node_fun:getrn========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path getrn  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:getrn========= [0m
[40;42m =======start_check_funciton:getrn========= [0m
[40;33m =======POP node_fun stack:getrn========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = (long unsigned int) argc_3(D);
_2 = *argv_5(D);
certify_spkac (_2, _1);
return 0;

=======Mapping node_fun:certify_spkac=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 23356714]:
parms_19 = CONF_load (0B, infile_17(D), &errline);
if (parms_19 == 0B)
  goto <bb 3>; [30.95%]
else
  goto <bb 4>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 7228903]:
// predicted unlikely by goto predictor.
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 16127811]:
sk_21 = CONF_get_section (parms_19, "default");
_1 = sk_CONF_VALUE_num (sk_21);
if (_1 == 0)
  goto <bb 5>; [20.24%]
else
  goto <bb 17>; [79.76%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 12863542]:
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 3264269]:
CONF_free (parms_19);
// predicted unlikely by goto predictor.
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 120248121]:
# i_13 = PHI <0(17), i_33(15)>
_2 = sk_CONF_VALUE_num (sk_21);
if (_2 <= i_13)
  goto <bb 16>; [5.50%]
else
  goto <bb 7>; [94.50%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 113634474]:
_3 = sk_CONF_VALUE_value (sk_21, i_13);
_4 = (long int) _3;
cv_25 = (struct CONF_VALUE *) _4;
buf_26 = cv_25->name;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1034442874]:
_27 = *buf_11;
_5 = _27 == 58;
_6 = _27 == 44;
_7 = _5 | _6;
if (_7 != 0)
  goto <bb 10>; [3.66%]
else
  goto <bb 9>; [96.34%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 996582264]:
_8 = *buf_11;
if (_8 == 46)
  goto <bb 10>; [3.66%]
else
  goto <bb 11>; [96.34%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 74335522]:
buf_29 = buf_11 + 1;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 960107351]:
buf_28 = buf_11 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# buf_11 = PHI <buf_26(7), buf_28(11)>
_9 = *buf_11;
if (_9 != 0)
  goto <bb 8>; [96.34%]
else
  goto <bb 13>; [3.66%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 113634475]:
# buf_12 = PHI <buf_29(10), buf_11(12)>
_10 = X509_NAME_add_entry_by_NID (0B, nid_30(D), chtype_31(D), buf_12, -1, -1, 0);
if (_10 == 0)
  goto <bb 14>; [5.50%]
else
  goto <bb 15>; [94.50%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 6249896]:
// predicted unlikely by goto predictor.
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 107384578]:
i_33 = i_13 + 1;
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 23356715]:
end:
CONF_free (parms_19);
errline ={v} {CLOBBER};
return -1;

=======Mapping node_fun:CONF_load=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = BIO_new_file (file_6(D), "r");
_2 = (long int) _1;
in_8 = (struct BIO *) _2;
if (_1 == 0)
  goto <bb 4>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370897]:
ltmp_12 = CONF_load_bio (conf_9(D), in_8, eline_10(D));
BIO_free (in_8);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _3 = PHI <0B(2), ltmp_12(3)>
return _3;

=======Mapping node_fun:CONF_load_bio=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
CONF_set_nconf (&ctmp, conf_3(D));
ret_8 = NCONF_load_bio (&ctmp, bp_5(D), eline_6(D));
if (ret_8 != 0)
  goto <bb 3>; [55.78%]
else
  goto <bb 4>; [44.22%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 598933193]:
_9 = ctmp.data;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <0B(2), _9(3)>
ctmp ={v} {CLOBBER};
return _1;

=======Mapping node_fun:NCONF_load_bio=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (conf_4(D) == 0B)
  goto <bb 5>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418728]:
_1 = _CONF_new_data (conf_4(D));
if (_1 == 0)
  goto <bb 4>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 252082370]:

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _2 = PHI <0(2), 1(3), 0(4)>
return _2;

=======Mapping node_fun:_CONF_new_data=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (conf_6(D) == 0B)
  goto <bb 6>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = conf_6(D)->data;
if (_1 == 0B)
  goto <bb 4>; [17.43%]
else
  goto <bb 6>; [82.57%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 153297186]:
_2 = lh_CONF_VALUE_new ();
conf_6(D)->data = _2;
_3 = conf_6(D)->data;
if (_3 == 0B)
  goto <bb 5>; [18.09%]
else
  goto <bb 6>; [81.91%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 27731461]:

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _4 = PHI <0(2), 1(3), 1(4), 0(5)>
return _4;

=======Mapping node_fun:lh_CONF_VALUE_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_4 = malloc (24);
if (ret_4 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <ret_4(2), 0B(3)>
return _1;

=======Mapping node_fun:CONF_get_section=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (conf_3(D) == 0B)
  goto <bb 5>; [8.27%]
else
  goto <bb 3>; [91.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 984943377]:
if (section_4(D) == 0B)
  goto <bb 5>; [15.47%]
else
  goto <bb 4>; [84.53%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 832572633]:
_7 = _CONF_get_section_values (conf_3(D), section_4(D));

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _1 = PHI <0B(2), 0B(3), _7(4)>
return _1;

=======Mapping node_fun:_CONF_get_section_values=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
v_6 = _CONF_get_section (conf_3(D), section_4(D));
if (v_6 != 0B)
  goto <bb 3>; [85.10%]
else
  goto <bb 4>; [14.90%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 913754297]:
_7 = v_6->value;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <0B(2), _7(3)>
return _1;

=======Mapping node_fun:_CONF_get_section=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = conf_7(D) == 0B;
_2 = section_8(D) == 0B;
_3 = _1 | _2;
if (_3 != 0)
  goto <bb 4>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370897]:
vv.name = 0B;
vv.section = section_8(D);
_4 = conf_7(D)->data;
v_13 = lh_CONF_VALUE_retrieve (_4, &vv);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _5 = PHI <0B(2), v_13(3)>
vv ={v} {CLOBBER};
return _5;

=======Mapping node_fun:lh_CONF_VALUE_retrieve=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
lh_10(D)->error = 0;
rn_14 = getrn (lh_10(D), data_12(D), &hash);
_1 = *rn_14;
if (_1 == 0B)
  goto <bb 3>; [8.27%]
else
  goto <bb 4>; [91.73%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 88798448]:
_2 = lh_10(D)->num_retrieve_miss;
_3 = _2 + 1;
lh_10(D)->num_retrieve_miss = _3;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 984943377]:
_4 = *rn_14;
ret_15 = _4->data;
_5 = lh_10(D)->num_retrieve;
_6 = _5 + 1;
lh_10(D)->num_retrieve = _6;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _7 = PHI <0B(3), ret_15(4)>
hash ={v} {CLOBBER};
return _7;

=======Mapping node_fun:getrn=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 87584712]:
_1 = lh_29(D)->hash;
hash_32 = _1 (data_30(D));
_2 = lh_29(D)->num_hash_calls;
_3 = _2 + 1;
lh_29(D)->num_hash_calls = _3;
*rhash_34(D) = hash_32;
_4 = lh_29(D)->pmax;
_5 = (long unsigned int) _4;
nn_36 = hash_32 % _5;
_6 = lh_29(D)->p;
_7 = (long unsigned int) _6;
if (_7 > nn_36)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 43792356]:
_8 = lh_29(D)->num_alloc_nodes;
_9 = (long unsigned int) _8;
nn_37 = hash_32 % _9;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 87584712]:
# nn_24 = PHI <nn_36(2), nn_37(3)>
cf_38 = lh_29(D)->comp;
_10 = lh_29(D)->b;
_11 = (int) nn_24;
_12 = (long unsigned int) _11;
_13 = _12 * 8;
ret_39 = _10 + _13;
n1_40 = *ret_39;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686025]:
_14 = lh_29(D)->num_hash_comps;
_15 = _14 + 1;
lh_29(D)->num_hash_comps = _15;
_16 = n1_23->hash;
if (_16 != hash_32)
  goto <bb 6>; [48.88%]
else
  goto <bb 7>; [51.12%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 495978525]:
ret_45 = &n1_23->next;
// predicted unlikely by continue predictor.
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 518707499]:
_17 = lh_29(D)->num_comp_calls;
_18 = _17 + 1;
lh_29(D)->num_comp_calls = _18;
_19 = n1_23->data;
_20 = cf_38 (_19, data_30(D));
if (_20 == 0)
  goto <bb 11>; [5.50%]
else
  goto <bb 8>; [94.50%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 490178587]:
ret_44 = &n1_23->next;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 986157113]:
# ret_21 = PHI <ret_45(6), ret_44(8)>
n1_46 = n1_23->next;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# ret_22 = PHI <ret_39(4), ret_21(9)>
# n1_23 = PHI <n1_40(4), n1_46(9)>
if (n1_23 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 87584712]:
return ret_22;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    find Entry point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 0.002400 mb[0m
[40;34m    collect time: : 0.000302 s [0m
[40;34m    algorithm time: 0.153439 s [0m
[40;34m    gimple stmt count : : 136 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine                        |      |      |      |      |     +0.2%|     +0.2%|
mergephi                         |      |      |      |      |     +0.2%|     +0.2%|
phiopt                           |      |      |      |      |     -1.0%|     -0.6%|
ch                               |      |      |      |      |     +0.2%|     -0.6%|
cplxlower                        |      |      |      |      |     +1.2%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.7%|     -0.4%|
copyprop                         |      |      |      |      |     -0.7%|     -0.4%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -48.8%|    -82.1%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts               ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +95.2%|   +457.3%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +76.0%|    +57.1%|
into_cfglayout                   |      |      |      |      |     -1.6%|     -1.0%|
jump                             |      |      |      |      |     -1.9%|     -1.5%|
subreg1                          |      |      |      |      |     -0.3%|     -0.5%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.0%|     -1.0%|
ce1                              |      |      |      |      |     -1.1%|     -0.5%|
reginfo                          |      |      |      |      |     -0.1%|     +0.5%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs                        |      |      |      |      |     +0.1%|     +0.0%|
combine                          |      |      |      |      |     +2.3%|     +2.3%|
ce2                              |      |      |      |      |     +2.1%|     +2.3%|
outof_cfglayout                  |      |      |      |      |     +1.1%|     +0.5%|
split1                           |      |      |      |      |     +1.1%|     +0.5%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.1%|     -0.0%|
reload                           |      |      |      |      |    -10.1%|    -13.4%|
postreload                       |      |      |      |      |    -11.1%|    -15.5%|
split2                           |      |      |      |      |     +0.7%|     +0.3%|
cmpelim                          |      |      |      |      |     +0.7%|     +0.3%|
pro_and_epilogue                 |      |      |      |      |    +12.0%|    +12.4%|
dse2                             |      |      |      |      |    +10.7%|    +11.1%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.1%|     -0.2%|
rtl_dce                          |      |      |      |      |     -0.1%|     -0.2%|
bbro                             |      |      |      |      |     -0.3%|     -0.0%|
split4                           |      |      |      |      |     -0.3%|     -0.0%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccUfoU1o.ltrans0.ltrans.o: in function `CONF_load_bio':
<artificial>:(.text+0x1d4): undefined reference to `CONF_set_nconf'
/usr/bin/ld: /tmp/ccUfoU1o.ltrans0.ltrans.o: in function `CONF_load':
<artificial>:(.text+0x218): undefined reference to `BIO_new_file'
/usr/bin/ld: <artificial>:(.text+0x242): undefined reference to `BIO_free'
/usr/bin/ld: /tmp/ccUfoU1o.ltrans0.ltrans.o: in function `certify_spkac':
<artificial>:(.text+0x294): undefined reference to `sk_CONF_VALUE_num'
/usr/bin/ld: <artificial>:(.text+0x2a5): undefined reference to `CONF_free'
/usr/bin/ld: <artificial>:(.text+0x2b2): undefined reference to `CONF_free'
/usr/bin/ld: <artificial>:(.text+0x2ef): undefined reference to `X509_NAME_add_entry_by_NID'
/usr/bin/ld: <artificial>:(.text+0x307): undefined reference to `sk_CONF_VALUE_num'
/usr/bin/ld: <artificial>:(.text+0x31a): undefined reference to `sk_CONF_VALUE_value'
collect2: error: ld returned 1 exit status
