../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 38%)
 phase parsing                      :   0.03 ( 75%)   0.02 (100%)   0.05 (100%)  1974k ( 57%)
 phase opt and generate             :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)   154k (  5%)
 callgraph ipa passes               :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    88k (  3%)
 ipa lto decl out                   :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)   264  (  0%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.03 ( 60%)  1082k ( 31%)
 lexical analysis                   :   0.02 ( 50%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.01 ( 25%)   0.01 ( 50%)   0.02 ( 40%)   680k ( 20%)
 TOTAL                              :   0.04          0.02          0.05         3437k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 98%)
 TOTAL                              :   0.00          0.00          0.00         2199k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
debugmod 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:ssl3_read_bytes=========
=======node_fun:ssl3_setup_read_buffer=========
=======node_fun:ssl3_release_read_buffer=========
=======node_fun:freelist_insert=========
=======node_fun:freelist_extract=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 16 
===============The second stage : Mapping stmt=================
# .MEM_14 = VDEF <.MEM_13(D)>
s_11 = malloc (48);
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (24);
# .MEM_17 = VDEF <.MEM_16>
ssl3_read_bytes (s_11, 0, "buf", 1, 0);
# .MEM_18 = VDEF <.MEM_17>
printf ("%d\n", _4);
# .MEM_20 = VDEF <.MEM_19(D)>
_3 = ssl3_setup_read_buffer (s_12(D));
# .MEM_22 = VDEF <.MEM_21>
ssl3_release_read_buffer (s_12(D));
# .MEM_21 = VDEF <.MEM_20(D)>
p_17 = freelist_extract (_4, 1, _3);
# .MEM_14 = VDEF <.MEM_13(D)>
freelist_insert (_7, 1, _6, _4);
# .MEM_32 = VDEF <.MEM_26>
result_24 = malloc (_7);
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
s_11 = malloc (48);
_1 = malloc (24);
s_11->s3 = _1;
ssl3_read_bytes (s_11, 0, "buf", 1, 0);
_2 = s_11->s3;
_3 = _2->rbuf.left;
if (_3 != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_4 = s_11->packet;
printf ("%d\n", _4);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_5 = s_11->s3;
_6 = _5->rbuf.buf;
free (_6);
_7 = s_11->s3;
free (_7);
free (s_11);
return 0;

=======Mapping node_fun:ssl3_read_bytes=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = s_12(D)->s3;
_2 = _1->rbuf.buf;
if (_2 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 4>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
_3 = ssl3_setup_read_buffer (s_12(D));
if (_3 == 0)
  goto <bb 10>; [1.04%]
else
  goto <bb 4>; [98.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1071795432]:
_4 = s_12(D)->shutdown;
_5 = _4 & 2;
if (_5 != 0)
  goto <bb 5>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 364410451]:
s_12(D)->rwstate = 1;
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 707384982]:
if (len_14(D) <= 0)
  goto <bb 10>; [26.36%]
else
  goto <bb 7>; [73.64%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 520918301]:
n_15 = (unsigned int) len_14(D);
if (peek_16(D) == 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 260459150]:
s_12(D)->rstate = 240;
_6 = s_12(D)->mode;
_7 = _6 & 16;
if (_7 != 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 85951519]:
ssl3_release_read_buffer (s_12(D));

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _8 = PHI <-1(3), 0(5), len_14(D)(6), len_14(D)(7), len_14(D)(8), len_14(D)(9)>
return _8;

=======Mapping node_fun:ssl3_setup_read_buffer=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = s_13(D)->s3;
_2 = _1->rbuf.buf;
if (_2 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 6>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
len_15 = headerlen_14(D) + 16704;
_3 = (int) len_15;
_4 = s_13(D)->ctx;
p_17 = freelist_extract (_4, 1, _3);
if (p_17 == 0B)
  goto <bb 4>; [18.09%]
else
  goto <bb 5>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 33856014]:
// predicted unlikely by goto predictor.
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 153297186]:
_5 = s_13(D)->s3;
_5->rbuf.buf = p_17;
_6 = s_13(D)->s3;
_6->rbuf.len = len_15;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1039885811]:
_7 = s_13(D)->s3;
_8 = _7->rbuf.buf;
s_13(D)->packet = _8;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# _9 = PHI <0(4), 1(6)>
return _9;

=======Mapping node_fun:ssl3_release_read_buffer=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = s_11(D)->s3;
_2 = _1->rbuf.buf;
if (_2 != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_3 = s_11(D)->s3;
_4 = _3->rbuf.buf;
_5 = s_11(D)->s3;
_6 = _5->rbuf.len;
_7 = s_11(D)->ctx;
freelist_insert (_7, 1, _6, _4);
_8 = s_11(D)->s3;
_8->rbuf.buf = 0B;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return 1;

=======Mapping node_fun:freelist_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (for_read_10(D) != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870911]:
_14 = ctx_12(D)->rbuf_freelist;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 536870911]:
_13 = ctx_12(D)->wbuf_freelist;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741823]:
# _7 = PHI <_14(3), _13(4)>
if (_7 != 0B)
  goto <bb 6>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 751619280]:
_1 = MEM[(struct SSL3_BUF_FREELIST *)_7].chunklen;
if (_1 == sz_16(D))
  goto <bb 8>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 496068721]:
_2 = MEM[(struct SSL3_BUF_FREELIST *)_7].chunklen;
if (_2 == 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 503584918]:
if (sz_16(D) > 7)
  goto <bb 9>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 251792459]:
MEM[(struct SSL3_BUF_FREELIST *)_7].chunklen = sz_16(D);
_3 = MEM[(struct SSL3_BUF_FREELIST *)_7].head;
MEM[(struct SSL3_BUF_FREELIST_ENTRY *)mem_15(D)].next = _3;
MEM[(struct SSL3_BUF_FREELIST *)_7].head = mem_15(D);
_4 = MEM[(struct SSL3_BUF_FREELIST *)_7].len;
_5 = _4 + 1;
MEM[(struct SSL3_BUF_FREELIST *)_7].len = _5;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 821949364]:
# mem_6 = PHI <mem_15(D)(5), mem_15(D)(7), mem_15(D)(8)>
if (mem_6 != 0B)
  goto <bb 11>; [53.47%]
else
  goto <bb 12>; [46.53%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 439496324]:
free (mem_6);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
return;

=======Mapping node_fun:freelist_extract=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (for_read_13(D) != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
_17 = ctx_15(D)->rbuf_freelist;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 536870913]:
_16 = ctx_15(D)->wbuf_freelist;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _10 = PHI <_17(3), _16(4)>
if (_10 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 13>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 751619281]:
_1 = MEM[(struct SSL3_BUF_FREELIST *)_10].chunklen;
_2 = (int) _1;
if (_2 == sz_18(D))
  goto <bb 9>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 255550558]:
ent_19 = MEM[(struct SSL3_BUF_FREELIST *)_10].head;
if (ent_19 != 0B)
  goto <bb 11>; [70.00%]
else
  goto <bb 14>; [30.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 178885391]:
_3 = ent_19->next;
MEM[(struct SSL3_BUF_FREELIST *)_10].head = _3;
_4 = MEM[(struct SSL3_BUF_FREELIST *)_10].len;
_5 = _4 + 4294967295;
MEM[(struct SSL3_BUF_FREELIST *)_10].len = _5;
_6 = MEM[(struct SSL3_BUF_FREELIST *)_10].len;
if (_6 == 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 89442696]:
MEM[(struct SSL3_BUF_FREELIST *)_10].chunklen = 0;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 501007935]:
# result_8 = PHI <0B(5), ent_19(11), ent_19(12)>
if (result_8 == 0B)
  goto <bb 14>; [30.00%]
else
  goto <bb 15>; [70.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 723036269]:
_7 = (long unsigned int) sz_18(D);
result_24 = malloc (_7);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 1073741824]:
# result_9 = PHI <result_8(13), result_24(14)>
return result_9;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    all ptable point : 16 [0m
[40;34m    analyzable ptable point : 12 [0m
[40;34m    analyzable ptable all point stmt : 40 [0m
[40;34m    used_stmt array stack totalsize of : 0.001352 mb[0m
[40;34m    collect time: : 0.000232 s [0m
[40;34m    mapping time: : 0.000408 s [0m
[40;34m    algorithm time: 0.001482 s [0m
[40;34m    gimple stmt count : : 103 [0m
[40;34m    this report analysis in Sun Jun 26 13:53:31 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 80%)
 phase opt and generate             :   0.02 (100%)   0.01 (100%)   0.02 ( 67%)   492k ( 18%)
 phase stream in                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)    38k (  1%)
 callgraph functions expansion      :   0.02 (100%)   0.01 (100%)   0.02 ( 67%)   380k ( 14%)
 ipa lto decl in                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)    31k (  1%)
 expand                             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)    49k (  2%)
 LRA non-specific                   :   0.01 ( 50%)   0.01 (100%)   0.00 (  0%)  1024  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)  2128  (  0%)
 rest of compilation                :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)    14k (  1%)
 TOTAL                              :   0.02          0.01          0.03         2690k
