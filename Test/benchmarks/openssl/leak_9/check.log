./benchmarks/openssl/leak_9/openssl_leak_9.c: In function â€˜OSSL_STORE_LOADER_newâ€™:
./benchmarks/openssl/leak_9/openssl_leak_9.c:128:9: warning: implicit declaration of function â€˜OSSL_STOREerrâ€™ [-Wimplicit-function-declaration]
         OSSL_STOREerr(OSSL_STORE_F_OSSL_STORE_LOADER_NEW, ERR_R_MALLOC_FAILURE);
         ^~~~~~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_17 = VDEF <.MEM_8(D)>
res_13 = malloc (64);
# .MEM_20 = VDEF <.MEM_17>
OSSL_STOREerr (113, 65);
# .MEM_10 = VDEF <.MEM_16>
_7 = __printf_chk (1, "%s", _1);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:OSSL_STOREerr========= [0m
[40;33m =======POP node_fun stack:OSSL_STOREerr========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb5e57a1d38
    type <pointer_type 0x7fb5e52ca930
        type <record_type 0x7fb5e52ca498 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7fb5e57b5030 constant 512>
            unit size <integer_cst 0x7fb5e5852c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fb5e52ca540 fields <field_decl 0x7fb5e52c5da8 scheme> context <translation_unit_decl 0x7fb5e57a4168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7fb5e52ca930> chain <type_decl 0x7fb5e52cb000 D.4010>>
        public unsigned DI
        size <integer_cst 0x7fb5e5799be8 constant 64>
        unit size <integer_cst 0x7fb5e5799c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb5e52da1b0 res>
    def_stmt res_13 = malloc (64);
    version 13
    ptr-info 0x7fb5e52c6d98>
# .MEM_17 = VDEF <.MEM_8(D)>
res_13 = malloc (64);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <0B(3), res_13(4)>
bb index := 5
# VUSE <.MEM_12>
return 0;
In function â€˜mainâ€™:
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <0B(3), res_13(4)>
bb index := 5
# VUSE <.MEM_12>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================
_15 = PHI <0B(3), res_13(4)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = _15;
bb index := 5
# VUSE <.MEM_12>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_21 = _15;
bb index := 5
# VUSE <.MEM_12>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================
_21 = _15;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = res_13;
bb index := 4
# VUSE <.MEM_12>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_14 = res_13;
./benchmarks/openssl/leak_9/openssl_leak_9.c:146:12: warning: use location
     return res;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
res_13->scheme = "scheme";
bb index := 4
# VUSE <.MEM_12>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
res_13->scheme = "scheme";
./benchmarks/openssl/leak_9/openssl_leak_9.c:145:17: warning: use location
     res->scheme = scheme;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
res_13->engine = &e;
bb index := 4
# VUSE <.MEM_12>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
res_13->engine = &e;
./benchmarks/openssl/leak_9/openssl_leak_9.c:144:17: warning: use location
     res->engine = e;
                 ^
if (res_13 == 0B)
./benchmarks/openssl/leak_9/openssl_leak_9.c:127:8: warning: use location
     if (res == NULL) {
        ^
if (res_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssl/leak_9/openssl_leak_9.c:127:8: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
res_13 = malloc (64);
./benchmarks/openssl/leak_9/openssl_leak_9.c:125:24: warning: use location
     OSSL_STORE_LOADER *res = OPENSSL_zalloc(sizeof(*res)); /* allocation site */
                        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb5e57a1d38
    type <pointer_type 0x7fb5e52ca930
        type <record_type 0x7fb5e52ca498 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7fb5e57b5030 constant 512>
            unit size <integer_cst 0x7fb5e5852c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fb5e52ca540 fields <field_decl 0x7fb5e52c5da8 scheme> context <translation_unit_decl 0x7fb5e57a4168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7fb5e52ca930> chain <type_decl 0x7fb5e52cb000 D.4010>>
        public unsigned DI
        size <integer_cst 0x7fb5e5799be8 constant 64>
        unit size <integer_cst 0x7fb5e5799c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb5e52da1b0 res>
    def_stmt res_13 = malloc (64);
    version 13
    ptr-info 0x7fb5e52c6d98>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb5e57a1d38
    type <pointer_type 0x7fb5e52ca930
        type <record_type 0x7fb5e52ca498 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7fb5e57b5030 constant 512>
            unit size <integer_cst 0x7fb5e5852c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fb5e52ca540 fields <field_decl 0x7fb5e52c5da8 scheme> context <translation_unit_decl 0x7fb5e57a4168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7fb5e52ca930> chain <type_decl 0x7fb5e52cb000 D.4010>>
        public unsigned DI
        size <integer_cst 0x7fb5e5799be8 constant 64>
        unit size <integer_cst 0x7fb5e5799c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb5e52da1b0 res>
    def_stmt res_13 = malloc (64);
    version 13
    ptr-info 0x7fb5e52c6d98>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:2: warning: use location
  OPENSSL_free(new);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:2: warning: Use after free error!: free location 
_15 = PHI <0B(3), res_13(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb5e52c6cf0 type <integer_type 0x7fb5e57ad7e0 long unsigned int> constant 64>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb5e52c6d08 type <integer_type 0x7fb5e57ad5e8 int> constant 113>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb5e5799f90 type <integer_type 0x7fb5e57ad5e8 int> constant 1>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
res_13 = malloc (64);
if (res_13 == 0B)
  goto <bb 3>; [2.05%]
else
  goto <bb 4>; [97.95%]

=======is loop:0=========

 bb index 3 
<bb 3> [2.05%]:
OSSL_STOREerr (113, 65);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [97.95%]:
res_13->engine = &e;
res_13->scheme = "scheme";
_14 = res_13;

=======is loop:0=========

 bb index 5 
<bb 5> [100.00%]:
# _15 = PHI <0B(3), res_13(4)>
_21 = _15;
new_4 = _21;
_1 = new_4->scheme;
_7 = __printf_chk (1, "%s", _1);
free (new_4);
e ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 1 [0m
[40;34m    used_stmt array stack totalsize of : 168 [0m
[40;34m    collect time: : 0.000047 s [0m
[40;34m    algorithm time: 0.001452 s [0m
[40;34m    gimple stmt count : : 13 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/cc2bttLN.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x86): undefined reference to `OSSL_STOREerr'
collect2: error: ld returned 1 exit status
