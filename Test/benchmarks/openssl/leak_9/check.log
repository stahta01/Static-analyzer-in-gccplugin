../Compiler/newplugin.so 11.2.0 
./benchmarks/openssl/leak_9/openssl_leak_9.c: In function â€˜OSSL_STORE_LOADER_newâ€™:
./benchmarks/openssl/leak_9/openssl_leak_9.c:128:9: warning: implicit declaration of function â€˜OSSL_STOREerrâ€™ [-Wimplicit-function-declaration]
  128 |         OSSL_STOREerr(OSSL_STORE_F_OSSL_STORE_LOADER_NEW, ERR_R_MALLOC_FAILURE);
      |         ^~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1298k ( 38%)
 phase parsing                      :   0.03 ( 75%)   0.02 (100%)   0.05 ( 83%)  2053k ( 60%)
 phase opt and generate             :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    36k (  1%)
 callgraph construction             :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)  4560  (  0%)
 preprocessing                      :   0.01 ( 25%)   0.01 ( 50%)   0.01 ( 17%)  1082k ( 32%)
 lexical analysis                   :   0.01 ( 25%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.01 ( 25%)   0.00 (  0%)   0.02 ( 33%)   801k ( 24%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   102k (  3%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  8896  (  0%)
 TOTAL                              :   0.04          0.02          0.06         3397k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 98%)
 TOTAL                              :   0.00          0.00          0.01         2194k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 2 
===============The second stage : Mapping stmt=================
# .MEM_13 = VDEF <.MEM_5(D)>
res_10 = malloc (64);
# .MEM_16 = VDEF <.MEM_13>
OSSL_STOREerr (113, 65);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
res_10 = malloc (64);
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:OSSL_STOREerr========= [0m
[40;33m =======POP node_fun stack:OSSL_STOREerr========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f6190295990
    type <pointer_type 0x7f618fdad0a8
        type <record_type 0x7f618fdad000 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7f61902ab000 constant 512>
            unit-size <integer_cst 0x7f6190362090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f618fdacf18 fields <field_decl 0x7f618fda8558 scheme> context <translation_unit_decl 0x7f6190298168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7f618fdad0a8>>
        public unsigned DI
        size <integer_cst 0x7f619028dbb8 constant 64>
        unit-size <integer_cst 0x7f619028dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f618fdbb3f0 res>
    def_stmt res_10 = malloc (64);
    version:10
    ptr-info 0x7f618fdb3318>
# .MEM_13 = VDEF <.MEM_5(D)>
res_10 = malloc (64);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_11 = PHI <0B(3), res_10(4)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_17 = _11;
lto1: warning: use location
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: use location
  154 |         OPENSSL_free(new);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_1 = new_4->scheme;
./benchmarks/openssl/leak_9/openssl_leak_9.c:153:9: warning: use location
  153 |         printf("%s", new->scheme);
      |         ^
printf ("%s", _1);
./benchmarks/openssl/leak_9/openssl_leak_9.c:153:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
res_10->scheme = "scheme";
./benchmarks/openssl/leak_9/openssl_leak_9.c:145:17: warning: use location
  145 |     res->scheme = scheme;
      |                 ^
res_10->scheme = "scheme";
./benchmarks/openssl/leak_9/openssl_leak_9.c:145:17: warning: use location
res_10->engine = &e;
./benchmarks/openssl/leak_9/openssl_leak_9.c:144:17: warning: use location
  144 |     res->engine = e;
      |                 ^
if (res_10 == 0B)
./benchmarks/openssl/leak_9/openssl_leak_9.c:127:8: warning: use location
  127 |     if (res == NULL) {
      |        ^
# .MEM_13 = VDEF <.MEM_5(D)>
res_10 = malloc (64);
res_10 = malloc (64);
./benchmarks/openssl/leak_9/openssl_leak_9.c:125:30: warning: use location
  125 |     OSSL_STORE_LOADER *res = OPENSSL_zalloc(sizeof(*res));      /* allocation site */
      |                              ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f6190295990
    type <pointer_type 0x7f618fdad0a8
        type <record_type 0x7f618fdad000 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7f61902ab000 constant 512>
            unit-size <integer_cst 0x7f6190362090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f618fdacf18 fields <field_decl 0x7f618fda8558 scheme> context <translation_unit_decl 0x7f6190298168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7f618fdad0a8>>
        public unsigned DI
        size <integer_cst 0x7f619028dbb8 constant 64>
        unit-size <integer_cst 0x7f619028dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f618fdbb3f0 res>
    def_stmt res_10 = malloc (64);
    version:10
    ptr-info 0x7f618fdb3318>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: use location
  154 |         OPENSSL_free(new);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_11 = PHI <0B(3), res_10(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_11 = PHI <0B(3), res_10(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f6190295990
    type <pointer_type 0x7f618fdad0a8
        type <record_type 0x7f618fdad000 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7f61902ab000 constant 512>
            unit-size <integer_cst 0x7f6190362090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f618fdacf18 fields <field_decl 0x7f618fda8558 scheme> context <translation_unit_decl 0x7f6190298168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7f618fdad0a8>>
        public unsigned DI
        size <integer_cst 0x7f619028dbb8 constant 64>
        unit-size <integer_cst 0x7f619028dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f618fdbb3f0 res>
    def_stmt res_10 = malloc (64);
    version:10
    ptr-info 0x7f618fdb3318>
# .MEM_13 = VDEF <.MEM_5(D)>
res_10 = malloc (64);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_11 = PHI <0B(3), res_10(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_17 = _11;
lto1: warning: use location
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_1 = new_4->scheme;
./benchmarks/openssl/leak_9/openssl_leak_9.c:153:9: warning: use location
  153 |         printf("%s", new->scheme);
      |         ^
printf ("%s", _1);
./benchmarks/openssl/leak_9/openssl_leak_9.c:153:9: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
res_10->scheme = "scheme";
./benchmarks/openssl/leak_9/openssl_leak_9.c:145:17: warning: use location
  145 |     res->scheme = scheme;
      |                 ^
res_10->scheme = "scheme";
./benchmarks/openssl/leak_9/openssl_leak_9.c:145:17: warning: use location
res_10->engine = &e;
./benchmarks/openssl/leak_9/openssl_leak_9.c:144:17: warning: use location
  144 |     res->engine = e;
      |                 ^
if (res_10 == 0B)
./benchmarks/openssl/leak_9/openssl_leak_9.c:127:8: warning: use location
  127 |     if (res == NULL) {
      |        ^
# .MEM_13 = VDEF <.MEM_5(D)>
res_10 = malloc (64);
res_10 = malloc (64);
./benchmarks/openssl/leak_9/openssl_leak_9.c:125:30: warning: use location
  125 |     OSSL_STORE_LOADER *res = OPENSSL_zalloc(sizeof(*res));      /* allocation site */
      |                              ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f6190295990
    type <pointer_type 0x7f618fdad0a8
        type <record_type 0x7f618fdad000 OSSL_STORE_LOADER BLK
            size <integer_cst 0x7f61902ab000 constant 512>
            unit-size <integer_cst 0x7f6190362090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f618fdacf18 fields <field_decl 0x7f618fda8558 scheme> context <translation_unit_decl 0x7f6190298168 ./benchmarks/openssl/leak_9/openssl_leak_9.c>
            pointer_to_this <pointer_type 0x7f618fdad0a8>>
        public unsigned DI
        size <integer_cst 0x7f619028dbb8 constant 64>
        unit-size <integer_cst 0x7f619028dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f618fdbb3f0 res>
    def_stmt res_10 = malloc (64);
    version:10
    ptr-info 0x7f618fdb3318>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: use location
  154 |         OPENSSL_free(new);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_11 = PHI <0B(3), res_10(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (new_4);
./benchmarks/openssl/leak_9/openssl_leak_9.c:154:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_11 = PHI <0B(3), res_10(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
res_10 = malloc (64);
if (res_10 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
OSSL_STOREerr (113, 65);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
res_10->engine = &e;
res_10->scheme = "scheme";

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _11 = PHI <0B(3), res_10(4)>
_17 = _11;
new_4 = _17;
_1 = new_4->scheme;
printf ("%s", _1);
free (new_4);
e ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 3 [0m
[40;34m    analyzable ptable point : 1 [0m
[40;34m    used_stmt array stack totalsize of : 0.000152 mb[0m
[40;34m    collect time: : 0.000346 s [0m
[40;34m    algorithm time: 0.004320 s [0m
[40;34m    gimple stmt count : : 12 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:58 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 94%)
 phase opt and generate             :   0.01 (100%)   0.01 (100%)   0.02 (100%)   101k (  4%)
 callgraph functions expansion      :   0.00 (  0%)   0.01 (100%)   0.01 ( 50%)    64k (  3%)
 ipa lto gimple in                  :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)    27k (  1%)
 dominator optimization             :   0.00 (  0%)   0.01 (100%)   0.00 (  0%)  1240  (  0%)
 CSE                                :   0.00 (  0%)   0.00 (  0%)   0.01 ( 50%)     0  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 50%)   160  (  0%)
 TOTAL                              :   0.01          0.01          0.02         2294k
/usr/bin/ld: /tmp/ccEb5aEi.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x4f): undefined reference to `OSSL_STOREerr'
collect2: error: ld returned 1 exit status
