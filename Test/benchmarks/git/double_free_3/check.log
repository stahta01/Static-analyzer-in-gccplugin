In file included from ./benchmarks/git/double_free_3/git_df_3.c:10:0:
./benchmarks/git/double_free_3/../git.h: In function ‘copy_array’:
./benchmarks/git/double_free_3/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/double_free_3/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/double_free_3/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_3/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/double_free_3/../git.h: In function ‘move_array’:
./benchmarks/git/double_free_3/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/double_free_3/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/double_free_3/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/double_free_3/git_df_3.c:9:0:
./benchmarks/git/double_free_3/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/double_free_3/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/double_free_3/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/double_free_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/double_free_3/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/double_free_3/git_df_3.c:10:0:
./benchmarks/git/double_free_3/../git.h: At top level:
./benchmarks/git/double_free_3/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/double_free_3/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/double_free_3/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/double_free_3/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/double_free_3/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/double_free_3/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/double_free_3/git_df_3.c: In function ‘strbuf_grow’:
./benchmarks/git/double_free_3/../git.h:112:8: warning: implicit declaration of function ‘alloc_nr’; did you mean ‘alloca’? [-Wimplicit-function-declaration]
    if (alloc_nr(alloc) < (nr)) \
        ^
./benchmarks/git/double_free_3/git_df_3.c:210:2: note: in expansion of macro ‘ALLOC_GROW’
  ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);
  ^~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c: In function ‘strbuf_add’:
./benchmarks/git/double_free_3/git_df_3.c:233:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(sb->buf + sb->len, data, len);
  ^~~~~~
./benchmarks/git/double_free_3/git_df_3.c:233:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_3/git_df_3.c:234:2: warning: implicit declaration of function ‘strbuf_setlen’; did you mean ‘strbuf_detach’? [-Wimplicit-function-declaration]
  strbuf_setlen(sb, sb->len + len);
  ^~~~~~~~~~~~~
  strbuf_detach
./benchmarks/git/double_free_3/git_df_3.c: At top level:
./benchmarks/git/double_free_3/git_df_3.c:237:20: warning: conflicting types for ‘strbuf_setlen’
 static inline void strbuf_setlen(struct strbuf *sb, size_t len) {
                    ^~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:237:20: error: static declaration of ‘strbuf_setlen’ follows non-static declaration
./benchmarks/git/double_free_3/git_df_3.c:234:2: note: previous implicit declaration of ‘strbuf_setlen’ was here
  strbuf_setlen(sb, sb->len + len);
  ^~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c: In function ‘strbuf_setlen’:
./benchmarks/git/double_free_3/git_df_3.c:240:2: warning: implicit declaration of function ‘assert’; did you mean ‘qsort’? [-Wimplicit-function-declaration]
  assert(len < sb->alloc);
  ^~~~~~
  qsort
./benchmarks/git/double_free_3/git_df_3.c: In function ‘strbuf_addstr’:
./benchmarks/git/double_free_3/git_df_3.c:246:20: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  strbuf_add(sb, s, strlen(s));
                    ^~~~~~
./benchmarks/git/double_free_3/git_df_3.c:246:20: warning: incompatible implicit declaration of built-in function ‘strlen’
./benchmarks/git/double_free_3/git_df_3.c:246:20: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/double_free_3/git_df_3.c: In function ‘cmd_mark’:
./benchmarks/git/double_free_3/git_df_3.c:317:7: warning: implicit declaration of function ‘prefixcmp’ [-Wimplicit-function-declaration]
  if (!prefixcmp(command_buf.buf, "mark :")) {
       ^~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:318:15: warning: implicit declaration of function ‘strtoumax’; did you mean ‘strtoull’? [-Wimplicit-function-declaration]
   next_mark = strtoumax(command_buf.buf + 6, NULL, 10);
               ^~~~~~~~~
               strtoull
./benchmarks/git/double_free_3/git_df_3.c: In function ‘cmd_new_blob’:
./benchmarks/git/double_free_3/git_df_3.c:331:2: warning: implicit declaration of function ‘cmd_data’; did you mean ‘cmd_mark’? [-Wimplicit-function-declaration]
  cmd_data(&buf);
  ^~~~~~~~
  cmd_mark
./benchmarks/git/double_free_3/git_df_3.c:332:2: warning: implicit declaration of function ‘store_object’ [-Wimplicit-function-declaration]
  store_object(OBJ_BLOB, &buf, &last_blob, NULL, next_mark);
  ^~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c: At top level:
./benchmarks/git/double_free_3/git_df_3.c:335:13: warning: conflicting types for ‘cmd_data’
 static void cmd_data(struct strbuf *sb)
             ^~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:335:13: error: static declaration of ‘cmd_data’ follows non-static declaration
./benchmarks/git/double_free_3/git_df_3.c:331:2: note: previous implicit declaration of ‘cmd_data’ was here
  cmd_data(&buf);
  ^~~~~~~~
In file included from ./benchmarks/git/double_free_3/git_df_3.c:9:0:
./benchmarks/git/double_free_3/git_df_3.c: In function ‘cmd_data’:
./benchmarks/git/double_free_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/double_free_3/git_df_3.c:343:16: note: in expansion of macro ‘xstrdup’
   char *term = xstrdup(command_buf.buf + 5 + 2);
                ^~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:350:9: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
     && !strcmp(term, command_buf.buf))
         ^~~~~~
./benchmarks/git/double_free_3/git_df_3.c:353:4: warning: implicit declaration of function ‘strbuf_addch’; did you mean ‘strbuf_add’? [-Wimplicit-function-declaration]
    strbuf_addch(sb, '\n');
    ^~~~~~~~~~~~
    strbuf_add
./benchmarks/git/double_free_3/git_df_3.c: In function ‘cmd_new_commit’:
./benchmarks/git/double_free_3/git_df_3.c:374:7: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  sp = strchr(command_buf.buf, ' ') + 1;
       ^~~~~~
./benchmarks/git/double_free_3/git_df_3.c:374:7: warning: incompatible implicit declaration of built-in function ‘strchr’
./benchmarks/git/double_free_3/git_df_3.c:374:7: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/double_free_3/git_df_3.c:375:6: warning: implicit declaration of function ‘lookup_branch’ [-Wimplicit-function-declaration]
  b = lookup_branch(sp);
      ^~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:375:4: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  b = lookup_branch(sp);
    ^
./benchmarks/git/double_free_3/git_df_3.c:377:7: warning: implicit declaration of function ‘new_branch’ [-Wimplicit-function-declaration]
   b = new_branch(sp);
       ^~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:377:5: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   b = new_branch(sp);
     ^
./benchmarks/git/double_free_3/git_df_3.c:382:12: warning: implicit declaration of function ‘parse_ident’ [-Wimplicit-function-declaration]
   author = parse_ident(command_buf.buf + 7);
            ^~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:382:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   author = parse_ident(command_buf.buf + 7);
          ^
./benchmarks/git/double_free_3/git_df_3.c:386:13: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   committer = parse_ident(command_buf.buf + 10);
             ^
./benchmarks/git/double_free_3/git_df_3.c:393:2: warning: implicit declaration of function ‘cmd_from’; did you mean ‘cmd_data’? [-Wimplicit-function-declaration]
  cmd_from(b);
  ^~~~~~~~
  cmd_data
./benchmarks/git/double_free_3/git_df_3.c:394:15: warning: implicit declaration of function ‘cmd_merge’; did you mean ‘cmd_mark’? [-Wimplicit-function-declaration]
  merge_list = cmd_merge(&merge_count);
               ^~~~~~~~~
               cmd_mark
./benchmarks/git/double_free_3/git_df_3.c:394:13: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  merge_list = cmd_merge(&merge_count);
             ^
./benchmarks/git/double_free_3/git_df_3.c:398:3: warning: implicit declaration of function ‘unload_one_branch’ [-Wimplicit-function-declaration]
   unload_one_branch();
   ^~~~~~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:399:3: warning: implicit declaration of function ‘load_branch’ [-Wimplicit-function-declaration]
   load_branch(b);
   ^~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:405:4: warning: implicit declaration of function ‘file_change_m’ [-Wimplicit-function-declaration]
    file_change_m(b);
    ^~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:407:4: warning: implicit declaration of function ‘file_change_d’ [-Wimplicit-function-declaration]
    file_change_d(b);
    ^~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:409:4: warning: implicit declaration of function ‘file_change_cr’ [-Wimplicit-function-declaration]
    file_change_cr(b, 1);
    ^~~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:413:4: warning: implicit declaration of function ‘file_change_deleteall’ [-Wimplicit-function-declaration]
    file_change_deleteall(b);
    ^~~~~~~~~~~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:423:2: warning: implicit declaration of function ‘store_tree’ [-Wimplicit-function-declaration]
  store_tree(&b->branch_tree);
  ^~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:424:2: warning: implicit declaration of function ‘hashcpy’ [-Wimplicit-function-declaration]
  hashcpy(b->branch_tree.versions[0].sha1,
  ^~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:428:2: warning: implicit declaration of function ‘strbuf_addf’; did you mean ‘strbuf_add’? [-Wimplicit-function-declaration]
  strbuf_addf(&new_data, "tree %s\n",
  ^~~~~~~~~~~
  strbuf_add
./benchmarks/git/double_free_3/git_df_3.c:429:3: warning: implicit declaration of function ‘sha1_to_hex’ [-Wimplicit-function-declaration]
   sha1_to_hex(b->branch_tree.versions[1].sha1));
   ^~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c:430:7: warning: implicit declaration of function ‘is_null_sha1’ [-Wimplicit-function-declaration]
  if (!is_null_sha1(b->sha1))
       ^~~~~~~~~~~~
./benchmarks/git/double_free_3/git_df_3.c: In function ‘main’:
./benchmarks/git/double_free_3/git_df_3.c:459:12: warning: implicit declaration of function ‘pool_alloc’; did you mean ‘xrealloc’? [-Wimplicit-function-declaration]
  rc_free = pool_alloc(cmd_save * sizeof(*rc_free));
            ^~~~~~~~~~
            xrealloc
./benchmarks/git/double_free_3/git_df_3.c:459:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  rc_free = pool_alloc(cmd_save * sizeof(*rc_free));
          ^
./benchmarks/git/double_free_3/git_df_3.c:470:4: warning: implicit declaration of function ‘cmd_new_tag’; did you mean ‘cmd_new_blob’? [-Wimplicit-function-declaration]
    cmd_new_tag();
    ^~~~~~~~~~~
    cmd_new_blob
