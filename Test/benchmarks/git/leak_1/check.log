../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/leak_1/git_leak_1.c:10:
./benchmarks/git/leak_1/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_1/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_1/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_1/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_1/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_1/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_1/../git.h: In function ‘move_array’:
./benchmarks/git/leak_1/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_1/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_1/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:10:
./benchmarks/git/leak_1/../git.h: At top level:
./benchmarks/git/leak_1/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_1/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_1/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_1/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_1/git_leak_1.c: At top level:
./benchmarks/git/leak_1/git_leak_1.c:67:3: error: conflicting types for ‘pthread_t’; have ‘struct <anonymous>’
   67 | } pthread_t;
      |   ^~~~~~~~~
In file included from /usr/include/x86_64-linux-gnu/sys/types.h:227,
                 from /usr/include/stdlib.h:394,
                 from ./benchmarks/git/leak_1/git_leak_1.c:7:
/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:27:27: note: previous declaration of ‘pthread_t’ with type ‘pthread_t’ {aka ‘long unsigned int’}
   27 | typedef unsigned long int pthread_t;
      |                           ^~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c: In function ‘string_list_init’:
./benchmarks/git/leak_1/git_leak_1.c:94:9: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   94 |         memset(list, 0, sizeof(*list));
      |         ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/leak_1/git_leak_1.c:94:9: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   94 |         memset(list, 0, sizeof(*list));
      |         ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:94:9: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/git/leak_1/git_leak_1.c: In function ‘add_entry’:
./benchmarks/git/leak_1/git_leak_1.c:102:51: warning: implicit declaration of function ‘get_entry_index’ [-Wimplicit-function-declaration]
  102 |         int index = insert_at != -1 ? insert_at : get_entry_index(list, string, &exact_match);
      |                                                   ^~~~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:10:
./benchmarks/git/leak_1/../git.h:112:29: warning: implicit declaration of function ‘alloc_nr’; did you mean ‘alloca’? [-Wimplicit-function-declaration]
  112 |                         if (alloc_nr(alloc) < (nr)) \
      |                             ^~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:107:9: note: in expansion of macro ‘ALLOC_GROW’
  107 |         ALLOC_GROW(list->items, list->nr+1, list->alloc);
      |         ^~~~~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:112:17: note: in expansion of macro ‘xstrdup’
  112 |                 xstrdup(string) : (char *)string; /* allocation site */
      |                 ^~~~~~~
./benchmarks/git/leak_1/git_leak_1.c: In function ‘parse_pathspec’:
./benchmarks/git/leak_1/git_leak_1.c:142:9: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
  142 |         memset(pathspec, 0, sizeof(*pathspec));
      |         ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:142:9: note: include ‘<string.h>’ or provide a declaration of ‘memset’
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:157:31: note: in expansion of macro ‘xstrdup’
  157 |                 item->match = xstrdup(prefix);                      /* allocation site */
      |                               ^~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:159:52: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  159 |                 item->nowildcard_len = item->len = strlen(prefix);
      |                                                    ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:159:52: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_1/git_leak_1.c:159:52: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_1/git_leak_1.c:159:52: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_1/git_leak_1.c:171:30: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  171 |         prefixlen = prefix ? strlen(prefix) : 0;
      |                              ^~~~~~
./benchmarks/git/leak_1/git_leak_1.c:171:30: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_1/git_leak_1.c:183:21: warning: implicit declaration of function ‘has_symlink_leading_path’ [-Wimplicit-function-declaration]
  183 |                     has_symlink_leading_path(item[i].match, item[i].len)) {
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/git_leak_1.c:184:29: warning: implicit declaration of function ‘_’ [-Wimplicit-function-declaration]
  184 |                         die(_("pathspec '%s' is beyond a symbolic link"), entry);
      |                             ^
./benchmarks/git/leak_1/../stdio.h:135:30: note: in definition of macro ‘fatal’
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                              ^
./benchmarks/git/leak_1/git_leak_1.c:184:25: note: in expansion of macro ‘die’
  184 |                         die(_("pathspec '%s' is beyond a symbolic link"), entry);
      |                         ^~~
./benchmarks/git/leak_1/git_leak_1.c:184:29: warning: passing argument 1 of ‘printf’ makes pointer from integer without a cast [-Wint-conversion]
  184 |                         die(_("pathspec '%s' is beyond a symbolic link"), entry);
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                             |
      |                             int
./benchmarks/git/leak_1/../stdio.h:135:30: note: in definition of macro ‘fatal’
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                              ^
./benchmarks/git/leak_1/git_leak_1.c:184:25: note: in expansion of macro ‘die’
  184 |                         die(_("pathspec '%s' is beyond a symbolic link"), entry);
      |                         ^~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:6:
/usr/include/stdio.h:332:43: note: expected ‘const char * restrict’ but argument is of type ‘int’
  332 | extern int printf (const char *__restrict __format, ...);
      |                    ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:198:17: warning: implicit declaration of function ‘init_pathspec_item’ [-Wimplicit-function-declaration]
  198 |                 init_pathspec_item(item + n, 0, prefix, plen, "");
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c: In function ‘list_paths’:
./benchmarks/git/leak_1/git_leak_1.c:220:36: warning: implicit declaration of function ‘common_prefix’ [-Wimplicit-function-declaration]
  220 |                 char *max_prefix = common_prefix(pattern);
      |                                    ^~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:220:36: warning: initialization of ‘char *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/git/leak_1/git_leak_1.c:221:17: warning: implicit declaration of function ‘overlay_tree_on_index’ [-Wimplicit-function-declaration]
  221 |                 overlay_tree_on_index(&the_index, with_tree,
      |                 ^~~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:231:21: warning: implicit declaration of function ‘ce_skip_worktree’ [-Wimplicit-function-declaration]
  231 |                 if (ce_skip_worktree(ce))
      |                     ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:235:15: warning: implicit declaration of function ‘report_path_error’ [-Wimplicit-function-declaration]
  235 |         ret = report_path_error(m, pattern, prefix);
      |               ^~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c: In function ‘prepare_index’:
./benchmarks/git/leak_1/git_leak_1.c:27:38: warning: implicit declaration of function ‘read_index_preload’; did you mean ‘read_cache_preload’? [-Wimplicit-function-declaration]
   27 | #define read_cache_preload(pathspec) read_index_preload(&the_index, (pathspec))
      |                                      ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:255:13: note: in expansion of macro ‘read_cache_preload’
  255 |         if (read_cache_preload(&pathspec) < 0)
      |             ^~~~~~~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/git_leak_1.c:256:21: warning: passing argument 1 of ‘printf’ makes pointer from integer without a cast [-Wint-conversion]
  256 |                 die(_("index file corrupt%s"), "");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
      |                     |
      |                     int
./benchmarks/git/leak_1/../stdio.h:135:30: note: in definition of macro ‘fatal’
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                              ^
./benchmarks/git/leak_1/git_leak_1.c:256:17: note: in expansion of macro ‘die’
  256 |                 die(_("index file corrupt%s"), "");
      |                 ^~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:6:
/usr/include/stdio.h:332:43: note: expected ‘const char * restrict’ but argument is of type ‘int’
  332 | extern int printf (const char *__restrict __format, ...);
      |                    ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:261:21: warning: implicit declaration of function ‘interactive_add’ [-Wimplicit-function-declaration]
  261 |                 if (interactive_add(argc, argv, prefix, patch_interactive) != 0)
      |                     ^~~~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/git_leak_1.c:262:29: warning: passing argument 1 of ‘printf’ makes pointer from integer without a cast [-Wint-conversion]
  262 |                         die(_("interactive add failed%s"), "");
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                             |
      |                             int
./benchmarks/git/leak_1/../stdio.h:135:30: note: in definition of macro ‘fatal’
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                              ^
./benchmarks/git/leak_1/git_leak_1.c:262:25: note: in expansion of macro ‘die’
  262 |                         die(_("interactive add failed%s"), "");
      |                         ^~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:6:
/usr/include/stdio.h:332:43: note: expected ‘const char * restrict’ but argument is of type ‘int’
  332 | extern int printf (const char *__restrict __format, ...);
      |                    ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:26:31: warning: implicit declaration of function ‘read_index_from’; did you mean ‘read_cache_from’? [-Wimplicit-function-declaration]
   26 | #define read_cache_from(path) read_index_from(&the_index, (path))
      |                               ^~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:264:17: note: in expansion of macro ‘read_cache_from’
  264 |                 read_cache_from(get_lock_file_path(&index_lock));
      |                 ^~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:264:33: warning: implicit declaration of function ‘get_lock_file_path’ [-Wimplicit-function-declaration]
  264 |                 read_cache_from(get_lock_file_path(&index_lock));
      |                                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:26:60: note: in definition of macro ‘read_cache_from’
   26 | #define read_cache_from(path) read_index_from(&the_index, (path))
      |                                                            ^~~~
./benchmarks/git/leak_1/git_leak_1.c:266:24: warning: returning ‘int’ from a function with return type ‘const char *’ makes pointer from integer without a cast [-Wint-conversion]
  266 |                 return get_lock_file_path(&index_lock);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:282:17: warning: implicit declaration of function ‘add_files_to_cache’; did you mean ‘add_file_to_cache’? [-Wimplicit-function-declaration]
  282 |                 add_files_to_cache(also ? prefix : NULL, &pathspec, 0);
      |                 ^~~~~~~~~~~~~~~~~~
      |                 add_file_to_cache
./benchmarks/git/leak_1/git_leak_1.c:284:24: warning: returning ‘int’ from a function with return type ‘const char *’ makes pointer from integer without a cast [-Wint-conversion]
  284 |                 return get_lock_file_path(&index_lock);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:9:
./benchmarks/git/leak_1/git_leak_1.c:298:37: warning: passing argument 1 of ‘printf’ makes pointer from integer without a cast [-Wint-conversion]
  298 |                                 die(_("unable to write new_index file%s"), "");
      |                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                     |
      |                                     int
./benchmarks/git/leak_1/../stdio.h:135:30: note: in definition of macro ‘fatal’
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                              ^
./benchmarks/git/leak_1/git_leak_1.c:298:33: note: in expansion of macro ‘die’
  298 |                                 die(_("unable to write new_index file%s"), "");
      |                                 ^~~
In file included from ./benchmarks/git/leak_1/git_leak_1.c:6:
/usr/include/stdio.h:332:43: note: expected ‘const char * restrict’ but argument is of type ‘int’
  332 | extern int printf (const char *__restrict __format, ...);
      |                    ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:300:25: warning: implicit declaration of function ‘rollback_lock_file’ [-Wimplicit-function-declaration]
  300 |                         rollback_lock_file(&index_lock);
      |                         ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:303:24: warning: implicit declaration of function ‘get_index_file’ [-Wimplicit-function-declaration]
  303 |                 return get_index_file();
      |                        ^~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:303:24: warning: returning ‘int’ from a function with return type ‘const char *’ makes pointer from integer without a cast [-Wint-conversion]
  303 |                 return get_index_file();
      |                        ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:30:25: warning: implicit declaration of function ‘discard_index’ [-Wimplicit-function-declaration]
   30 | #define discard_cache() discard_index(&the_index)
      |                         ^~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c:331:9: note: in expansion of macro ‘discard_cache’
  331 |         discard_cache();
      |         ^~~~~~~~~~~~~
./benchmarks/git/leak_1/git_leak_1.c: In function ‘main’:
./benchmarks/git/leak_1/git_leak_1.c:339:25: warning: passing argument 2 of ‘prepare_index’ from incompatible pointer type [-Wincompatible-pointer-types]
  339 |     prepare_index(argc, argv, "prefix", current_head, is_status);
      |                         ^~~~
      |                         |
      |                         char **
./benchmarks/git/leak_1/git_leak_1.c:241:57: note: expected ‘const char **’ but argument is of type ‘char **’
  241 | static const char *prepare_index(int argc, const char **argv, const char *prefix,
      |                                            ~~~~~~~~~~~~~^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 48%)
 phase parsing                      :   0.03 (100%)   0.03 (100%)   0.06 (100%)  1153k ( 43%)
 preprocessing                      :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 17%)   348k ( 13%)
 lexical analysis                   :   0.02 ( 67%)   0.01 ( 33%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.01 ( 33%)   0.01 ( 33%)   0.02 ( 33%)   583k ( 22%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.02 ( 33%)    75k (  3%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   113k (  4%)
 TOTAL                              :   0.03          0.03          0.06         2690k
