In file included from ./benchmarks/git/use_after_free_1/git_uaf_1.c:10:0:
./benchmarks/git/use_after_free_1/../git.h: In function ‘copy_array’:
./benchmarks/git/use_after_free_1/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/use_after_free_1/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/use_after_free_1/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/use_after_free_1/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/use_after_free_1/../git.h: In function ‘move_array’:
./benchmarks/git/use_after_free_1/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/use_after_free_1/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/use_after_free_1/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/use_after_free_1/git_uaf_1.c:9:0:
./benchmarks/git/use_after_free_1/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/use_after_free_1/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/use_after_free_1/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/use_after_free_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/use_after_free_1/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/use_after_free_1/git_uaf_1.c:10:0:
./benchmarks/git/use_after_free_1/../git.h: At top level:
./benchmarks/git/use_after_free_1/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_1/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/use_after_free_1/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/use_after_free_1/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/use_after_free_1/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/use_after_free_1/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘strbuf_init’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:31:3: warning: implicit declaration of function ‘strbuf_grow’; did you mean ‘strbuf_init’? [-Wimplicit-function-declaration]
   strbuf_grow(sb, hint);
   ^~~~~~~~~~~
   strbuf_init
./benchmarks/git/use_after_free_1/git_uaf_1.c: At top level:
./benchmarks/git/use_after_free_1/git_uaf_1.c:71:6: warning: conflicting types for ‘strbuf_grow’
 void strbuf_grow(struct strbuf *sb, size_t extra)
      ^~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:31:3: note: previous implicit declaration of ‘strbuf_grow’ was here
   strbuf_grow(sb, hint);
   ^~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘strbuf_grow’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:74:6: warning: implicit declaration of function ‘unsigned_add_overflows’; did you mean ‘__builtin_add_overflow’? [-Wimplicit-function-declaration]
  if (unsigned_add_overflows(extra, 1) ||
      ^~~~~~~~~~~~~~~~~~~~~~
      __builtin_add_overflow
In file included from ./benchmarks/git/use_after_free_1/git_uaf_1.c:10:0:
./benchmarks/git/use_after_free_1/../git.h:112:8: warning: implicit declaration of function ‘alloc_nr’; did you mean ‘alloca’? [-Wimplicit-function-declaration]
    if (alloc_nr(alloc) < (nr)) \
        ^
./benchmarks/git/use_after_free_1/git_uaf_1.c:79:2: note: in expansion of macro ‘ALLOC_GROW’
  ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc); /* allocation site */
  ^~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘strbuf_vaddf’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:88:7: warning: implicit declaration of function ‘strbuf_avail’; did you mean ‘strbuf_vaddf’? [-Wimplicit-function-declaration]
  if (!strbuf_avail(sb))
       ^~~~~~~~~~~~
       strbuf_vaddf
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘add_path’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:102:3: warning: implicit declaration of function ‘strbuf_addch’; did you mean ‘strbuf_addf’? [-Wimplicit-function-declaration]
   strbuf_addch(buf, '/');
   ^~~~~~~~~~~~
   strbuf_addf
./benchmarks/git/use_after_free_1/git_uaf_1.c:103:2: warning: implicit declaration of function ‘strbuf_addstr’; did you mean ‘strbuf_addf’? [-Wimplicit-function-declaration]
  strbuf_addstr(buf, path);
  ^~~~~~~~~~~~~
  strbuf_addf
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘checkout_entry’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:110:14: error: storage size of ‘st’ isn’t known
  struct stat st;
              ^~
./benchmarks/git/use_after_free_1/git_uaf_1.c:113:10: warning: implicit declaration of function ‘write_entry’ [-Wimplicit-function-declaration]
   return write_entry(ce, topath, state, 1);
          ^~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:115:2: warning: implicit declaration of function ‘strbuf_reset’; did you mean ‘strbuf_setlen’? [-Wimplicit-function-declaration]
  strbuf_reset(&path);
  ^~~~~~~~~~~~
  strbuf_setlen
./benchmarks/git/use_after_free_1/git_uaf_1.c:116:2: warning: implicit declaration of function ‘strbuf_add’; did you mean ‘strbuf_addf’? [-Wimplicit-function-declaration]
  strbuf_add(&path, state->base_dir, state->base_dir_len);
  ^~~~~~~~~~
  strbuf_addf
./benchmarks/git/use_after_free_1/git_uaf_1.c:118:2: warning: implicit declaration of function ‘create_directories’ [-Wimplicit-function-declaration]
  create_directories(path.buf, path.len, state);
  ^~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘checkout_path’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:127:7: warning: implicit declaration of function ‘make_cache_entry’; did you mean ‘checkout_entry’? [-Wimplicit-function-declaration]
  ce = make_cache_entry(mode, oid->hash, path, 0, 0);
       ^~~~~~~~~~~~~~~~
       checkout_entry
./benchmarks/git/use_after_free_1/git_uaf_1.c:127:5: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  ce = make_cache_entry(mode, oid->hash, path, 0, 0);
     ^
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘run_dir_diff’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:148:22: error: storage size of ‘iter’ isn’t known
  struct hashmap_iter iter;
                      ^~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:156:12: warning: implicit declaration of function ‘get_git_work_tree’ [-Wimplicit-function-declaration]
  workdir = get_git_work_tree();
            ^~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:156:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  workdir = get_git_work_tree();
          ^
./benchmarks/git/use_after_free_1/git_uaf_1.c:160:2: warning: implicit declaration of function ‘xsnprintf’; did you mean ‘vsnprintf’? [-Wimplicit-function-declaration]
  xsnprintf(tmpdir, sizeof(tmpdir), "%s/git-difftool.XXXXXX", tmp ? tmp : "/tmp");
  ^~~~~~~~~
  vsnprintf
./benchmarks/git/use_after_free_1/git_uaf_1.c:162:10: warning: implicit declaration of function ‘error’; did you mean ‘perror’? [-Wimplicit-function-declaration]
   return error("could not create '%s'", tmpdir);
          ^~~~~
          perror
./benchmarks/git/use_after_free_1/git_uaf_1.c:166:21: warning: implicit declaration of function ‘is_dir_sep’ [-Wimplicit-function-declaration]
  if (!wtdir.len || !is_dir_sep(wtdir.buf[wtdir.len - 1]))
                     ^~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:168:2: warning: implicit declaration of function ‘mkdir’ [-Wimplicit-function-declaration]
  mkdir(ldir.buf, 0700);
  ^~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:171:2: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
  memset(&wtindex, 0, sizeof(wtindex));
  ^~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:171:2: warning: incompatible implicit declaration of built-in function ‘memset’
./benchmarks/git/use_after_free_1/git_uaf_1.c:171:2: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/git/use_after_free_1/git_uaf_1.c:188:10: warning: implicit declaration of function ‘strbuf_getline_nul’; did you mean ‘strbuf_setlen’? [-Wimplicit-function-declaration]
  while (!strbuf_getline_nul(&info, fp)) {
          ^~~~~~~~~~~~~~~~~~
          strbuf_setlen
./benchmarks/git/use_after_free_1/git_uaf_1.c:199:17: warning: implicit declaration of function ‘S_ISLNK’ [-Wimplicit-function-declaration]
   if (rmode && !S_ISLNK(rmode)) {
                 ^~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:202:9: warning: implicit declaration of function ‘use_wt_file’ [-Wimplicit-function-declaration]
    if (!use_wt_file(workdir, dst_path, &roid)) {
         ^~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:206:16: warning: implicit declaration of function ‘is_null_oid’ [-Wimplicit-function-declaration]
    } else if (!is_null_oid(&roid)) {
                ^~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:213:6: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
      make_cache_entry(rmode, roid.hash,
      ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:218:10: warning: implicit declaration of function ‘symlink’ [-Wimplicit-function-declaration]
      if (symlink(wtdir.buf, rdir.buf)) {
          ^~~~~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:219:13: warning: implicit declaration of function ‘error_errno’; did you mean ‘die_errno’? [-Wimplicit-function-declaration]
       ret = error_errno("could not symlink '%s' to '%s'", wtdir.buf, rdir.buf);
             ^~~~~~~~~~~
             die_errno
./benchmarks/git/use_after_free_1/git_uaf_1.c: In function ‘main’:
./benchmarks/git/use_after_free_1/git_uaf_1.c:243:54: warning: passing argument 5 of ‘run_dir_diff’ from incompatible pointer type [-Wincompatible-pointer-types]
     run_dir_diff("extcmd", symlinks, "prefix", argc, argv);
                                                      ^~~~
./benchmarks/git/use_after_free_1/git_uaf_1.c:135:12: note: expected ‘const char **’ but argument is of type ‘char **’
 static int run_dir_diff(const char *extcmd, int symlinks, const char *prefix,
            ^~~~~~~~~~~~
