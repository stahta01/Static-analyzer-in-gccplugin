In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_5/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/leak_5/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/leak_5/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_5/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/leak_5/../git.h: In function ‘move_array’:
./benchmarks/git/leak_5/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/leak_5/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/leak_5/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_5/git_leak_5.c:8:0:
./benchmarks/git/leak_5/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_5/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_5/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/leak_5/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_5/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h: At top level:
./benchmarks/git/leak_5/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/leak_5/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_5/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_5/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_5/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_5/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_5/git_leak_5.c: At top level:
./benchmarks/git/leak_5/git_leak_5.c:17:6: error: nested redefinition of ‘enum object_type’
 enum object_type {
      ^~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:17:6: error: redeclaration of ‘enum object_type’
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:135:6: note: originally defined here
 enum object_type {
      ^~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:18:2: error: redeclaration of enumerator ‘OBJ_BAD’
  OBJ_BAD = -1,
  ^~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:136:2: note: previous definition of ‘OBJ_BAD’ was here
  OBJ_BAD = -1,
  ^~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:19:2: error: redeclaration of enumerator ‘OBJ_NONE’
  OBJ_NONE = 0,
  ^~~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:137:2: note: previous definition of ‘OBJ_NONE’ was here
  OBJ_NONE = 0,
  ^~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:20:2: error: redeclaration of enumerator ‘OBJ_COMMIT’
  OBJ_COMMIT = 1,
  ^~~~~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:138:2: note: previous definition of ‘OBJ_COMMIT’ was here
  OBJ_COMMIT = 1,
  ^~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:21:2: error: redeclaration of enumerator ‘OBJ_TREE’
  OBJ_TREE = 2,
  ^~~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:139:2: note: previous definition of ‘OBJ_TREE’ was here
  OBJ_TREE = 2,
  ^~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:22:2: error: redeclaration of enumerator ‘OBJ_BLOB’
  OBJ_BLOB = 3,
  ^~~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:140:2: note: previous definition of ‘OBJ_BLOB’ was here
  OBJ_BLOB = 3,
  ^~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:23:2: error: redeclaration of enumerator ‘OBJ_TAG’
  OBJ_TAG = 4,
  ^~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:141:2: note: previous definition of ‘OBJ_TAG’ was here
  OBJ_TAG = 4,
  ^~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:25:2: error: redeclaration of enumerator ‘OBJ_OFS_DELTA’
  OBJ_OFS_DELTA = 6,
  ^~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:143:2: note: previous definition of ‘OBJ_OFS_DELTA’ was here
  OBJ_OFS_DELTA = 6,
  ^~~~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:26:2: error: redeclaration of enumerator ‘OBJ_REF_DELTA’
  OBJ_REF_DELTA = 7,
  ^~~~~~~~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:144:2: note: previous definition of ‘OBJ_REF_DELTA’ was here
  OBJ_REF_DELTA = 7,
  ^~~~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:27:2: error: redeclaration of enumerator ‘OBJ_ANY’
  OBJ_ANY,
  ^~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:145:2: note: previous definition of ‘OBJ_ANY’ was here
  OBJ_ANY,
  ^~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:28:2: error: redeclaration of enumerator ‘OBJ_MAX’
  OBJ_MAX
  ^~~~~~~
In file included from ./benchmarks/git/leak_5/git_leak_5.c:9:0:
./benchmarks/git/leak_5/../git.h:146:2: note: previous definition of ‘OBJ_MAX’ was here
  OBJ_MAX
  ^~~~~~~
./benchmarks/git/leak_5/git_leak_5.c: In function ‘remove_redundant’:
./benchmarks/git/leak_5/git_leak_5.c:50:3: warning: implicit declaration of function ‘parse_commit’; did you mean ‘parse_timestamp’? [-Wimplicit-function-declaration]
   parse_commit(array[i]);
   ^~~~~~~~~~~~
   parse_timestamp
./benchmarks/git/leak_5/git_leak_5.c:62:12: warning: implicit declaration of function ‘paint_down_to_common’ [-Wimplicit-function-declaration]
   common = paint_down_to_common(array[i], filled, work);
            ^~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:62:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   common = paint_down_to_common(array[i], filled, work);
          ^
./benchmarks/git/leak_5/git_leak_5.c:68:3: warning: implicit declaration of function ‘clear_commit_marks’ [-Wimplicit-function-declaration]
   clear_commit_marks(array[i], all_flags);
   ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:71:3: warning: implicit declaration of function ‘free_commit_list’ [-Wimplicit-function-declaration]
   free_commit_list(common);
   ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c: At top level:
./benchmarks/git/leak_5/git_leak_5.c:110:6: warning: conflicting types for ‘free_commit_list’
 void free_commit_list(struct commit_list *list)
      ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_5/git_leak_5.c:71:3: note: previous implicit declaration of ‘free_commit_list’ was here
   free_commit_list(common);
   ^~~~~~~~~~~~~~~~
