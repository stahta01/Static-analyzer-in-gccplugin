In file included from ./benchmarks/git/leak_7/git_leak_7.c:10:0:
./benchmarks/git/leak_7/../git.h: In function â€˜copy_arrayâ€™:
./benchmarks/git/leak_7/../git.h:161:3: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/leak_7/../git.h:161:3: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
./benchmarks/git/leak_7/../git.h:161:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
./benchmarks/git/leak_7/../git.h:161:20: warning: implicit declaration of function â€˜st_multâ€™; did you mean â€˜stdoutâ€™? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/leak_7/../git.h: In function â€˜move_arrayâ€™:
./benchmarks/git/leak_7/../git.h:169:3: warning: implicit declaration of function â€˜memmoveâ€™ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/leak_7/../git.h:169:3: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™
./benchmarks/git/leak_7/../git.h:169:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
In file included from ./benchmarks/git/leak_7/git_leak_7.c:9:0:
./benchmarks/git/leak_7/../git.h: In function â€˜xstrdup_or_nullâ€™:
./benchmarks/git/leak_7/../stdio.h:138:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_7/../git.h:174:15: note: in expansion of macro â€˜xstrdupâ€™
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_7/../git.h:174:15: note: in expansion of macro â€˜xstrdupâ€™
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/leak_7/git_leak_7.c:10:0:
./benchmarks/git/leak_7/../git.h: At top level:
./benchmarks/git/leak_7/../git.h:236:55: warning: â€˜struct archiver_argsâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/leak_7/../git.h: In function â€˜strbuf_swapâ€™:
./benchmarks/git/leak_7/../git.h:126:2: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_7/../git.h:407:2: note: in expansion of macro â€˜SWAPâ€™
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_7/../git.h:126:2: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_7/../git.h:407:2: note: in expansion of macro â€˜SWAPâ€™
  SWAP(*a, *b);
  ^~~~
In file included from ./benchmarks/git/leak_7/git_leak_7.c:9:0:
./benchmarks/git/leak_7/git_leak_7.c: In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_7/git_leak_7.c:47:17: note: in expansion of macro â€˜xstrdupâ€™
   entry->name = xstrdup(name);    /* allocation site */
                 ^~~~~~~
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_7/git_leak_7.c:50:17: note: in expansion of macro â€˜xstrdupâ€™
   entry->path = xstrdup(path);    /* allocation site */
                 ^~~~~~~
./benchmarks/git/leak_7/git_leak_7.c: In function â€˜commit_is_completeâ€™:
./benchmarks/git/leak_7/git_leak_7.c:80:2: warning: implicit declaration of function â€˜memsetâ€™ [-Wimplicit-function-declaration]
  memset(&study, 0, sizeof(study));
  ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:80:2: warning: incompatible implicit declaration of built-in function â€˜memsetâ€™
./benchmarks/git/leak_7/git_leak_7.c:80:2: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
./benchmarks/git/leak_7/git_leak_7.c:90:29: warning: implicit declaration of function â€˜parse_objectâ€™; did you mean â€˜pselectâ€™? [-Wimplicit-function-declaration]
   if (!c->object.parsed && !parse_object(&c->object.oid))
                             ^~~~~~~~~~~~
                             pselect
./benchmarks/git/leak_7/git_leak_7.c:116:9: warning: implicit declaration of function â€˜tree_is_completeâ€™; did you mean â€˜commit_is_completeâ€™? [-Wimplicit-function-declaration]
    if (!tree_is_complete(&c->tree->object.oid)) {
         ^~~~~~~~~~~~~~~~
         commit_is_complete
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 8
succs:= 5
succs:= 8
succs:= 2
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
succs:= 9
succs:= 10
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 12
succs:= 12
succs:= 13
succs:= 13
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 18
succs:= 19
--------GIMPLE Cond -------
succs:= 20
succs:= 20
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 23
succs:= 24
--------GIMPLE Cond -------
succs:= 19
succs:= 24
succs:= 26
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 29
succs:= 30
succs:= 30
--------GIMPLE Cond -------
succs:= 33
succs:= 2
succs:= 3
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
# .MEM_79 = VDEF <.MEM_73>
_69 = __printf_chk (1, "Out of memory, realloc failed%s", "");
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
# .MEM_138 = VDEF <.MEM_1(D)>
memset (&study, 0, 16);
# .MEM_139 = VDEF <.MEM_138>
memset (&found, 0, 16);
# .MEM_140 = VDEF <.MEM_139>
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
# .MEM_141 = VDEF <.MEM_140>
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
# .MEM_144 = VDEF <.MEM_143>
_27 = parse_object (_26);
# .MEM_147 = VDEF <.MEM_146>
add_object_array_with_path (_47, 0B, &study, 12288, 0B);
# .MEM_148 = VDEF <.MEM_147>
add_object_array_with_path (_48, 0B, &found, 12288, 0B);
# .MEM_150 = VDEF <.MEM_131>
_60 = tree_is_complete (_59);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:add_object_array_with_path========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:add_object_array_with_path========= [0m
[40;42m =======start_check_funciton:add_object_array_with_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7874c23af8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_57 = realloc (objects_17, _3);
    version 57
    ptr-info 0x7f7874c40138>
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23af8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_57 = realloc (objects_17, _3);
    version 57
    ptr-info 0x7f7874c40138>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^
if (ret_62 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 5
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23af8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_57 = realloc (objects_17, _3);
    version 57
    ptr-info 0x7f7874c40138>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c23c18
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_61 = realloc (objects_17, 1);
    version 61
    ptr-info 0x7f7874c40150>
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23c18
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_61 = realloc (objects_17, 1);
    version 61
    ptr-info 0x7f7874c40150>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^
if (ret_68 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 8
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 9
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23c18
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_61 = realloc (objects_17, 1);
    version 61
    ptr-info 0x7f7874c40150>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c23ca8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_63 = realloc (objects_17, _3);
    version 63
    ptr-info 0x7f7874c40180>
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23ca8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_63 = realloc (objects_17, _3);
    version 63
    ptr-info 0x7f7874c40180>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^
if (ret_62 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 5
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23ca8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_63 = realloc (objects_17, _3);
    version 63
    ptr-info 0x7f7874c40180>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c23dc8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_67 = realloc (objects_17, 1);
    version 67
    ptr-info 0x7f7874c40198>
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23dc8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_67 = realloc (objects_17, 1);
    version 67
    ptr-info 0x7f7874c40198>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^
if (ret_62 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 5
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23dc8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_67 = realloc (objects_17, 1);
    version 67
    ptr-info 0x7f7874c40198>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f78750e2990
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version 7
    ptr-info 0x7f7874c40048>
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e2990
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version 7
    ptr-info 0x7f7874c40048>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
Cond in fucntion add_object_array_with_path basic block 13
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 14
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^
if (name_27(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 11
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 12
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e2990
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version 7
    ptr-info 0x7f7874c40048>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f78750e29d8
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version 8
    ptr-info 0x7f7874c40060>
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e29d8
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version 8
    ptr-info 0x7f7874c40060>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^
if (path_34(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 16
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 17
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e29d8
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version 8
    ptr-info 0x7f7874c40060>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7874c07d50 type <integer_type 0x7f78750ee7e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f78750daf90 type <integer_type 0x7f78750ee5e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f78750e2ca8
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14100 name>
    def_stmt GIMPLE_NOP
    version 27
    ptr-info 0x7f7874c40108>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e2ca8
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14100 name>
    def_stmt GIMPLE_NOP
    version 27
    ptr-info 0x7f7874c40108>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
Cond in fucntion add_object_array_with_path basic block 13
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 14
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^
if (name_27(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 11
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 12
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e2ca8
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14100 name>
    def_stmt GIMPLE_NOP
    version 27
    ptr-info 0x7f7874c40108>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f78750e2d38
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14280 path>
    def_stmt GIMPLE_NOP
    version 34
    ptr-info 0x7f7874c40120>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e2d38
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14280 path>
    def_stmt GIMPLE_NOP
    version 34
    ptr-info 0x7f7874c40120>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^
if (path_34(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 16
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 17
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e2d38
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14280 path>
    def_stmt GIMPLE_NOP
    version 34
    ptr-info 0x7f7874c40120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:add_object_array_with_path========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tree_is_complete========= [0m
[40;33m =======POP node_fun stack:tree_is_complete========= [0m
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_object_array_with_path  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:add_object_array_with_path========= [0m
[40;42m =======start_check_funciton:add_object_array_with_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7874c23af8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_57 = realloc (objects_17, _3);
    version 57
    ptr-info 0x7f7874c40138>
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
In function â€˜mainâ€™:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23af8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_57 = realloc (objects_17, _3);
    version 57
    ptr-info 0x7f7874c40138>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^
if (ret_62 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 5
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_58 = ret_57 == 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23af8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_57 = realloc (objects_17, _3);
    version 57
    ptr-info 0x7f7874c40138>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c23c18
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_61 = realloc (objects_17, 1);
    version 61
    ptr-info 0x7f7874c40150>
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
In function â€˜mainâ€™:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23c18
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_61 = realloc (objects_17, 1);
    version 61
    ptr-info 0x7f7874c40150>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^
if (ret_68 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 8
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 9
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23c18
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_61 = realloc (objects_17, 1);
    version 61
    ptr-info 0x7f7874c40150>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (ret_68 == 0B)
./benchmarks/git/leak_7/../git.h:421:6: warning: use location
   if (!ret)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c23ca8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_63 = realloc (objects_17, _3);
    version 63
    ptr-info 0x7f7874c40180>
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
In function â€˜mainâ€™:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23ca8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_63 = realloc (objects_17, _3);
    version 63
    ptr-info 0x7f7874c40180>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^
if (ret_62 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 5
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_58 = ret_57 == 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23ca8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_63 = realloc (objects_17, _3);
    version 63
    ptr-info 0x7f7874c40180>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_64 = ret_63 == 0B;
./benchmarks/git/leak_7/../git.h:419:7: warning: use location
   if (!ret && !size)
       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c23dc8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_67 = realloc (objects_17, 1);
    version 67
    ptr-info 0x7f7874c40198>
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_70 = PHI <ret_62(5), ret_68(8)>
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
ret_70 = PHI <ret_62(5), ret_68(8)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_81 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_81 = ret_70;
In function â€˜mainâ€™:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_21 = _81;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
objects_21 = _81;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
objects_9 = PHI <objects_17(2), objects_21(10)>
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
objects_9 = PHI <objects_17(2), objects_21(10)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
entry_24 = objects_9 + _5;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24 = objects_9 + _5;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->objects = objects_21;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
bb index := 19
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
array_14(D)->nr = nr_38;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
array_14(D)->alloc = alloc_18;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_2 = st_mult (32, alloc_18);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
this stmt is child function---st_mult-----

 ================== trace ================== 
 <ssa_name 0x7f7874c23dc8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_67 = realloc (objects_17, 1);
    version 67
    ptr-info 0x7f7874c40198>
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long unsigned int) _2;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_3 = (long unsigned int) _2;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^
if (_66 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
Cond in fucntion add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 7
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _3 == 0;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_59 = _3 == 0;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = _58 & _59;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_60 = _58 & _59;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
ret_57 = realloc (objects_17, _3);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
[40;32m    FIND realloc STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location
this stmt have mutiple branch --------
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^
if (ret_62 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 5
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 6
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = ret_57 == 0B;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_58 = ret_57 == 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
objects_17 = array_14(D)->objects;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
objects_17 = array_14(D)->objects;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:30:29: warning: use location
  struct object_array_entry *objects = array->objects;
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
alloc_16 = array_14(D)->alloc;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
alloc_16 = array_14(D)->alloc;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:29:11: warning: use location
  unsigned alloc = array->alloc;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = alloc_16 + 32;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================
_1 = alloc_16 + 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:34:24: warning: use location
   alloc = (alloc + 32) * 2;
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42(D)>
nr_15 = array_14(D)->nr;
bb index := 2
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 35

======================================================================
nr_15 = array_14(D)->nr;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:28:11: warning: use location
  unsigned nr = array->nr;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long unsigned int) nr_15;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_4 = (long unsigned int) nr_15;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 * 32;
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
_5 = _4 * 32;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = ret_70;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 35

======================================================================
_71 = ret_70;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
this stmt is child function---realloc-----

 ================== find ================== 
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
[40;32m    FIND realloc STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c23dc8
    type <pointer_type 0x7f78750f50a8
        type <void_type 0x7f78750eef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f78750f50a8>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f78750fabd0>>
    var <var_decl 0x7f7874c22630 ret>
    def_stmt ret_67 = realloc (objects_17, 1);
    version 67
    ptr-info 0x7f7874c40198>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_68 = PHI <ret_63(6), ret_67(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_70 = PHI <ret_62(5), ret_68(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_81 = ret_70;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_21 = _81;
./benchmarks/git/leak_7/git_leak_7.c:35:3: warning: use location
   REALLOC_ARRAY(objects, alloc);
   ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
objects_9 = PHI <objects_17(2), objects_21(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:8: warning: use location
  entry = &objects[nr];
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:18: warning: use location
   array->objects = objects;
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:12: warning: use location
  array->nr = ++nr;
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_45 = VDEF <.MEM_74>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:16: warning: use location
   array->alloc = alloc;
                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_65 = _3 == 0;
./benchmarks/git/leak_7/../git.h:419:15: warning: use location
   if (!ret && !size)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_66 = _64 & _65;
./benchmarks/git/leak_7/../git.h:419:12: warning: use location
   if (!ret && !size)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_66 != 0)
./benchmarks/git/leak_7/../git.h:419:6: warning: use location
   if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_59 = _3 == 0;
./benchmarks/git/leak_7/../git.h:415:14: warning: use location
  if (!ret && !size)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_60 = _58 & _59;
./benchmarks/git/leak_7/../git.h:415:11: warning: use location
  if (!ret && !size)
           ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
ret_62 = PHI <ret_57(3), ret_61(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (ret_62 == 0B)
./benchmarks/git/leak_7/../git.h:417:5: warning: use location
  if (!ret) {
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_58 = ret_57 == 0B;
./benchmarks/git/leak_7/../git.h:415:6: warning: use location
  if (!ret && !size)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:18: warning: use location
  entry = &objects[nr];
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
_71 = ret_70;
./benchmarks/git/leak_7/../git.h:424:9: warning: use location
  return ret;
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f78750e2990
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version 7
    ptr-info 0x7f7874c40048>
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_7 = strdup (name_27(D));
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e2990
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version 7
    ptr-info 0x7f7874c40048>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
Cond in fucntion add_object_array_with_path basic block 13
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 14
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
if (name_27(D) == 0B)
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^
if (name_27(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 11
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 12
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e2990
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version 7
    ptr-info 0x7f7874c40048>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# VUSE <.MEM_47>
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f78750e29d8
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version 8
    ptr-info 0x7f7874c40060>
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
_8 = strdup (path_34(D));
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e29d8
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version 8
    ptr-info 0x7f7874c40060>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
if (path_34(D) != 0B)
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^
if (path_34(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 16
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 17
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e29d8
    type <pointer_type 0x7f7874c04540
        type <integer_type 0x7f7874c04498 char public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c04540>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version 8
    ptr-info 0x7f7874c40060>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: Use after free error!: free location 
  ret = realloc(ptr, size);
      ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: Use after free error!: free location 
   ret = realloc(ptr, 1);
       ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: Use after free error!: free location 
   ret = realloc(ptr, size);
       ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: Use after free error!: free location 
    ret = realloc(ptr, 1);
        ^
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f7874c07d50 type <integer_type 0x7f78750ee7e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f78750daf90 type <integer_type 0x7f78750ee5e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f78750e2ca8
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14100 name>
    def_stmt GIMPLE_NOP
    version 27
    ptr-info 0x7f7874c40108>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_7 = strdup (name_27(D));
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:17: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e2ca8
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14100 name>
    def_stmt GIMPLE_NOP
    version 27
    ptr-info 0x7f7874c40108>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:12: warning: use location
  else if (!*name)
            ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
  else if (!*name)
          ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:43:10: warning: use location
Cond in fucntion add_object_array_with_path basic block 13
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 14
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (name_27(D) == 0B)
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
if (name_27(D) == 0B)
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
  if (!name)
     ^
if (name_27(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:41:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 11
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 12
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e2ca8
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14100 name>
    def_stmt GIMPLE_NOP
    version 27
    ptr-info 0x7f7874c40108>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f78750e2d38
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14280 path>
    def_stmt GIMPLE_NOP
    version 34
    ptr-info 0x7f7874c40120>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
_8 = strdup (path_34(D));
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:17: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f78750e2d38
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14280 path>
    def_stmt GIMPLE_NOP
    version 34
    ptr-info 0x7f7874c40120>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
bb index := 17
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
entry_24->path = _8;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:50:15: warning: use location
   entry->path = xstrdup(path);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
bb index := 18
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
entry_24->path = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:52:15: warning: use location
   entry->path = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
entry_24->mode = mode_32(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:48:14: warning: use location
  entry->mode = mode;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
bb index := 15
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
entry_24->name = _7;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:47:15: warning: use location
   entry->name = xstrdup(name);    /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
bb index := 14
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 19

======================================================================
entry_24->name = &object_array_slopbuf;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:45:15: warning: use location
   entry->name = object_array_slopbuf;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
bb index := 12
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
entry_24->name = 0B;
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:42:15: warning: use location
   entry->name = NULL;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 35

======================================================================
entry_24->item = obj_25(D);
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:40:14: warning: use location
  entry->item = obj;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
In function â€˜add_object_array_with_pathâ€™:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
 }
 ^
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_34(D) != 0B)
bb index := 16
# VUSE <.MEM_56>
return;
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
if (path_34(D) != 0B)
In function â€˜mainâ€™:
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
  if (path)
     ^
if (path_34(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:49:5: warning: use location
Cond in fucntion add_object_array_with_path basic block 16
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 17
 ================== possible direct basic block ================= 
from add_object_array_with_path basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f78750e2d38
    type <pointer_type 0x7f7874c0d2a0
        type <integer_type 0x7f7874c0d1f8 char readonly public string-flag QI
            size <integer_cst 0x7f78750dacd8 constant 8>
            unit size <integer_cst 0x7f78750dacf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f78750ee3f0 precision 8 min <integer_cst 0x7f7874c07300 -128> max <integer_cst 0x7f7874c072e8 127>
            pointer_to_this <pointer_type 0x7f7874c0d2a0>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f7874c14280 path>
    def_stmt GIMPLE_NOP
    version 34
    ptr-info 0x7f7874c40120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:add_object_array_with_path========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f7874c30340
    type <pointer_type 0x7f7874c0d150
        type <record_type 0x7f7874c0d0a8 object_array TI
            size <integer_cst 0x7f78750dac30 constant 128>
            unit size <integer_cst 0x7f78750dac48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f7874c0d0a8 fields <field_decl 0x7f7874c0c4c0 nr> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c0d150> chain <type_decl 0x7f7874c0c558 D.4020>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f7874c29360 study type <record_type 0x7f7874c0d0a8 object_array>
        addressable used TI file ./benchmarks/git/leak_7/git_leak_7.c line 63 col 22 size <integer_cst 0x7f78750dac30 128> unit size <integer_cst 0x7f78750dac48 16>
        align 128 context <function_decl 0x7f7874c05b00 main> abstract_origin <var_decl 0x7f7874c22d80 study>
        chain <var_decl 0x7f7874c293f0 found type <record_type 0x7f7874c0d0a8 object_array>
            addressable used TI file ./benchmarks/git/leak_7/git_leak_7.c line 64 col 22 size <integer_cst 0x7f78750dac30 128> unit size <integer_cst 0x7f78750dac48 16>
            align 128 context <function_decl 0x7f7874c05b00 main> abstract_origin <var_decl 0x7f7874c22cf0 found> chain <var_decl 0x7f7874c29480 is_incomplete>>>
    ./benchmarks/git/leak_7/git_leak_7.c:80:9 start: ./benchmarks/git/leak_7/git_leak_7.c:80:9 finish: ./benchmarks/git/leak_7/git_leak_7.c:80:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f7874c303c0
    type <pointer_type 0x7f7874c0d150
        type <record_type 0x7f7874c0d0a8 object_array TI
            size <integer_cst 0x7f78750dac30 constant 128>
            unit size <integer_cst 0x7f78750dac48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f7874c0d0a8 fields <field_decl 0x7f7874c0c4c0 nr> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c0d150> chain <type_decl 0x7f7874c0c558 D.4020>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f7874c293f0 found type <record_type 0x7f7874c0d0a8 object_array>
        addressable used TI file ./benchmarks/git/leak_7/git_leak_7.c line 64 col 22 size <integer_cst 0x7f78750dac30 128> unit size <integer_cst 0x7f78750dac48 16>
        align 128 context <function_decl 0x7f7874c05b00 main> abstract_origin <var_decl 0x7f7874c22cf0 found>
        chain <var_decl 0x7f7874c29480 is_incomplete type <integer_type 0x7f78750ee5e8 int>
            used SI file ./benchmarks/git/leak_7/git_leak_7.c line 65 col 6
            size <integer_cst 0x7f78750dae28 constant 32>
            unit size <integer_cst 0x7f78750dae40 constant 4>
            align 32 context <function_decl 0x7f7874c05b00 main> abstract_origin <var_decl 0x7f7874c22c60 is_incomplete> chain <var_decl 0x7f7874c29510 i>>>
    ./benchmarks/git/leak_7/git_leak_7.c:81:9 start: ./benchmarks/git/leak_7/git_leak_7.c:81:9 finish: ./benchmarks/git/leak_7/git_leak_7.c:81:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c381f8
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _12 = &commit.object;
    version 12
    ptr-info 0x7f7874c40210>
_12 = &commit.object;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_140 = VDEF <.MEM_139>
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
bb index := 4
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 35

======================================================================
# .MEM_140 = VDEF <.MEM_139>
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
  add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
  ^
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c381f8
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _12 = &commit.object;
    version 12
    ptr-info 0x7f7874c40210>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_140 = VDEF <.MEM_139>
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
bb index := 4
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 35

======================================================================
# .MEM_140 = VDEF <.MEM_139>
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c381f8
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _12 = &commit.object;
    version 12
    ptr-info 0x7f7874c40210>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c381f8
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _12 = &commit.object;
    version 12
    ptr-info 0x7f7874c40210>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c38240
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = &commit.object;
    version 13
    ptr-info 0x7f7874c40228>
_13 = &commit.object;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_141 = VDEF <.MEM_140>
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
bb index := 4
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 35

======================================================================
# .MEM_141 = VDEF <.MEM_140>
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
  add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
  ^
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c38240
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = &commit.object;
    version 13
    ptr-info 0x7f7874c40228>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_141 = VDEF <.MEM_140>
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
bb index := 4
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 35 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 35

======================================================================
# .MEM_141 = VDEF <.MEM_140>
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c38240
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = &commit.object;
    version 13
    ptr-info 0x7f7874c40228>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c38240
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = &commit.object;
    version 13
    ptr-info 0x7f7874c40228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c385e8
    type <pointer_type 0x7f7874c0dbd0
        type <record_type 0x7f7874c049d8 object_id BLK
            size <integer_cst 0x7f7874c071b0 constant 160>
            unit size <integer_cst 0x7f7874c07198 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f7874c049d8 fields <field_decl 0x7f7874c06130 hash> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c0dbd0> chain <type_decl 0x7f7874c061c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _26 = &c_23->object.oid;
    version 26
    ptr-info 0x7f7874c40288>
_26 = &c_23->object.oid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = parse_object (_26);
./benchmarks/git/leak_7/git_leak_7.c:90:29: warning: use location
   if (!c->object.parsed && !parse_object(&c->object.oid))
                             ^
this stmt is child function---parse_object-----

 ================== trace ================== 
 <ssa_name 0x7f7874c385e8
    type <pointer_type 0x7f7874c0dbd0
        type <record_type 0x7f7874c049d8 object_id BLK
            size <integer_cst 0x7f7874c071b0 constant 160>
            unit size <integer_cst 0x7f7874c07198 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f7874c049d8 fields <field_decl 0x7f7874c06130 hash> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c0dbd0> chain <type_decl 0x7f7874c061c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _26 = &c_23->object.oid;
    version 26
    ptr-info 0x7f7874c40288>
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:25: warning: use location
   if (!c->object.parsed && !parse_object(&c->object.oid))
                         ^
if (_27 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_7/git_leak_7.c:90:25: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c385e8
    type <pointer_type 0x7f7874c0dbd0
        type <record_type 0x7f7874c049d8 object_id BLK
            size <integer_cst 0x7f7874c071b0 constant 160>
            unit size <integer_cst 0x7f7874c07198 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f7874c049d8 fields <field_decl 0x7f7874c06130 hash> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c0dbd0> chain <type_decl 0x7f7874c061c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _26 = &c_23->object.oid;
    version 26
    ptr-info 0x7f7874c40288>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_154 = VDEF <.MEM_136>
free (_118);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
     free(study.objects);    /* memory leak */
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_154>
free (_119);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
     free(found.objects);    /* memory leak */
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c38bd0
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _47 = &p_40->object;
    version 47
    ptr-info 0x7f7874c402e8>
_47 = &p_40->object;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_147 = VDEF <.MEM_146>
add_object_array_with_path (_47, 0B, &study, 12288, 0B);
add_object_array_with_path (_47, 0B, &study, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
  add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
  ^
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c38bd0
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _47 = &p_40->object;
    version 47
    ptr-info 0x7f7874c402e8>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_147 = VDEF <.MEM_146>
add_object_array_with_path (_47, 0B, &study, 12288, 0B);
add_object_array_with_path (_47, 0B, &study, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
  add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
  ^
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c38bd0
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _47 = &p_40->object;
    version 47
    ptr-info 0x7f7874c402e8>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c38bd0
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _47 = &p_40->object;
    version 47
    ptr-info 0x7f7874c402e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_154 = VDEF <.MEM_136>
free (_118);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
     free(study.objects);    /* memory leak */
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_154>
free (_119);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
     free(found.objects);    /* memory leak */
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free :8 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c38c18
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _48 = &p_40->object;
    version 48
    ptr-info 0x7f7874c40300>
_48 = &p_40->object;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_148 = VDEF <.MEM_147>
add_object_array_with_path (_48, 0B, &found, 12288, 0B);
add_object_array_with_path (_48, 0B, &found, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
  add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
  ^
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c38c18
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _48 = &p_40->object;
    version 48
    ptr-info 0x7f7874c40300>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_148 = VDEF <.MEM_147>
add_object_array_with_path (_48, 0B, &found, 12288, 0B);
add_object_array_with_path (_48, 0B, &found, 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:2: warning: use location
  add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
  ^
this stmt is child function---add_object_array_with_path-----

 ================== trace ================== 
 <ssa_name 0x7f7874c38c18
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _48 = &p_40->object;
    version 48
    ptr-info 0x7f7874c40300>
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 5 level :0========  [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
ret_57 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:414:6: warning: use location
  ret = realloc(ptr, size);
      ^
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
ret_61 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:416:7: warning: use location
   ret = realloc(ptr, 1);
       ^
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
[40;31m  find free stmt free same pointer [0m
# .MEM_77 = VDEF <.MEM_72>
ret_63 = realloc (objects_17, _3);
./benchmarks/git/leak_7/../git.h:418:7: warning: use location
   ret = realloc(ptr, size);
       ^
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_77>
ret_67 = realloc (objects_17, 1);
./benchmarks/git/leak_7/../git.h:420:8: warning: use location
    ret = realloc(ptr, 1);
        ^
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7874c38c18
    type <pointer_type 0x7f7874c045e8
        type <record_type 0x7f7874c04c78 object BLK
            size <integer_cst 0x7f78750f60a8 constant 192>
            unit size <integer_cst 0x7f78750f6078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7f7874c04c78 fields <field_decl 0x7f7874c064c0 parsed> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c045e8> chain <type_decl 0x7f7874c06558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _48 = &p_40->object;
    version 48
    ptr-info 0x7f7874c40300>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_154 = VDEF <.MEM_136>
free (_118);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
     free(study.objects);    /* memory leak */
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_154>
free (_119);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
     free(found.objects);    /* memory leak */
     ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free :8 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7874c38f30
    type <pointer_type 0x7f7874c0dbd0
        type <record_type 0x7f7874c049d8 object_id BLK
            size <integer_cst 0x7f7874c071b0 constant 160>
            unit size <integer_cst 0x7f7874c07198 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f7874c049d8 fields <field_decl 0x7f7874c06130 hash> context <translation_unit_decl 0x7f78750e5168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7f7874c0dbd0> chain <type_decl 0x7f7874c061c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f78750dabe8 constant 64>
        unit size <integer_cst 0x7f78750dac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _59 = &_58->object.oid;
    version 59
    ptr-info 0x7f7874c40390>
_59 = &_58->object.oid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:add_object_array_with_path=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
nr_15 = array_14(D)->nr;
alloc_16 = array_14(D)->alloc;
objects_17 = array_14(D)->objects;
if (nr_15 >= alloc_16)
  goto <bb 3>; [33.00%]
else
  goto <bb 11>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [33.00%]:
_1 = alloc_16 + 32;
alloc_18 = _1 * 2;
_2 = st_mult (32, alloc_18);
_3 = (long unsigned int) _2;
ret_57 = realloc (objects_17, _3);
_58 = ret_57 == 0B;
_59 = _3 == 0;
_60 = _58 & _59;
if (_60 != 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [10.89%]:
ret_61 = realloc (objects_17, 1);

=======is loop:0=========

 bb index 5 
<bb 5> [33.00%]:
# ret_62 = PHI <ret_57(3), ret_61(4)>
if (ret_62 == 0B)
  goto <bb 6>; [19.86%]
else
  goto <bb 10>; [80.14%]

=======is loop:0=========

 bb index 6 
<bb 6> [6.55%]:
ret_63 = realloc (objects_17, _3);
_64 = ret_63 == 0B;
_65 = _3 == 0;
_66 = _64 & _65;
if (_66 != 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [2.16%]:
ret_67 = realloc (objects_17, 1);

=======is loop:0=========

 bb index 8 
<bb 8> [6.55%]:
# ret_68 = PHI <ret_63(6), ret_67(7)>
if (ret_68 == 0B)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [0.00%]:
_69 = __printf_chk (1, "Out of memory, realloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [33.00%]:
# ret_70 = PHI <ret_62(5), ret_68(8)>
_71 = ret_70;
_81 = ret_70;
objects_21 = _81;
array_14(D)->alloc = alloc_18;
array_14(D)->objects = objects_21;

=======is loop:0=========

 bb index 11 
<bb 11> [100.00%]:
# objects_9 = PHI <objects_17(2), objects_21(10)>
_4 = (long unsigned int) nr_15;
_5 = _4 * 32;
entry_24 = objects_9 + _5;
entry_24->item = obj_25(D);
if (name_27(D) == 0B)
  goto <bb 12>; [30.00%]
else
  goto <bb 13>; [70.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [30.00%]:
entry_24->name = 0B;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [70.00%]:
_6 = *name_27(D);
if (_6 == 0)
  goto <bb 14>; [67.00%]
else
  goto <bb 15>; [33.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [46.90%]:
entry_24->name = &object_array_slopbuf;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [23.10%]:
_7 = strdup (name_27(D));
entry_24->name = _7;

=======is loop:0=========

 bb index 16 
<bb 16> [100.00%]:
entry_24->mode = mode_32(D);
if (path_34(D) != 0B)
  goto <bb 17>; [49.47%]
else
  goto <bb 18>; [50.53%]

=======is loop:0=========

 bb index 17 
<bb 17> [49.47%]:
_8 = strdup (path_34(D));
entry_24->path = _8;
goto <bb 19>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [50.53%]:
entry_24->path = 0B;

=======is loop:0=========

 bb index 19 
<bb 19> [100.00%]:
nr_38 = nr_15 + 1;
array_14(D)->nr = nr_38;
return;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [25.02%]:
_4 = commit.object.flags;
_5 = (unsigned int) _4;
_6 = _4 & 1;
_7 = (unsigned int) _6;
if (_6 != 0)
  goto <bb 35>; [46.00%]
else
  goto <bb 3>; [54.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [13.51%]:
_8 = commit.object.flags;
_9 = (unsigned int) _8;
_10 = _8 & 1024;
_11 = (unsigned int) _10;
if (_10 != 0)
  goto <bb 35>; [63.36%]
else
  goto <bb 4>; [36.64%]

=======is loop:0=========

 bb index 4 
<bb 4> [4.95%]:
memset (&study, 0, 16);
memset (&found, 0, 16);
_12 = &commit.object;
add_object_array_with_path (_12, 0B, &study, 12288, 0B);
_13 = &commit.object;
add_object_array_with_path (_13, 0B, &found, 12288, 0B);
_14 = commit.object.flags;
_15 = _14 | 2048;
commit.object.flags = _15;
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [31.72%]:
_16 = study.objects;
_17 = study.nr;
_18 = _17 + 4294967295;
study.nr = _18;
_19 = study.nr;
_20 = (long unsigned int) _19;
_21 = _20 * 32;
_22 = _16 + _21;
c_23 = _22->item;
_24 = BIT_FIELD_REF <c_23->object, 8, 0>;
_25 = _24 & 1;
if (_25 == 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [10.47%]:
_26 = &c_23->object.oid;
_27 = parse_object (_26);
if (_27 == 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [5.23%]:
_28 = c_23->object.flags;
_29 = _28 | 1024;
c_23->object.flags = _29;

=======is loop:1=========

 bb index 8 
<bb 8> [31.72%]:
_30 = c_23->object.flags;
_31 = (unsigned int) _30;
_32 = _30 & 1024;
_33 = (unsigned int) _32;
if (_32 != 0)
  goto <bb 19>; [7.50%]
else
  goto <bb 9>; [92.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [29.34%]:
_34 = c_23->object.flags;
_35 = (unsigned int) _34;
_36 = _34 & 1;
_37 = (unsigned int) _36;
if (_36 != 0)
  goto <bb 10>; [48.88%]
else
  goto <bb 11>; [51.12%]

=======is loop:1=========

 bb index 10 
<bb 10> [14.34%]:
// predicted unlikely by continue predictor.
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [15.00%]:
parent_38 = c_23->parents;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [85.00%]:
p_40 = parent_39->item;
_41 = p_40->object.flags;
_42 = (unsigned int) _41;
_43 = _41 & 2048;
_44 = (unsigned int) _43;
if (_43 != 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [42.50%]:
// predicted unlikely by continue predictor.
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [42.50%]:
_45 = p_40->object.flags;
_46 = _45 | 2048;
p_40->object.flags = _46;
_47 = &p_40->object;
add_object_array_with_path (_47, 0B, &study, 12288, 0B);
_48 = &p_40->object;
add_object_array_with_path (_48, 0B, &found, 12288, 0B);

=======is loop:1=========

 bb index 15 
<bb 15> [85.00%]:
parent_49 = parent_39->next;

=======is loop:1=========

 bb index 16 
<bb 16> [100.00%]:
# parent_39 = PHI <parent_38(11), parent_49(15)>
if (parent_39 != 0B)
  goto <bb 12>; [85.00%]
else
  goto <bb 17>; [15.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [29.34%]:

=======is loop:1=========

 bb index 18 
<bb 18> [34.29%]:
_50 = study.nr;
if (_50 != 0)
  goto <bb 5>; [92.50%]
else
  goto <bb 19>; [7.50%]

=======is loop:0=========

 bb index 19 
<bb 19> [4.95%]:
# is_incomplete_51 = PHI <1(8), 0(18)>
if (is_incomplete_51 == 0)
  goto <bb 23>; [50.00%]
else
  goto <bb 27>; [50.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [14.03%]:
_52 = found.objects;
_54 = (long unsigned int) i_53;
_55 = _54 * 32;
_56 = _52 + _55;
c_57 = _56->item;
_58 = c_57->tree;
_59 = &_58->object.oid;
_60 = tree_is_complete (_59);
if (_60 == 0)
  goto <bb 21>; [50.00%]
else
  goto <bb 22>; [50.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [7.01%]:
_61 = c_57->object.flags;
_62 = _61 | 1024;
c_57->object.flags = _62;

=======is loop:1=========

 bb index 22 
<bb 22> [14.03%]:
# is_incomplete_123 = PHI <is_incomplete_66(20), 1(21)>
i_63 = i_53 + 1;

=======is loop:1=========

 bb index 23 
<bb 23> [16.50%]:
# is_incomplete_66 = PHI <is_incomplete_51(19), is_incomplete_123(22)>
# i_53 = PHI <0(19), i_63(22)>
_64 = found.nr;
_65 = (unsigned int) i_53;
if (_64 > _65)
  goto <bb 20>; [85.00%]
else
  goto <bb 24>; [15.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [2.48%]:
if (is_incomplete_66 == 0)
  goto <bb 26>; [50.00%]
else
  goto <bb 27>; [50.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [7.01%]:
_67 = found.objects;
_69 = (long unsigned int) i_68;
_70 = _69 * 32;
_71 = _67 + _70;
_72 = _71->item;
_73 = _72->flags;
_74 = found.objects;
_75 = (long unsigned int) i_68;
_76 = _75 * 32;
_77 = _74 + _76;
_78 = _77->item;
_79 = _73 | 1;
_78->flags = _79;
i_80 = i_68 + 1;

=======is loop:1=========

 bb index 26 
<bb 26> [8.25%]:
# i_68 = PHI <0(24), i_80(25)>
_81 = found.nr;
_82 = (unsigned int) i_68;
if (_81 > _82)
  goto <bb 25>; [85.00%]
else
  goto <bb 27>; [15.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [4.95%]:
# is_incomplete_99 = PHI <is_incomplete_51(19), is_incomplete_66(24), is_incomplete_66(26)>
goto <bb 29>; [100.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [28.06%]:
_83 = found.objects;
_85 = (long unsigned int) i_84;
_86 = _85 * 32;
_87 = _83 + _86;
_88 = _87->item;
_89 = _88->flags;
_90 = found.objects;
_91 = (long unsigned int) i_84;
_92 = _91 * 32;
_93 = _90 + _92;
_94 = _93->item;
_95 = _89 & 134215679;
_94->flags = _95;
i_96 = i_84 + 1;

=======is loop:1=========

 bb index 29 
<bb 29> [33.01%]:
# i_84 = PHI <0(27), i_96(28)>
_97 = found.nr;
_98 = (unsigned int) i_84;
if (_97 > _98)
  goto <bb 28>; [85.00%]
else
  goto <bb 30>; [15.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [4.95%]:
if (is_incomplete_99 != 0)
  goto <bb 31>; [50.00%]
else
  goto <bb 33>; [50.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [2.48%]:
_100 = commit.object.flags;
_101 = _100 | 1024;
commit.object.flags = _101;
goto <bb 34>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [14.03%]:
_102 = found.objects;
_104 = (long unsigned int) i_103;
_105 = _104 * 32;
_106 = _102 + _105;
_107 = _106->item;
_108 = _107->flags;
_109 = found.objects;
_110 = (long unsigned int) i_103;
_111 = _110 * 32;
_112 = _109 + _111;
_113 = _112->item;
_114 = _108 | 1;
_113->flags = _114;
i_115 = i_103 + 1;

=======is loop:1=========

 bb index 33 
<bb 33> [16.50%]:
# i_103 = PHI <0(30), i_115(32)>
_116 = found.nr;
_117 = (unsigned int) i_103;
if (_116 > _117)
  goto <bb 32>; [85.00%]
else
  goto <bb 34>; [15.00%]

=======is loop:0=========

 bb index 34 
<bb 34> [4.95%]:
_118 = study.objects;
free (_118);
_119 = found.objects;
free (_119);
_120 = is_incomplete_99 == 0;
_121 = (int) _120;

=======is loop:0=========

 bb index 35 
<bb 35> [25.02%]:
# _122 = PHI <1(2), 0(3), _121(34)>
study ={v} {CLOBBER};
found ={v} {CLOBBER};
_159 = _122;
commit ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 13 [0m
[40;34m    used_stmt array stack totalsize of : 5864 [0m
[40;34m    collect time: : 0.000486 s [0m
[40;34m    algorithm time: 0.103979 s [0m
[40;34m    gimple stmt count : : 199 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/cciKwClM.ltrans0.ltrans.o: in function `add_object_array_with_path':
<artificial>:(.text+0x9c): undefined reference to `st_mult'
/usr/bin/ld: /tmp/cciKwClM.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x287): undefined reference to `parse_object'
/usr/bin/ld: <artificial>:(.text+0x339): undefined reference to `tree_is_complete'
collect2: error: ld returned 1 exit status
