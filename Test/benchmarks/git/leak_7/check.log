../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/leak_7/git_leak_7.c:10:
./benchmarks/git/leak_7/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_7/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_7/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_7/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_7/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_7/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_7/../git.h: In function ‘move_array’:
./benchmarks/git/leak_7/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_7/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_7/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_7/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_7/git_leak_7.c:9:
./benchmarks/git/leak_7/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_7/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_7/git_leak_7.c:10:
./benchmarks/git/leak_7/../git.h: At top level:
./benchmarks/git/leak_7/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_7/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_7/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_7/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_7/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_7/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
In file included from ./benchmarks/git/leak_7/git_leak_7.c:9:
./benchmarks/git/leak_7/git_leak_7.c: In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:47:31: note: in expansion of macro ‘xstrdup’
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^~~~~~~
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:50:31: note: in expansion of macro ‘xstrdup’
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                               ^~~~~~~
./benchmarks/git/leak_7/git_leak_7.c: In function ‘commit_is_complete’:
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   80 |         memset(&study, 0, sizeof(study));
      |         ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   80 |         memset(&study, 0, sizeof(study));
      |         ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:80:9: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: implicit declaration of function ‘parse_object’ [-Wimplicit-function-declaration]
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^~~~~~~~~~~~
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: implicit declaration of function ‘tree_is_complete’; did you mean ‘commit_is_complete’? [-Wimplicit-function-declaration]
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^~~~~~~~~~~~~~~~
      |                              commit_is_complete

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 50%)
 phase parsing                      :   0.03 ( 75%)   0.01 ( 50%)   0.04 ( 67%)  1073k ( 41%)
 phase opt and generate             :   0.01 ( 25%)   0.01 ( 50%)   0.02 ( 33%)   206k (  8%)
 callgraph ipa passes               :   0.01 ( 25%)   0.01 ( 50%)   0.01 ( 17%)   110k (  4%)
 ipa function summary               :   0.01 ( 25%)   0.01 ( 50%)   0.00 (  0%)    11k (  0%)
 lto stream output                  :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 preprocessing                      :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)   320k ( 12%)
 lexical analysis                   :   0.00 (  0%)   0.01 ( 50%)   0.02 ( 33%)     0  (  0%)
 parser (global)                    :   0.02 ( 50%)   0.00 (  0%)   0.01 ( 17%)   567k ( 22%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    73k (  3%)
 tree gimplify                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    62k (  2%)
 TOTAL                              :   0.04          0.02          0.06         2588k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 phase opt and generate             :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa inlining heuristics            :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2214k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_is_complete--
=======node_fun:commit_is_complete=========
node:= 2 
 	next_branch :=35
	next_branch :=3
node:= 3 
 	next_branch :=35
	next_branch :=4
node:= 4 
 	next_branch :=18
addr_expraddr_expraddr_expraddr_expraddr_expr------memset--
addr_expraddr_expraddr_expraddr_expraddr_expr------memset--
addr_expraddr_expraddr_expraddr_expraddr_expr------add_object_array--
addr_expraddr_expraddr_expraddr_expraddr_expr------add_object_array--
node:= 5 
 	next_branch :=6
	next_branch :=8
node:= 6 
 	next_branch :=7
	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------parse_object--
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=19
	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=17
node:= 11 
 	next_branch :=16
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=15
node:= 14 
 	next_branch :=15
addr_expraddr_expraddr_expraddr_expraddr_expr------add_object_array--
addr_expraddr_expraddr_expraddr_expraddr_expr------add_object_array--
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=12
	next_branch :=17
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=5
	next_branch :=19
node:= 19 
 	next_branch :=38
	next_branch :=27
node:= 38 
 	next_branch :=23
node:= 20 
 	next_branch :=21
	next_branch :=22
addr_expraddr_expraddr_expraddr_expraddr_expr------tree_is_complete--
node:= 21 
 	next_branch :=22
node:= 22 
 	next_branch :=23
node:= 23 
 	next_branch :=20
	next_branch :=24
node:= 24 
 	next_branch :=37
	next_branch :=27
node:= 37 
 	next_branch :=26
node:= 25 
 	next_branch :=26
node:= 26 
 	next_branch :=25
	next_branch :=27
node:= 27 
 	next_branch :=29
node:= 28 
 	next_branch :=29
node:= 29 
 	next_branch :=28
	next_branch :=30
node:= 30 
 	next_branch :=31
	next_branch :=36
node:= 36 
 	next_branch :=33
node:= 31 
 	next_branch :=34
node:= 32 
 	next_branch :=33
node:= 33 
 	next_branch :=32
	next_branch :=34
node:= 34 
 	next_branch :=35
=======node_fun:add_object_array=========
addr_expraddr_expraddr_expraddr_expraddr_expr------add_object_array_with_path--
=======node_fun:add_object_array_with_path=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------st_mult--
addr_expraddr_expraddr_expraddr_expraddr_expr------xrealloc--
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=9
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=9
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=12
node:= 11 
 	next_branch :=12
=======node_fun:xrealloc=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 27 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
commit_is_complete (&commit);
# .MEM_161 = VDEF <.MEM_160(D)>
memset (&study, 0, 16);
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
# .MEM_163 = VDEF <.MEM_162>
add_object_array (_4, 0B, &study);
# .MEM_164 = VDEF <.MEM_163>
add_object_array (_5, 0B, &found);
# .MEM_167 = VDEF <.MEM_166>
_18 = parse_object (_17);
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
commit_is_complete (&commit);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
memset (&study, 0, 16);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
memset (&found, 0, 16);
========================================================
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
=============== *this point analyzable =================
add_object_array (_4, 0B, &study);
========================================================
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
=============== *this point analyzable =================
add_object_array (_5, 0B, &found);
========================================================
=============== *this point analyzable =================
_18 = parse_object (_17);
========================================================
=============== *this point analyzable =================
_18 = parse_object (_17);
========================================================
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
=============== *this point analyzable =================
add_object_array (_26, 0B, &study);
========================================================
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
=============== *this point analyzable =================
add_object_array (_27, 0B, &found);
========================================================
=============== *this point analyzable =================
_35 = tree_is_complete (_34);
========================================================
=============== *this point analyzable =================
_35 = tree_is_complete (_34);
========================================================
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
=============== *this point analyzable =================
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
========================================================
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
=============== *this point analyzable =================
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
========================================================
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
=============== *this point analyzable =================
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
========================================================
=============== *this point analyzable =================
_2 = st_mult (32, alloc_18);
========================================================
=============== *this point analyzable =================
_2 = st_mult (32, alloc_18);
========================================================
=============== *this point analyzable =================
objects_21 = xrealloc (objects_17, _3);
========================================================
=============== *this point analyzable =================
objects_21 = xrealloc (objects_17, _3);
========================================================
=============== *this point analyzable =================
objects_21 = xrealloc (objects_17, _3);
========================================================
=============== *this point analyzable =================
_7 = strdup (name_27(D));
========================================================
=============== *this point analyzable =================
_8 = strdup (path_34(D));
========================================================
=============== *this point analyzable =================
ret_17 = realloc (ptr_14(D), size_15(D));
========================================================
=============== *this point analyzable =================
ret_19 = realloc (ptr_14(D), 1);
========================================================
=============== *this point analyzable =================
ret_21 = realloc (ptr_14(D), size_15(D));
========================================================
=============== *this point analyzable =================
ret_23 = realloc (ptr_14(D), 1);
========================================================
=============== *this point analyzable =================
_7 = strdup (name_27(D));
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:commit_is_complete========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path commit_is_complete  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tree_is_complete========= [0m
[40;33m =======POP node_fun stack:tree_is_complete========= [0m
[40;42m =======pre add _ fucntion:add_object_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_object_array  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_object_array_with_path  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:add_object_array_with_path========= [0m
[40;42m =======start_check_funciton:add_object_array_with_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch --------
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_33 = VDEF <.MEM_32>
exit (1);
./benchmarks/git/leak_7/../git.h:422:25: warning: use location
  422 |                         die("Out of memory, realloc failed%s", "");
      |                         ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :5 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:31: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:12: warning: use location
   49 |         if (path)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array_with_path========= [0m
[40;42m =======pre_check_funciton:add_object_array========= [0m
[40;42m =======start_check_funciton:add_object_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:commit_is_complete========= [0m
[40;42m =======start_check_funciton:commit_is_complete========= [0m

dot graph START

======================================================================
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_161 = VDEF <.MEM_160(D)>
memset (&study, 0, 16);
memset (&study, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: use location
   80 |         memset(&study, 0, sizeof(study));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_161 = VDEF <.MEM_160(D)>
memset (&study, 0, 16);
memset (&study, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:89:43: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _8 + _13;
./benchmarks/git/leak_7/git_leak_7.c:89:51: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_119 = _14->item;
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_122 = c_119->parents;
./benchmarks/git/leak_7/git_leak_7.c:99:29: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location
this stmt have mutiple branch ---memset-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (parent_95 != 0B)
./benchmarks/git/leak_7/git_leak_7.c:99:43: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_123 = parent_95->item;
./benchmarks/git/leak_7/git_leak_7.c:100:40: warning: use location
  100 |                         struct commit *p = parent->item;
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with study ========= [0m
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with study ========= [0m
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_123->object.flags = _25;
./benchmarks/git/leak_7/git_leak_7.c:103:41: warning: use location
  103 |                         p->object.flags |= STUDYING;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_123->object.flags = _25;
./benchmarks/git/leak_7/git_leak_7.c:103:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = p_123->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:103:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = p_123->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:101:38: warning: use location
  101 |                         if (p->object.flags & STUDYING)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = _23 & 2048;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 != 0)
./benchmarks/git/leak_7/git_leak_7.c:101:28: warning: use location
  101 |                         if (p->object.flags & STUDYING)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = c_119->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:97:35: warning: use location
   97 |                 else if (c->object.flags & SEEN)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = c_119->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:93:30: warning: use location
   93 |                 if (c->object.flags & INCOMPLETE) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _21 & 1024;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_119->object.flags = _20;
./benchmarks/git/leak_7/git_leak_7.c:91:41: warning: use location
   91 |                         c->object.flags |= INCOMPLETE;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_119->object.flags = _20;
./benchmarks/git/leak_7/git_leak_7.c:91:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = c_119->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:91:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &c_119->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = parse_object (_17);
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = BIT_FIELD_REF <c_119->object, 8, 0>;
./benchmarks/git/leak_7/git_leak_7.c:90:21: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = _15 & 1;
./benchmarks/git/leak_7/git_leak_7.c:90:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:20: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:89:59: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9 + 4294967295;
./benchmarks/git/leak_7/git_leak_7.c:89:52: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
study.nr = _10;
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:89:59: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:85:21: warning: use location
   85 |         while (study.nr) {
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/git/leak_7/git_leak_7.c:85:16: warning: use location
   85 |         while (study.nr) {
      |                ^
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: free in this location
  145 |     free(study.objects);    /* memory leak */
      |     ^

===== possiable asias =====
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
if (parent_95 != 0B)
./benchmarks/git/leak_7/git_leak_7.c:99:43: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
if (parent_95 != 0B)
./benchmarks/git/leak_7/git_leak_7.c:99:43: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_147>
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_147>
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
_27 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_150>
_28 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:85:21: warning: use location
   85 |         while (study.nr) {
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_150>
_28 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:85:21: warning: use location
   85 |         while (study.nr) {
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
if (_28 != 0)
./benchmarks/git/leak_7/git_leak_7.c:85:16: warning: use location
   85 |         while (study.nr) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
if (_28 != 0)
./benchmarks/git/leak_7/git_leak_7.c:85:16: warning: use location
   85 |         while (study.nr) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_158>
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_158>
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:9 [0m
[40;31m  	possible double free [rigorous]:9 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:9 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fe775f89000 found
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:64:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe776cfff30 is_incomplete>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fe775f89000 found
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:64:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe776cfff30 is_incomplete>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_163 = VDEF <.MEM_162>
add_object_array (_4, 0B, &study);
add_object_array (_4, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
   82 |         add_object_array(&commit->object, NULL, &study);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_163 = VDEF <.MEM_162>
add_object_array (_4, 0B, &study);
add_object_array (_4, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
   82 |         add_object_array(&commit->object, NULL, &study);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_164 = VDEF <.MEM_163>
add_object_array (_5, 0B, &found);
add_object_array (_5, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
   83 |         add_object_array(&commit->object, NULL, &found);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_164 = VDEF <.MEM_163>
add_object_array (_5, 0B, &found);
add_object_array (_5, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
   83 |         add_object_array(&commit->object, NULL, &found);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_167 = VDEF <.MEM_166>
_18 = parse_object (_17);
_18 = parse_object (_17);
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_18 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:39: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>

 ================== pre trace ptable ================== 
trace fucntion name:parse_object 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>
is Other function parse_object
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_167 = VDEF <.MEM_166>
_18 = parse_object (_17);
_18 = parse_object (_17);
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_18 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:39: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_35 == 0)
./benchmarks/git/leak_7/git_leak_7.c:116:28: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>

 ================== pre trace ptable ================== 
trace fucntion name:tree_is_complete 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>
is Other function tree_is_complete
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_35 == 0)
./benchmarks/git/leak_7/git_leak_7.c:116:28: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:commit_is_complete========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_2 = VDEF <.MEM_1(D)>
commit_is_complete (&commit);
commit_is_complete (&commit);
./benchmarks/git/leak_7/git_leak_7.c:153:5: warning: use location
  153 |     commit_is_complete(&commit);
      |     ^
this stmt call this function :commit_is_complete
trace fucntion name:commit_is_complete 
[40;44m =======trace_function_path commit_is_complete  function_call count: 5 level :0========  [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
[40;31m  find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
# .MEM_178 = VDEF <.MEM_177>
free (_85);
[40;31m  find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:commit_is_complete========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
   82 |         add_object_array(&commit->object, NULL, &study);
      |         ^
_4 = &commit_112(D)->object;
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
   83 |         add_object_array(&commit->object, NULL, &found);
      |         ^
_5 = &commit_112(D)->object;
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:89:43: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                           ^
_8 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:89:43: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:89:51: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                   ^
_14 = _8 + _13;
./benchmarks/git/leak_7/git_leak_7.c:89:51: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:c========= [0m
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                   ^
c_119 = _14->item;
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
c_119

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^
_17 = &c_119->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:parent========= [0m
./benchmarks/git/leak_7/git_leak_7.c:99:29: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                             ^
parent_122 = c_119->parents;
./benchmarks/git/leak_7/git_leak_7.c:99:29: warning: use location
parent_122

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_7/git_leak_7.c:100:40: warning: use location
  100 |                         struct commit *p = parent->item;
      |                                        ^
p_123 = parent_95->item;
./benchmarks/git/leak_7/git_leak_7.c:100:40: warning: use location
p_123

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^
_26 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^
_27 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:parent========= [0m
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
parent_127

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:c========= [0m
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
c_133

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
_33

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
_73

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
_79

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
_85

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tree_is_complete========= [0m
[40;46m =======add node_fun stack:tree_is_complete========= [0m
[40;42m =======pre add _ fucntion:add_object_array========= [0m
[40;46m =======add node_fun stack:add_object_array========= [0m
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :1========  [0m
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :2========  [0m
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :3========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:6 
# .MEM_2 = VDEF <.MEM_1(D)>
commit_is_complete (&commit);
commit_is_complete (&commit);
./benchmarks/git/leak_7/git_leak_7.c:153:5: warning: use location
  153 |     commit_is_complete(&commit);
      |     ^
this stmt call this function :commit_is_complete
trace fucntion name:commit_is_complete 
[40;44m =======trace_function_path commit_is_complete  function_call count: 5 level :0========  [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
[40;31m  find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
# .MEM_178 = VDEF <.MEM_177>
free (_85);
[40;31m  find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:commit_is_complete========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
   82 |         add_object_array(&commit->object, NULL, &study);
      |         ^
_4 = &commit_112(D)->object;
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
   83 |         add_object_array(&commit->object, NULL, &found);
      |         ^
_5 = &commit_112(D)->object;
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:89:43: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                           ^
_8 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:89:43: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:89:51: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                   ^
_14 = _8 + _13;
./benchmarks/git/leak_7/git_leak_7.c:89:51: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:c========= [0m
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                   ^
c_119 = _14->item;
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
c_119

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^
_17 = &c_119->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:parent========= [0m
./benchmarks/git/leak_7/git_leak_7.c:99:29: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                             ^
parent_122 = c_119->parents;
./benchmarks/git/leak_7/git_leak_7.c:99:29: warning: use location
parent_122

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_7/git_leak_7.c:100:40: warning: use location
  100 |                         struct commit *p = parent->item;
      |                                        ^
p_123 = parent_95->item;
./benchmarks/git/leak_7/git_leak_7.c:100:40: warning: use location
p_123

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^
_26 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^
_27 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:parent========= [0m
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
parent_127

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:c========= [0m
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
c_133

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
_33

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
_73

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
_79

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
_85

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tree_is_complete========= [0m
[40;46m =======add node_fun stack:tree_is_complete========= [0m
[40;42m =======pre add _ fucntion:add_object_array========= [0m
[40;46m =======add node_fun stack:add_object_array========= [0m
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :1========  [0m
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :2========  [0m
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:commit========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :3========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘main’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <var_decl 0x7fe776cffc60 commit
    type <record_type 0x7fe775f7ab28 commit BLK
        size <integer_cst 0x7fe776475000 constant 512>
        unit-size <integer_cst 0x7fe77652c090 constant 64>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7ab28
        fields <field_decl 0x7fe775f72be0 object type <record_type 0x7fe775f7a000 object>
            BLK ./benchmarks/git/leak_7/../git.h:313:16
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7ab28 commit> chain <field_decl 0x7fe775f72b48 util>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7abd0>>
    addressable BLK ./benchmarks/git/leak_7/git_leak_7.c:152:19 size <integer_cst 0x7fe776475000 512> unit-size <integer_cst 0x7fe77652c090 64>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70e00 main>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m

 ================== trace ================== 
trace fucntion free:12 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:commit_is_complete========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path commit_is_complete  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tree_is_complete========= [0m
[40;33m =======POP node_fun stack:tree_is_complete========= [0m
[40;42m =======pre add _ fucntion:add_object_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_object_array  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_object_array_with_path  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:add_object_array_with_path========= [0m
[40;42m =======start_check_funciton:add_object_array_with_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch --------
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_33 = VDEF <.MEM_32>
exit (1);
./benchmarks/git/leak_7/../git.h:422:25: warning: use location
  422 |                         die("Out of memory, realloc failed%s", "");
      |                         ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :5 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:31: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:12: warning: use location
   49 |         if (path)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array_with_path========= [0m
[40;42m =======pre_check_funciton:add_object_array========= [0m
[40;42m =======start_check_funciton:add_object_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre_check_funciton:commit_is_complete========= [0m
[40;42m =======start_check_funciton:commit_is_complete========= [0m

dot graph START

======================================================================
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_161 = VDEF <.MEM_160(D)>
memset (&study, 0, 16);
memset (&study, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: use location
   80 |         memset(&study, 0, sizeof(study));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_161 = VDEF <.MEM_160(D)>
memset (&study, 0, 16);
memset (&study, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:89:43: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _8 + _13;
./benchmarks/git/leak_7/git_leak_7.c:89:51: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_119 = _14->item;
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_122 = c_119->parents;
./benchmarks/git/leak_7/git_leak_7.c:99:29: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location
this stmt have mutiple branch ---memset-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (parent_95 != 0B)
./benchmarks/git/leak_7/git_leak_7.c:99:43: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_123 = parent_95->item;
./benchmarks/git/leak_7/git_leak_7.c:100:40: warning: use location
  100 |                         struct commit *p = parent->item;
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with study ========= [0m
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with study ========= [0m
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:study========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <var_decl 0x7fe775f89090 study
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:63:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe775f89000 found>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with study ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_123->object.flags = _25;
./benchmarks/git/leak_7/git_leak_7.c:103:41: warning: use location
  103 |                         p->object.flags |= STUDYING;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_123->object.flags = _25;
./benchmarks/git/leak_7/git_leak_7.c:103:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = p_123->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:103:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = p_123->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:101:38: warning: use location
  101 |                         if (p->object.flags & STUDYING)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = _23 & 2048;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 != 0)
./benchmarks/git/leak_7/git_leak_7.c:101:28: warning: use location
  101 |                         if (p->object.flags & STUDYING)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = c_119->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:97:35: warning: use location
   97 |                 else if (c->object.flags & SEEN)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = c_119->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:93:30: warning: use location
   93 |                 if (c->object.flags & INCOMPLETE) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = _21 & 1024;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_119->object.flags = _20;
./benchmarks/git/leak_7/git_leak_7.c:91:41: warning: use location
   91 |                         c->object.flags |= INCOMPLETE;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_119->object.flags = _20;
./benchmarks/git/leak_7/git_leak_7.c:91:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = c_119->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:91:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &c_119->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = parse_object (_17);
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = BIT_FIELD_REF <c_119->object, 8, 0>;
./benchmarks/git/leak_7/git_leak_7.c:90:21: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = _15 & 1;
./benchmarks/git/leak_7/git_leak_7.c:90:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:20: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:89:59: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9 + 4294967295;
./benchmarks/git/leak_7/git_leak_7.c:89:52: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
study.nr = _10;
./benchmarks/git/leak_7/git_leak_7.c:89:19: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:89:59: warning: use location
   89 |                 c = (struct commit *)study.objects[--study.nr].item;
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:85:21: warning: use location
   85 |         while (study.nr) {
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/git/leak_7/git_leak_7.c:85:16: warning: use location
   85 |         while (study.nr) {
      |                ^
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: free in this location
  145 |     free(study.objects);    /* memory leak */
      |     ^

===== possiable asias =====
parent_95 = PHI <parent_122(11), parent_127(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
if (parent_95 != 0B)
./benchmarks/git/leak_7/git_leak_7.c:99:43: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
if (parent_95 != 0B)
./benchmarks/git/leak_7/git_leak_7.c:99:43: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_147>
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_147>
parent_127 = parent_95->next;
./benchmarks/git/leak_7/git_leak_7.c:99:58: warning: use location
   99 |                 for (parent = c->parents; parent; parent = parent->next) {
      |                                                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
_27 = &p_123->object;
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_150>
_28 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:85:21: warning: use location
   85 |         while (study.nr) {
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_150>
_28 = study.nr;
./benchmarks/git/leak_7/git_leak_7.c:85:21: warning: use location
   85 |         while (study.nr) {
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
if (_28 != 0)
./benchmarks/git/leak_7/git_leak_7.c:85:16: warning: use location
   85 |         while (study.nr) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
if (_28 != 0)
./benchmarks/git/leak_7/git_leak_7.c:85:16: warning: use location
   85 |         while (study.nr) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_158>
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_158>
_84 = study.objects;
./benchmarks/git/leak_7/git_leak_7.c:145:15: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: free in this location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^

===== possiable asias =====
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: free in this location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^

===== possiable asias =====
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:9 [0m
[40;31m  	possible double free [rigorous]:9 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:9 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fe775f89000 found
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:64:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe776cfff30 is_incomplete>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fe775f89000 found
    type <record_type 0x7fe775f7a2a0 object_array TI
        size <integer_cst 0x7fe776457c00 constant 128>
        unit-size <integer_cst 0x7fe776457c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0
        fields <field_decl 0x7fe775f725f0 nr type <integer_type 0x7fe77646c690 unsigned int>
            unsigned SI ./benchmarks/git/leak_7/../git.h:365:15
            size <integer_cst 0x7fe776457df8 constant 32>
            unit-size <integer_cst 0x7fe776457e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fe776457be8 constant 0>
            bit-offset <integer_cst 0x7fe776457c30 constant 0> context <record_type 0x7fe775f7a2a0 object_array> chain <field_decl 0x7fe775f72558 alloc>> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
        pointer_to_this <pointer_type 0x7fe775f7a348>>
    addressable TI ./benchmarks/git/leak_7/git_leak_7.c:64:22 size <integer_cst 0x7fe776457c00 128> unit-size <integer_cst 0x7fe776457c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7fe775f70d00 commit_is_complete> chain <var_decl 0x7fe776cfff30 is_incomplete>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_163 = VDEF <.MEM_162>
add_object_array (_4, 0B, &study);
add_object_array (_4, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
   82 |         add_object_array(&commit->object, NULL, &study);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_163 = VDEF <.MEM_162>
add_object_array (_4, 0B, &study);
add_object_array (_4, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:82:9: warning: use location
   82 |         add_object_array(&commit->object, NULL, &study);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645f798
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &commit_112(D)->object;
    version:4
    ptr-info 0x7fe775f835e8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_164 = VDEF <.MEM_163>
add_object_array (_5, 0B, &found);
add_object_array (_5, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
   83 |         add_object_array(&commit->object, NULL, &found);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_164 = VDEF <.MEM_163>
add_object_array (_5, 0B, &found);
add_object_array (_5, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:83:9: warning: use location
   83 |         add_object_array(&commit->object, NULL, &found);
      |         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645f7e0
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &commit_112(D)->object;
    version:5
    ptr-info 0x7fe775f83600>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_167 = VDEF <.MEM_166>
_18 = parse_object (_17);
_18 = parse_object (_17);
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_18 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:39: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fb40
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &c_119->object.oid;
    version:17
    ptr-info 0x7fe775f83648>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>

 ================== pre trace ptable ================== 
trace fucntion name:parse_object 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>
is Other function parse_object
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_167 = VDEF <.MEM_166>
_18 = parse_object (_17);
_18 = parse_object (_17);
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_18 == 0)
./benchmarks/git/leak_7/git_leak_7.c:90:39: warning: use location
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fb88
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _18 = parse_object (_17);
    version:18>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_169>
add_object_array (_26, 0B, &study);
add_object_array (_26, 0B, &study);
./benchmarks/git/leak_7/git_leak_7.c:104:25: warning: use location
  104 |                         add_object_array(&p->object, NULL, &study);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fdc8
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _26 = &p_123->object;
    version:26
    ptr-info 0x7fe775f83660>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_170>
add_object_array (_27, 0B, &found);
add_object_array (_27, 0B, &found);
./benchmarks/git/leak_7/git_leak_7.c:105:25: warning: use location
  105 |                         add_object_array(&p->object, NULL, &found);
      |                         ^
this stmt call this function :add_object_array
trace fucntion name:add_object_array 
[40;44m =======trace_function_path add_object_array  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;46m =======add node_fun stack:add_object_array_with_path========= [0m
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘commit_is_complete’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe77645fe10
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &p_123->object;
    version:27
    ptr-info 0x7fe775f83678>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_35 == 0)
./benchmarks/git/leak_7/git_leak_7.c:116:28: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f8e048
    type <pointer_type 0x7fe775f7adc8
        type <record_type 0x7fe775f76d20 object_id BLK
            size <integer_cst 0x7fe775f667f8 constant 160>
            unit-size <integer_cst 0x7fe775f667e0 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f76d20 fields <field_decl 0x7fe775f72130 hash> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7adc8>>
        unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _34 = &_33->object.oid;
    version:34
    ptr-info 0x7fe775f836d8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>

 ================== pre trace ptable ================== 
trace fucntion name:tree_is_complete 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>
is Other function tree_is_complete
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_35 == 0)
./benchmarks/git/leak_7/git_leak_7.c:116:28: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f8e090
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _35 = tree_is_complete (_34);
    version:35>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_177 = VDEF <.MEM_158>
free (_84);
./benchmarks/git/leak_7/git_leak_7.c:145:5: warning: use location
  145 |     free(study.objects);    /* memory leak */
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:commit_is_complete========= [0m
[40;44m =======node_fun:add_object_array========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_object_array  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:add_object_array_with_path========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_object_array_with_path  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘add_object_array’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:add_object_array_with_path========= [0m
[40;42m =======start_check_funciton:add_object_array_with_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch --------
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_33 = VDEF <.MEM_32>
exit (1);
./benchmarks/git/leak_7/../git.h:422:25: warning: use location
  422 |                         die("Out of memory, realloc failed%s", "");
      |                         ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :5 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:31: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:12: warning: use location
   49 |         if (path)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array_with_path========= [0m
[40;42m =======pre_check_funciton:add_object_array========= [0m
[40;42m =======start_check_funciton:add_object_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘add_object_array’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘add_object_array’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96120
    type <pointer_type 0x7fe775f7a0a8
        type <record_type 0x7fe775f7a000 object BLK
            size <integer_cst 0x7fe776475078 constant 192>
            unit-size <integer_cst 0x7fe776475048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a000 fields <field_decl 0x7fe775f72428 parsed> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a0a8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c180 obj>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fe775f83978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96168
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c200 name>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fe775f83990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘add_object_array’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_6 = VDEF <.MEM_5(D)>
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
./benchmarks/git/leak_7/git_leak_7.c:58:9: warning: use location
   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
      |         ^
this stmt call this function :add_object_array_with_path
trace fucntion name:add_object_array_with_path 
[40;44m =======trace_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:add_object_array_with_path========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:objects========= [0m
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
objects_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:entry========= [0m
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
entry_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘add_object_array’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f961b0
    type <pointer_type 0x7fe775f7a348
        type <record_type 0x7fe775f7a2a0 object_array TI
            size <integer_cst 0x7fe776457c00 constant 128>
            unit-size <integer_cst 0x7fe776457c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a2a0 fields <field_decl 0x7fe775f725f0 nr> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a348>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c280 array>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fe775f839a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array========= [0m
[40;44m =======node_fun:add_object_array_with_path========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_object_array_with_path  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:add_object_array_with_path========= [0m
[40;42m =======start_check_funciton:add_object_array_with_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96630
    type <integer_type 0x7fe77646c690 unsigned int public unsigned SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c690 precision:32 min <integer_cst 0x7fe776457e28 0> max <integer_cst 0x7fe776457de0 4294967295>
        pointer_to_this <pointer_type 0x7fe776478690>>
    var <var_decl 0x7fe775f897e0 alloc>
    def_stmt alloc_18 = _1 * 2;
    version:18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---free-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
# .MEM_43 = VDEF <.MEM_42(D)>
_2 = st_mult (32, alloc_18);
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f962d0
    type <integer_type 0x7fe77646c5e8 int public SI
        size <integer_cst 0x7fe776457df8 constant 32>
        unit-size <integer_cst 0x7fe776457e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c5e8 precision:32 min <integer_cst 0x7fe776457db0 -2147483648> max <integer_cst 0x7fe776457dc8 2147483647>
        pointer_to_this <pointer_type 0x7fe7764739d8>>
   
    def_stmt _2 = st_mult (32, alloc_18);
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
is Other function 
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch --------
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f965e8
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_17 = array_14(D)->objects;
    version:17
    ptr-info 0x7fe775f83a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96318
    type <integer_type 0x7fe77646c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c738 precision:64 min <integer_cst 0x7fe776457e88 0> max <integer_cst 0x7fe776458500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe7764787e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_33 = VDEF <.MEM_32>
exit (1);
./benchmarks/git/leak_7/../git.h:422:25: warning: use location
  422 |                         die("Out of memory, realloc failed%s", "");
      |                         ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with objects ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
this stmt call this function :tree_is_complete
trace fucntion name:tree_is_complete 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find free stmt ================== 
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
_2 = st_mult (32, alloc_18);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:5 
_3 = (long unsigned int) _2;
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: use location
objects_17 = array_14(D)->objects;
./benchmarks/git/leak_7/git_leak_7.c:30:36: warning: use location
   30 |         struct object_array_entry *objects = array->objects;
      |                                    ^
alloc_16 = array_14(D)->alloc;
./benchmarks/git/leak_7/git_leak_7.c:29:18: warning: use location
   29 |         unsigned alloc = array->alloc;
      |                  ^
_1 = alloc_16 + 32;
./benchmarks/git/leak_7/git_leak_7.c:34:32: warning: use location
   34 |                 alloc = (alloc + 32) * 2;
      |                                ^
nr_15 = array_14(D)->nr;
./benchmarks/git/leak_7/git_leak_7.c:28:18: warning: use location
   28 |         unsigned nr = array->nr;
      |                  ^
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96678
    type <pointer_type 0x7fe775f7a498
        type <record_type 0x7fe775f7a3f0 object_array_entry BLK
            size <integer_cst 0x7fe776457f18 constant 256>
            unit-size <integer_cst 0x7fe776475018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe775f7a3f0 fields <field_decl 0x7fe775f72850 item> context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>
            pointer_to_this <pointer_type 0x7fe775f7a498>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fe775f89750 objects>
    def_stmt objects_21 = xrealloc (objects_17, _3);
    version:21
    ptr-info 0x7fe775f83a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
objects_9 = PHI <objects_17(2), objects_21(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location

===== possiable asias =====
entry_24 = objects_9 + _5;
./benchmarks/git/leak_7/git_leak_7.c:39:15: warning: use location
   39 |         entry = &objects[nr];
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_52 = VDEF <.MEM_40>
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_50 = VDEF <.MEM_47>
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_51 = VDEF <.MEM_47>
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_39>
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
array_14(D)->objects = objects_21;
./benchmarks/git/leak_7/git_leak_7.c:37:32: warning: use location
   37 |                 array->objects = objects;
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_56 = VDEF <.MEM_41>
array_14(D)->nr = nr_38;
./benchmarks/git/leak_7/git_leak_7.c:53:19: warning: use location
   53 |         array->nr = ++nr;
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_162 = VDEF <.MEM_161>
memset (&found, 0, 16);
./benchmarks/git/leak_7/git_leak_7.c:81:9: warning: use location
   81 |         memset(&found, 0, sizeof(found));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_29 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:115:55: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_32 = _29 + _31;
./benchmarks/git/leak_7/git_leak_7.c:115:63: warning: use location
  115 |                                 (struct commit *)found.objects[i].item;
      |                                                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
c_133 = _32->item;
./benchmarks/git/leak_7/git_leak_7.c:114:40: warning: use location
  114 |                         struct commit *c =
      |                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_174 = VDEF <.MEM_173>
c_133->object.flags = _37;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_173>
_36 = c_133->object.flags;
./benchmarks/git/leak_7/git_leak_7.c:118:49: warning: use location
  118 |                                 c->object.flags |= INCOMPLETE;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_33 = c_133->tree;
./benchmarks/git/leak_7/git_leak_7.c:116:49: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_34 = &_33->object.oid;
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_173 = VDEF <.MEM_153>
_35 = tree_is_complete (_34);
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: use location
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_153>
_38 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:113:38: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_38 > _39)
./benchmarks/git/leak_7/git_leak_7.c:113:31: warning: use location
  113 |                 for (i = 0; i < found.nr; i++) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_40 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_43 = _40 + _42;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_44 = _43->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_45 = _44->flags;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_172 = VDEF <.MEM_154>
_50->flags = _51;
./benchmarks/git/leak_7/git_leak_7.c:124:62: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_46 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:124:38: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_49 = _46 + _48;
./benchmarks/git/leak_7/git_leak_7.c:124:46: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_50 = _49->item;
./benchmarks/git/leak_7/git_leak_7.c:124:49: warning: use location
  124 |                                 found.objects[i].item->flags |= SEEN;
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_154>
_52 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:123:46: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_52 > _53)
./benchmarks/git/leak_7/git_leak_7.c:123:39: warning: use location
  123 |                         for (i = 0; i < found.nr; i++)
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_54 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_57 = _54 + _56;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_58 = _57->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_59 = _58->flags;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_179 = VDEF <.MEM_156>
_64->flags = _65;
./benchmarks/git/leak_7/git_leak_7.c:129:46: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_60 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:129:22: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_63 = _60 + _62;
./benchmarks/git/leak_7/git_leak_7.c:129:30: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_64 = _63->item;
./benchmarks/git/leak_7/git_leak_7.c:129:33: warning: use location
  129 |                 found.objects[i].item->flags &= ~STUDYING;
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_156>
_66 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:128:30: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_66 > _67)
./benchmarks/git/leak_7/git_leak_7.c:128:23: warning: use location
  128 |         for (i = 0; i < found.nr; i++)
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_70 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_73 = _70 + _72;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_74 = _73->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_75 = _74->flags;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_175 = VDEF <.MEM_157>
_80->flags = _81;
./benchmarks/git/leak_7/git_leak_7.c:142:54: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_76 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:142:30: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_79 = _76 + _78;
./benchmarks/git/leak_7/git_leak_7.c:142:38: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_80 = _79->item;
./benchmarks/git/leak_7/git_leak_7.c:142:41: warning: use location
  142 |                         found.objects[i].item->flags |= SEEN;
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_157>
_82 = found.nr;
./benchmarks/git/leak_7/git_leak_7.c:141:38: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
if (_82 > _83)
./benchmarks/git/leak_7/git_leak_7.c:141:31: warning: use location
  141 |                 for (i = 0; i < found.nr; i++)
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_177>
_85 = found.objects;
./benchmarks/git/leak_7/git_leak_7.c:146:15: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_178 = VDEF <.MEM_177>
free (_85);
./benchmarks/git/leak_7/git_leak_7.c:146:5: warning: use location
  146 |     free(found.objects);    /* memory leak */
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
array_14(D)->alloc = alloc_18;
./benchmarks/git/leak_7/git_leak_7.c:36:30: warning: use location
   36 |                 array->alloc = alloc;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_4 = (long unsigned int) nr_15;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
objects_21 = xrealloc (objects_17, _3);
./benchmarks/git/leak_7/git_leak_7.c:35:17: warning: free in this location
   35 |                 REALLOC_ARRAY(objects, alloc);
      |                 ^

===== possiable asias =====
_5 = _4 * 32;
./benchmarks/git/leak_7/git_leak_7.c:39:25: warning: use location
   39 |         entry = &objects[nr];
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :5 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96438
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _7 = strdup (name_27(D));
    version:7
    ptr-info 0x7fe775f839c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_52>
_8 = strdup (path_34(D));
_8 = strdup (path_34(D));
./benchmarks/git/leak_7/git_leak_7.c:50:31: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
if (path_34(D) != 0B)
./benchmarks/git/leak_7/git_leak_7.c:49:12: warning: use location
   49 |         if (path)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96480
    type <pointer_type 0x7fe775f761f8
        type <integer_type 0x7fe775f6fb28 char public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f761f8>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fe776462168 ./benchmarks/git/leak_7/git_leak_7.c>>
   
    def_stmt _8 = strdup (path_34(D));
    version:8
    ptr-info 0x7fe775f839d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_7 = strdup (name_27(D));
_7 = strdup (name_27(D));
./benchmarks/git/leak_7/git_leak_7.c:47:31: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^
this stmt call this function :strdup
entry_24->name = _7;
./benchmarks/git/leak_7/git_leak_7.c:47:29: warning: use location
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                             ^
entry_24->path = _8;
./benchmarks/git/leak_7/git_leak_7.c:50:29: warning: use location
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                             ^
entry_24->path = 0B;
./benchmarks/git/leak_7/git_leak_7.c:52:29: warning: use location
   52 |                 entry->path = NULL;
      |                             ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
   48 |         entry->mode = mode;
      |                     ^
entry_24->mode = mode_32(D);
./benchmarks/git/leak_7/git_leak_7.c:48:21: warning: use location
entry_24->name = &object_array_slopbuf;
./benchmarks/git/leak_7/git_leak_7.c:45:29: warning: use location
   45 |                 entry->name = object_array_slopbuf;
      |                             ^
entry_24->name = 0B;
./benchmarks/git/leak_7/git_leak_7.c:42:29: warning: use location
   42 |                 entry->name = NULL;
      |                             ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
   40 |         entry->item = obj;
      |                     ^
entry_24->item = obj_25(D);
./benchmarks/git/leak_7/git_leak_7.c:40:21: warning: use location
_6 = *name_27(D);
./benchmarks/git/leak_7/git_leak_7.c:43:19: warning: use location
   43 |         else if (!*name)
      |                   ^
if (_6 == 0)
./benchmarks/git/leak_7/git_leak_7.c:43:17: warning: use location
   43 |         else if (!*name)
      |                 ^
if (name_27(D) == 0B)
./benchmarks/git/leak_7/git_leak_7.c:41:12: warning: use location
   41 |         if (!name)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f96750
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c380 name>
    def_stmt GIMPLE_NOP
    version:27
    ptr-info 0x7fe775f83a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fe775f967e0
    type <pointer_type 0x7fe775f6fc78
        type <integer_type 0x7fe775f6fbd0 char readonly public QI
            size <integer_cst 0x7fe776457ca8 constant 8>
            unit-size <integer_cst 0x7fe776457cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fe77646c3f0 precision:8 min <integer_cst 0x7fe775f66720 -128> max <integer_cst 0x7fe775f66708 127>
            pointer_to_this <pointer_type 0x7fe775f6fc78>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fe775f7c500 path>
    def_stmt GIMPLE_NOP
    version:34
    ptr-info 0x7fe775f83a98>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_object_array_with_path========= [0m
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
In function ‘xrealloc’:
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e0d8
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_17 = realloc (ptr_14(D), size_15(D));
    version:17
    ptr-info 0x7fe775f83b10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e120
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_19 = realloc (ptr_14(D), 1);
    version:19
    ptr-info 0x7fe775f83b28>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e168
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_21 = realloc (ptr_14(D), size_15(D));
    version:21
    ptr-info 0x7fe775f83b40>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_4 = ret_21 == 0B;
./benchmarks/git/leak_7/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/git/leak_7/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
_5 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_2 = size_15(D) == 0;
./benchmarks/git/leak_7/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe775f9e1b0
    type <pointer_type 0x7fe776473000
        type <void_type 0x7fe77646cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fe776473000>>
        public unsigned DI
        size <integer_cst 0x7fe776457bb8 constant 64>
        unit-size <integer_cst 0x7fe776457bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fe7764789d8>>
    var <var_decl 0x7fe775f89bd0 ret>
    def_stmt ret_23 = realloc (ptr_14(D), 1);
    version:23
    ptr-info 0x7fe775f83b58>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_8 = PHI <ret_21(5), ret_23(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_9 = PHI <ret_7(4), ret_8(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
if (ret_8 == 0B)
./benchmarks/git/leak_7/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
ret_19 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_24>
ret_21 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_30>
ret_23 = realloc (ptr_14(D), 1);
./benchmarks/git/leak_7/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

===== possiable asias =====
ret_7 = PHI <ret_17(2), ret_19(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_1 = ret_17 == 0B;
./benchmarks/git/leak_7/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
_3 = _1 & _2;
./benchmarks/git/leak_7/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_27(D)>
ret_17 = realloc (ptr_14(D), size_15(D));
./benchmarks/git/leak_7/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^

===== possiable asias =====
if (_3 != 0)
./benchmarks/git/leak_7/../git.h:415:12: warning: use location
  415 |         if (!ret && !size)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
commit_is_complete (&commit);
commit ={v} {CLOBBER};
return 0;

=======Mapping node_fun:commit_is_complete=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 102253939]:
_1 = commit_112(D)->object.flags;
_110 = _1 & 1;
if (_110 != 0)
  goto <bb 35>; [34.00%]
else
  goto <bb 3>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 67487599]:
_3 = commit_112(D)->object.flags;
_128 = _3 & 1024;
if (_128 != 0)
  goto <bb 35>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 32987938]:
memset (&study, 0, 16);
memset (&found, 0, 16);
_4 = &commit_112(D)->object;
add_object_array (_4, 0B, &study);
_5 = &commit_112(D)->object;
add_object_array (_5, 0B, &found);
_6 = commit_112(D)->object.flags;
_7 = _6 | 2048;
commit_112(D)->object.flags = _7;
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 291410163]:
_8 = study.objects;
_9 = study.nr;
_10 = _9 + 4294967295;
study.nr = _10;
_11 = study.nr;
_12 = (long unsigned int) _11;
_13 = _12 * 32;
_14 = _8 + _13;
c_119 = _14->item;
_15 = BIT_FIELD_REF <c_119->object, 8, 0>;
_16 = _15 & 1;
if (_16 == 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 96165353]:
_17 = &c_119->object.oid;
_18 = parse_object (_17);
if (_18 == 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 48082677]:
_19 = c_119->object.flags;
_20 = _19 | 1024;
c_119->object.flags = _20;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 291410164]:
_21 = c_119->object.flags;
_129 = _21 & 1024;
if (_129 != 0)
  goto <bb 19>; [5.50%]
else
  goto <bb 9>; [94.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 275382605]:
_22 = c_119->object.flags;
_130 = _22 & 1;
if (_130 != 0)
  goto <bb 10>; [57.11%]
else
  goto <bb 11>; [42.89%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 157271005]:
// predicted unlikely by continue predictor.
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 118111600]:
parent_122 = c_119->parents;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 955630226]:
p_123 = parent_95->item;
_23 = p_123->object.flags;
_135 = _23 & 2048;
if (_135 != 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 477815113]:
// predicted unlikely by continue predictor.
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 477815113]:
_24 = p_123->object.flags;
_25 = _24 | 2048;
p_123->object.flags = _25;
_26 = &p_123->object;
add_object_array (_26, 0B, &study);
_27 = &p_123->object;
add_object_array (_27, 0B, &found);

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 955630226]:
parent_127 = parent_95->next;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 1073741824]:
# parent_95 = PHI <parent_122(11), parent_127(15)>
if (parent_95 != 0B)
  goto <bb 12>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 275382605]:

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 308370543]:
_28 = study.nr;
if (_28 != 0)
  goto <bb 5>; [94.50%]
else
  goto <bb 19>; [5.50%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 32987939]:
# is_incomplete_87 = PHI <1(8), 0(18)>
if (is_incomplete_87 == 0)
  goto <bb 38>; [50.00%]
else
  goto <bb 27>; [50.00%]

=======is loop:0=========

 bb index 38 
<bb 38> [local count: 16493970]:
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 133451207]:
_29 = found.objects;
_30 = (long unsigned int) i_91;
_31 = _30 * 32;
_32 = _29 + _31;
c_133 = _32->item;
_33 = c_133->tree;
_34 = &_33->object.oid;
_35 = tree_is_complete (_34);
if (_35 == 0)
  goto <bb 21>; [50.00%]
else
  goto <bb 22>; [50.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 66725604]:
_36 = c_133->object.flags;
_37 = _36 | 1024;
c_133->object.flags = _37;

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 133451207]:
# is_incomplete_88 = PHI <is_incomplete_89(20), 1(21)>
i_137 = i_91 + 1;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 149945177]:
# is_incomplete_89 = PHI <is_incomplete_87(38), is_incomplete_88(22)>
# i_91 = PHI <0(38), i_137(22)>
_38 = found.nr;
_39 = (unsigned int) i_91;
if (_38 > _39)
  goto <bb 20>; [89.00%]
else
  goto <bb 24>; [11.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 16493969]:
if (is_incomplete_89 == 0)
  goto <bb 37>; [50.00%]
else
  goto <bb 27>; [50.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [local count: 8246985]:
goto <bb 26>; [100.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 66725604]:
_40 = found.objects;
_41 = (long unsigned int) i_92;
_42 = _41 * 32;
_43 = _40 + _42;
_44 = _43->item;
_45 = _44->flags;
_46 = found.objects;
_47 = (long unsigned int) i_92;
_48 = _47 * 32;
_49 = _46 + _48;
_50 = _49->item;
_51 = _45 | 1;
_50->flags = _51;
i_132 = i_92 + 1;

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 74972588]:
# i_92 = PHI <0(37), i_132(25)>
_52 = found.nr;
_53 = (unsigned int) i_92;
if (_52 > _53)
  goto <bb 25>; [89.00%]
else
  goto <bb 27>; [11.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [local count: 32987939]:
# is_incomplete_90 = PHI <is_incomplete_87(19), is_incomplete_89(24), is_incomplete_89(26)>
goto <bb 29>; [100.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 266902415]:
_54 = found.objects;
_55 = (long unsigned int) i_93;
_56 = _55 * 32;
_57 = _54 + _56;
_58 = _57->item;
_59 = _58->flags;
_60 = found.objects;
_61 = (long unsigned int) i_93;
_62 = _61 * 32;
_63 = _60 + _62;
_64 = _63->item;
_65 = _59 & 134215679;
_64->flags = _65;
i_145 = i_93 + 1;

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 299890354]:
# i_93 = PHI <0(27), i_145(28)>
_66 = found.nr;
_67 = (unsigned int) i_93;
if (_66 > _67)
  goto <bb 28>; [89.00%]
else
  goto <bb 30>; [11.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [local count: 32987939]:
if (is_incomplete_90 != 0)
  goto <bb 31>; [50.00%]
else
  goto <bb 36>; [50.00%]

=======is loop:0=========

 bb index 36 
<bb 36> [local count: 16493970]:
goto <bb 33>; [100.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [local count: 16493969]:
_68 = commit_112(D)->object.flags;
_69 = _68 | 1024;
commit_112(D)->object.flags = _69;
goto <bb 34>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 133451207]:
_70 = found.objects;
_71 = (long unsigned int) i_94;
_72 = _71 * 32;
_73 = _70 + _72;
_74 = _73->item;
_75 = _74->flags;
_76 = found.objects;
_77 = (long unsigned int) i_94;
_78 = _77 * 32;
_79 = _76 + _78;
_80 = _79->item;
_81 = _75 | 1;
_80->flags = _81;
i_139 = i_94 + 1;

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 149945177]:
# i_94 = PHI <0(36), i_139(32)>
_82 = found.nr;
_83 = (unsigned int) i_94;
if (_82 > _83)
  goto <bb 32>; [89.00%]
else
  goto <bb 34>; [11.00%]

=======is loop:0=========

 bb index 34 
<bb 34> [local count: 32987939]:
_84 = study.objects;
free (_84);
_85 = found.objects;
free (_85);
_86 = is_incomplete_90 == 0;
_143 = (int) _86;

=======is loop:0=========

 bb index 35 
<bb 35> [local count: 102253939]:
# _96 = PHI <1(2), 0(3), _143(34)>
study ={v} {CLOBBER};
found ={v} {CLOBBER};
return _96;

=======Mapping node_fun:add_object_array=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
add_object_array_with_path (obj_2(D), name_3(D), array_4(D), 12288, 0B);
return;

=======Mapping node_fun:add_object_array_with_path=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
nr_15 = array_14(D)->nr;
alloc_16 = array_14(D)->alloc;
objects_17 = array_14(D)->objects;
if (nr_15 >= alloc_16)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_1 = alloc_16 + 32;
alloc_18 = _1 * 2;
_2 = st_mult (32, alloc_18);
_3 = (long unsigned int) _2;
objects_21 = xrealloc (objects_17, _3);
array_14(D)->alloc = alloc_18;
array_14(D)->objects = objects_21;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# objects_9 = PHI <objects_17(2), objects_21(3)>
_4 = (long unsigned int) nr_15;
_5 = _4 * 32;
entry_24 = objects_9 + _5;
entry_24->item = obj_25(D);
if (name_27(D) == 0B)
  goto <bb 5>; [30.00%]
else
  goto <bb 6>; [70.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 322122544]:
entry_24->name = 0B;
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 751619281]:
_6 = *name_27(D);
if (_6 == 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 8>; [33.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 503584919]:
entry_24->name = &object_array_slopbuf;
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 248034361]:
_7 = strdup (name_27(D));
entry_24->name = _7;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 1073741824]:
entry_24->mode = mode_32(D);
if (path_34(D) != 0B)
  goto <bb 10>; [53.47%]
else
  goto <bb 11>; [46.53%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 574129753]:
_8 = strdup (path_34(D));
entry_24->path = _8;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 499612072]:
entry_24->path = 0B;

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
nr_38 = nr_15 + 1;
array_14(D)->nr = nr_38;
return;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_17 = realloc (ptr_14(D), size_15(D));
_1 = ret_17 == 0B;
_2 = size_15(D) == 0;
_3 = _1 & _2;
if (_3 != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
ret_19 = realloc (ptr_14(D), 1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# ret_7 = PHI <ret_17(2), ret_19(3)>
if (ret_7 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429496]:
ret_21 = realloc (ptr_14(D), size_15(D));
_4 = ret_21 == 0B;
_5 = size_15(D) == 0;
_6 = _4 & _5;
if (_6 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 141734]:
ret_23 = realloc (ptr_14(D), 1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 429496]:
# ret_8 = PHI <ret_21(5), ret_23(6)>
if (ret_8 == 0B)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 172]:
printf ("Out of memory, realloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 1073741653]:
# ret_9 = PHI <ret_7(4), ret_8(7)>
return ret_9;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 6 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    all ptable point : 29 [0m
[40;34m    analyzable ptable point : 26 [0m
[40;34m    used_stmt array stack totalsize of : 0.011680 mb[0m
[40;34m    collect time: : 0.004932 s [0m
[40;34m    algorithm time: 0.271815 s [0m
[40;34m    gimple stmt count : : 191 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:58 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 73%)
 phase opt and generate             :   0.12 (100%)   0.18 ( 95%)   0.31 (100%)   756k ( 25%)
 phase stream in                    :   0.00 (  0%)   0.01 (  5%)   0.00 (  0%)    52k (  2%)
 callgraph functions expansion      :   0.03 ( 25%)   0.01 (  5%)   0.03 ( 10%)   595k ( 20%)
 ipa lto gimple in                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)   107k (  4%)
 ipa lto decl in                    :   0.00 (  0%)   0.01 (  5%)   0.00 (  0%)    43k (  1%)
 tree CCP                           :   0.02 ( 17%)   0.01 (  5%)   0.00 (  0%)  1144  (  0%)
 tree backward propagate            :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)     0  (  0%)
 combiner                           :   0.01 (  8%)   0.00 (  0%)   0.01 (  3%)    27k (  1%)
 plugin execution                   :   0.09 ( 75%)   0.17 ( 89%)   0.27 ( 87%)  2656  (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)    16k (  1%)
 TOTAL                              :   0.12          0.19          0.31         2967k
/usr/bin/ld: /tmp/ccvTnVkC.ltrans0.ltrans.o: in function `add_object_array_with_path':
<artificial>:(.text+0x108): undefined reference to `st_mult'
/usr/bin/ld: /tmp/ccvTnVkC.ltrans0.ltrans.o: in function `commit_is_complete':
<artificial>:(.text+0x22f): undefined reference to `parse_object'
/usr/bin/ld: <artificial>:(.text+0x2bc): undefined reference to `tree_is_complete'
collect2: error: ld returned 1 exit status
